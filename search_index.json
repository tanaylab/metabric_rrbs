[["index.html", "DNA methylation landscapes of 1538 breast cancers reveal a replication-linked clock, epigenomic instability and cis-regulation 1 DNA methylation landscapes of 1538 breast cancers reveal a replication-linked clock, epigenomic instability and cis-regulation 1.1 Run the notebooks 1.2 Dependencies 1.3 Notebook order 1.4 Find a specific figure", " DNA methylation landscapes of 1538 breast cancers reveal a replication-linked clock, epigenomic instability and cis-regulation Aviezer Lifshitz 2021-08-10 1 DNA methylation landscapes of 1538 breast cancers reveal a replication-linked clock, epigenomic instability and cis-regulation Following is the code that generates the figures for the METABRIC RRBS paper. The code is splitted to jupyter notebooks that can be found at: https://github.com/tanaylab/metabric_rrbs 1.1 Run the notebooks Due to the size of the METABRIC-RRBS dataset (~2.2TB full, 55GB pileup alone), we generated a few smaller processed files to help reproduce the analysis. Even this bundle is quite large (~50GB), and you can download it from: https://tanaylab.weizmann.ac.il/metabric_rrbs/analysis_files.tar.gz The above file contains a folder named db and a folder named data. Please copy them to the main folder before running the notebooks. See files.md for a description of these files and pipeline.Rmd for the code that generated them. 1.2 Dependencies The initialization script (scripts/init.R) installs automatically the necessary R packages to run the notebooks. 1.3 Notebook order It is recommended to run the notebooks in the following order: coverage-stats TME Epigenomic-scores Loss-clock epigenomic-instability CNA mutations survival cis dosage-compensation Running in a different order might work for some of the notebooks, but it might fail for others due to dependencies to data that was generated in previous notebooks. 1.4 Find a specific figure figures-key.md lists where each figure in the paper was generated. "],["metabric-methylation-data-statistics.html", "2 METABRIC methylation data statistics 2.1 Breakdown of samples 2.2 Number of samples 2.3 Total number of reads 2.4 Distribution of CpG coverage per sample 2.5 Distribution of covered CpGs 2.6 Promoter coverage 2.7 Coverage per clinical annotations 2.8 Marginal CpG coverage 2.9 Sample cellularity", " 2 METABRIC methylation data statistics source(here::here(&quot;scripts/init.R&quot;)) 2.1 Breakdown of samples 2.1.0.1 Figure 1A options(repr.plot.width = 7, repr.plot.height = 7) p_donut &lt;- samp_data %&gt;% count(IHC) %&gt;% filter(!is.na(IHC)) %&gt;% left_join( tibble( IHC = c(&quot;ER+HER2-&quot;, &quot;ER+HER2+&quot;, &quot;ER-HER2+&quot;, &quot;TNBC&quot;, &quot;ADJNORMAL&quot;), group = c(&quot;ER+&quot;, &quot;ER+HER2+&quot;, &quot;ER-HER2+&quot;, &quot;Triple negative&quot;, &quot;Adjacent normal&quot;) ), by = &quot;IHC&quot;) %&gt;% mutate( IHC = factor(IHC, levels = c(&quot;ER+HER2-&quot;, &quot;ER+HER2+&quot;, &quot;ER-HER2+&quot;, &quot;TNBC&quot;, &quot;ADJNORMAL&quot;)), lab = glue(&quot;{group}\\n({n})&quot;) ) %&gt;% ggpubr::ggdonutchart(&quot;n&quot;, &quot;lab&quot;, fill = &quot;IHC&quot;, lab.pos = &quot;out&quot;, palette = annot_colors$IHC, font.family = &quot;Arial&quot;, lab.font = c(6, &quot;bold&quot;, &quot;black&quot;), ggtheme = ggpubr::theme_pubr(base_size = 6, base_family = &quot;Arial&quot;)) + guides(fill = &quot;none&quot;) p_donut1 &lt;- samp_data %&gt;% count(ER1) %&gt;% rename(ER = ER1) %&gt;% filter(!is.na(ER)) %&gt;% left_join( tibble( ER = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;), group = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;Adjacent normal&quot;) ), by = &quot;ER&quot;) %&gt;% mutate( ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;)), lab = glue(&quot;{group}\\n({n})&quot;) ) %&gt;% ggpubr::ggdonutchart(&quot;n&quot;, &quot;lab&quot;, fill = &quot;ER&quot;, lab.pos = &quot;out&quot;, palette = annot_colors$ER1, font.family = &quot;Arial&quot;, lab.font = c(6, &quot;bold&quot;, &quot;black&quot;), ggtheme = ggpubr::theme_pubr(base_size = 6, base_family = &quot;Arial&quot;)) + guides(fill = &quot;none&quot;) p_donut p_donut1 2.2 Number of samples samp_data %&gt;% mutate(ER1 = forcats::fct_explicit_na(ER1)) %&gt;% count(ER1) ## # A tibble: 4 x 2 ## ER1 n ## 1 ER- 350 ## 2 ER+ 1179 ## 3 normal 244 ## 4 (Missing) 9 2.3 Total number of reads tot_reads &lt;- fread(here(&quot;data/sample_qc.csv&quot;)) %&gt;% inner_join(samp_data %&gt;% select(track), by = &quot;track&quot;) %&gt;% pull(total_reads) %&gt;% sum() glue(&quot;Overall, we used {round(tot_reads / 1e9, digits = 1)}B reads to cover {scales::comma(nrow(samp_data))} breast tumor and normal samples&quot;) ## Overall, we used 30.4B reads to cover 1,782 breast tumor and normal samples 2.4 Distribution of CpG coverage per sample We calculate the distribution of every sample's CpG coverage: samp_covs &lt;- get_samples_coverage_dist( tracks = samp_data$track, breaks = c(0:100, 1e5), intervals = gintervals.all()) %cache_df% here(&quot;data/sample_coverage_dist.tsv&quot;) %&gt;% as_tibble() samp_covs &lt;- samp_covs %&gt;% left_join(samp_data %&gt;% select(samp, ER = ER1), by = &quot;samp&quot;) 2.4.0.1 Figure 1B options(repr.plot.width = 7, repr.plot.height = 7) p_comulative &lt;- samp_covs %&gt;% group_by(samp) %&gt;% summarise( `&gt;=10` = sum(cpgs[cov &gt;= 10]), `&gt;=20` = sum(cpgs[cov &gt;= 20]), `&gt;=30` = sum(cpgs[cov &gt;= 30]), `&gt;=50` = sum(cpgs[cov &gt;= 50]), n_tot = sum(cpgs) ) %&gt;% gather(&quot;type&quot;, &quot;n&quot;, -samp, -n_tot) %&gt;% ggplot(aes(x = n, color = type, y = 1 - ..y..)) + stat_ecdf() + scale_x_log10(labels = scales::scientific) + scale_color_viridis_d(&quot;CpG coverage&quot;) + scale_y_continuous(labels = function(x) round(x * length(unique(samp_covs$samp)))) + ylab(&quot;Samples with #CpGs &gt;= x&quot;) + xlab(&quot;# of CpGs (log10)&quot;) + theme(aspect.ratio = 0.8) p_comulative + theme_bw() + theme(aspect.ratio = 0.8) cov_above_10 &lt;- samp_covs %&gt;% filter(cov &gt;= 10) %&gt;% group_by(samp) %&gt;% summarise(cpgs = sum(cpgs)) df &lt;- cov_above_10 %&gt;% summarise(n_threshold = sum(cpgs &gt;= 1e6), n_tot = n()) %&gt;% mutate(p = scales::percent(n_threshold / n_tot)) glue(&quot;Number of samples (Y axis) with a given number of CpGs (X axis) covered with at least 10, 20, 30 or 50 reads. For example, in all samples 449,710 CpGs are covered with over 10 reads.&quot;, n_cpgs = scales::comma(min(cov_above_10$cpgs))) ## Number of samples (Y axis) with a given number of CpGs (X axis) covered with at least 10, 20, 30 or 50 reads. For example, in all samples 449,710 CpGs are covered with over 10 reads. glue(&quot;Using our version of the RRBS protocol {perc} of the samples were covered by more than 10 reads for more than 1M CpGs&quot;, perc = df$p) ## Using our version of the RRBS protocol 93% of the samples were covered by more than 10 reads for more than 1M CpGs 2.5 Distribution of covered CpGs We screen for CpGs that are covered by at least 5 reads in half or more of the samples: min_samples &lt;- round(0.5 * nrow(samp_data)) min_samples ## [1] 891 cov_cpgs &lt;- gscreen_coverage(samp_data$track, 5, min_samples) %&gt;% annotate_loci() %cache_df% here(&quot;data/cov_cpgs.tsv&quot;) %&gt;% as_tibble() 2.5.0.1 Figure 1C options(repr.plot.width = 7, repr.plot.height = 3) p_tss &lt;- cov_cpgs %&gt;% mutate(tss_d = abs(tss_d) + 1) %&gt;% ggplot(aes(x = tss_d)) + geom_density() + scale_x_log10() + xlab(&quot;Distance from tss (bp)&quot;) + ylab(&quot;Density&quot;) p_cg_cont &lt;- cov_cpgs %&gt;% ggplot(aes(x = cg_cont)) + geom_density() + xlab(&quot;CpG content (500 bp)&quot;) + ylab(&quot;Density&quot;) (p_tss + theme_bw()) + (p_cg_cont + theme_bw()) ## Warning: Removed 147 rows containing non-finite values (stat_density). 2.6 Promoter coverage Distribution of mean promoter coverage over all METABRIC samples, considering 13,282 active promoters. Active promoters were defined as promoters that had log expression &gt;7 in at least one of the METABRIC samples used in this paper. 2.6.0.1 Figure 1D options(repr.plot.width = 4.6, repr.plot.height = 2.7) prom_expr_cov &lt;- get_promoter_expr_covs() min_n_expr &lt;- 0 max_expr &lt;- 7 prom_expr_cov_active &lt;- prom_expr_cov %&gt;% filter(n_expr &gt; min_n_expr, max_expr &gt; !! max_expr) p_prom_cov &lt;- prom_expr_cov_active %&gt;% ggplot(aes(x = cov)) + geom_histogram(binwidth = 0.1) + scale_x_log10(breaks = c(1, 10, 50, 1000), labels = function(x) round(x)) + coord_cartesian(xlim = c(0.01,1500)) + ylab(&quot;# of promoters&quot;) + xlab(&quot;Mean promoter coverage&quot;) p_prom_cov + theme_bw() ## Warning: Transformation introduced infinite values in continuous x-axis ## Warning: Removed 119 rows containing non-finite values (stat_bin). nrow(prom_expr_cov_active) ## [1] 13198 n_cov &lt;- prom_expr_cov_active %&gt;% filter(cov &gt;= 20) %&gt;% nrow() glue(&quot;{perc} of the promoters were nevertheless covered with over 20 reads on average (mean coverage {cov}), facilitating quantitative analysis downstream.&quot;, perc = scales::percent(n_cov / nrow(prom_expr_cov_active)), cov = round(mean(prom_expr_cov_active$cov) )) ## 75% of the promoters were nevertheless covered with over 20 reads on average (mean coverage 246), facilitating quantitative analysis downstream. samp_tot_calls &lt;- get_sample_tot_meth_calls() %cache_df% here(&quot;data/sample_tot_meth_calls.tsv&quot;) %&gt;% as_tibble() samp_tot_calls_promoters &lt;- get_sample_tot_meth_calls(promoter_intervs) %cache_df% here(&quot;data/sample_tot_meth_calls_promoters.tsv&quot;) %&gt;% as_tibble() tot_reads &lt;- sum(samp_tot_calls$Sum) tot_promoter_reads &lt;- sum(samp_tot_calls_promoters$Sum) glue(&quot;{perc} of the reads mapped to bona-fide promoters&quot;, perc = scales::percent(tot_promoter_reads / tot_reads)) ## 9% of the reads mapped to bona-fide promoters We can also calculate the % of MSP1 fragments that is covering a promoter: well_covered_loci &lt;- { msp1_meth &lt;- get_msp1_meth() msp1_meth_f &lt;- filter_avg_meth(msp1_meth$avg, normal_fraction = 0.7, tumor_fraction = 0.7) msp1_meth_f %&gt;% select(chrom, start, end) } %cache_df% here(&quot;data/well_covered_msp1_frags.tsv&quot;) %&gt;% as_tibble() n_loci &lt;- nrow(well_covered_loci) n_promoters &lt;- well_covered_loci %&gt;% gintervals.neighbors1(promoter_intervs) %&gt;% filter(dist == 0) %&gt;% nrow() scales::percent(n_promoters / n_loci) ## [1] &quot;10%&quot; 2.7 Coverage per clinical annotations samp_covs &lt;- get_sample_tot_meth_calls() %cache_df% here(&quot;data/sample_tot_meth_calls.tsv&quot;) %&gt;% as_tibble() samp_covs &lt;- samp_covs %&gt;% select(samp, tot_cov = Sum) %&gt;% left_join(samp_data %&gt;% select(samp, stage, grade, iC10, ER = ER1), by = &quot;samp&quot;) %&gt;% mutate(stage = ifelse(stage %in% c(0, &quot;DCIS&quot;, 1), &quot;0-1&quot;, stage)) %&gt;% mutate(stage = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, stage)) %&gt;% mutate(grade = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, grade)) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) 2.7.0.1 Extended Data Figure 1a options(repr.plot.width = 10, repr.plot.height = 3) p_stage &lt;- samp_covs %&gt;% filter(!is.na(stage), !is.na(ER)) %&gt;% arrange(stage, tot_cov) %&gt;% mutate(samp = forcats::fct_inorder(samp)) %&gt;% ggplot(aes(x = samp, y = tot_cov, fill = stage)) + geom_col() + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + scale_y_continuous(labels = scales::unit_format(unit = &quot;M&quot;, scale = 1e-6)) + scale_x_discrete(breaks = FALSE) + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + xlab(&quot;&quot;) + ylab(&quot;# of methylation calls&quot;) p_stage + theme_bw() + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) 2.7.0.2 Extended Data Figure 1b options(repr.plot.width = 10, repr.plot.height = 3) p_iC10 &lt;- samp_covs %&gt;% filter(!is.na(iC10), !is.na(ER)) %&gt;% mutate(iC10 = factor(iC10, levels = names(annot_colors$iC10))) %&gt;% arrange(iC10, tot_cov) %&gt;% mutate(samp = forcats::fct_inorder(samp)) %&gt;% ggplot(aes(x = samp, y = tot_cov, fill = iC10)) + geom_col() + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + scale_y_continuous(labels = scales::unit_format(unit = &quot;M&quot;, scale = 1e-6)) + scale_x_discrete(breaks = FALSE) + scale_fill_manual(values = annot_colors$iC10) + xlab(&quot;&quot;) + ylab(&quot;# of methylation calls&quot;) p_iC10 + theme_bw() + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) 2.8 Marginal CpG coverage cpg_mars &lt;- covs_marginal(samp_data$track) %cache_df% here(&quot;data/cpg_cov_marginal.tsv&quot;) %&gt;% as_tibble() cpg_mars &lt;- cpg_mars %&gt;% mutate(mean_cov = cov / nrow(samp_data)) cov_cdf &lt;- map_df(c(0:100, seq(200, 1000, 20)), ~ tibble(cov = .x, n = sum(cpg_mars$mean_cov &gt;= .x))) %cache_df% here(&quot;data/cpg_cov_cdf.tsv&quot;) %&gt;% as_tibble() 2.8.0.1 Extended Data Figure 1b options(repr.plot.width = 4.4, repr.plot.height = 3.5) p_cov_cdf &lt;- cov_cdf %&gt;% filter(cov &gt;= 1) %&gt;% ggplot(aes(x = cov, y = n)) + geom_line() + scale_y_log10(labels = scales::scientific) + scale_x_log10() + xlab(&quot;Average CpG coverage&quot;) + ylab(&quot;# of CpGs&quot;) p_cov_cdf + theme_bw() ## Warning: Transformation introduced infinite values in continuous y-axis 2.8.1 Marginal CpG coverage of k4me1 hotspots conf &lt;- main_config$genomic_regions$enhancers conf$H3K4me1_tracks ## [1] &quot;Roadmap.Breast_Luminal_Epithelial_Cells.H3K4me1&quot; ## [2] &quot;Roadmap.Breast_Myoepithelial_Cells.H3K4me1_1&quot; ## [3] &quot;Roadmap.Breast_Myoepithelial_Cells.H3K4me1_2&quot; ## [4] &quot;encode.Tfbs.HMECwgEncodeBroadHistoneHmecH3k4me1StdSig&quot; conf$H3K4me1_thresh ## [1] 0.97 conf$H3K4me1_size ## [1] 200 intervs &lt;- gpatterns.putative_enhancers(conf$H3K4me1_tracks, quant_thresh = conf$H3K4me1_thresh, normalize = conf$H3K4me1_size, min_tss_dist = conf$H3K4me1_tss_dist) k4me1_mars &lt;- cpg_mars %&gt;% gintervals.neighbors1(intervs) %&gt;% filter(dist == 0) %&gt;% group_by(chrom1, start1, end1) %&gt;% summarise(cov = sum(cov), mean_cov = cov / nrow(samp_data)) k4me1_mars &lt;- k4me1_mars %&gt;% ungroup() %&gt;% select(chrom = chrom1, start = start1, end = end1, cov, mean_cov) 2.8.1.1 Extended Data Figure 1c options(repr.plot.width = 4.4, repr.plot.height = 3.5) p_k4me1 &lt;- k4me1_mars %&gt;% ggplot(aes(x = mean_cov, y = (1 - ..y..) * nrow(k4me1_mars))) + stat_ecdf() + scale_y_log10(labels = scales::scientific, breaks = c(10, 1e3, 1e4, 1e5)) + scale_x_log10(breaks = c(1, 10, 30, 100, 1000)) + xlab(&quot;Mean coverage&quot;) + ylab(&quot;# of k4me1 hotsplots&quot;) + vertical_labs() p_k4me1 + theme_bw() ## Warning: Transformation introduced infinite values in continuous y-axis k4me1_mars &lt;- cpg_mars %&gt;% gintervals.neighbors1(enh_intervs_tumors) %&gt;% filter(dist == 0) %&gt;% group_by(chrom1, start1, end1) %&gt;% summarise(cov = sum(cov), mean_cov = cov / nrow(samp_data)) k4me1_mars &lt;- k4me1_mars %&gt;% ungroup() %&gt;% select(chrom = chrom1, start = start1, end = end1, cov, mean_cov) options(repr.plot.width = 4.4, repr.plot.height = 3.5) p_k4me1_tumors &lt;- k4me1_mars %&gt;% ggplot(aes(x = mean_cov, y = (1 - ..y..) * nrow(k4me1_mars))) + stat_ecdf() + scale_y_log10(labels = scales::scientific, breaks = c(10, 1e3, 1e4, 1e5)) + scale_x_log10(breaks = c(1, 10, 30, 100, 1000)) + xlab(&quot;Mean coverage&quot;) + ylab(&quot;# of k4me1 hotsplots&quot;) + vertical_labs() p_k4me1_tumors + theme_bw() ## Warning: Transformation introduced infinite values in continuous y-axis 2.9 Sample cellularity 2.9.0.1 Extended Data Figure 1d p_cellularity_cov &lt;- samp_covs %&gt;% filter(!is.na(ER)) %&gt;% left_join(samp_data %&gt;% select(samp, cna_cellularity)) %&gt;% slice(sample(1:n())) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x = tot_cov, y = cna_cellularity, color = ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + scale_x_log10() + theme(aspect.ratio = 1) + guides(color = FALSE) + xlab(&quot;Sample Coverage&quot;) + ylab(&quot;Cellularity&quot;) + vertical_labs() + facet_grid(.~ER) ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_cellularity_cov ## Warning: Removed 279 rows containing missing values (geom_point). samp_genomic_meth &lt;- get_genomic_avg_meth() %&gt;% intervs_to_mat() %&gt;% colMeans(na.rm=TRUE) %&gt;% enframe(&quot;samp&quot;, &quot;meth&quot;) %cache_df% here(&quot;data/samp_genomic_meth.tsv&quot;) %&gt;% as_tibble() p_cellularity_meth &lt;- samp_genomic_meth %&gt;% left_join(samp_data %&gt;% select(samp, cna_cellularity, ER = ER1)) %&gt;% filter(!is.na(ER)) %&gt;% slice(sample(1:n())) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x = meth, y = cna_cellularity, color = ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + guides(color = FALSE) + xlab(&quot;Sample genomic methylation&quot;) + ylab(&quot;Cellularity&quot;) + facet_grid(.~ER) ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_cellularity_meth ## Warning: Removed 279 rows containing missing values (geom_point). gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4497725 240.3 7606011 406.3 7606011 406.3 ## Vcells 211991261 1617.4 562383716 4290.7 490804511 3744.6 "],["tumor-microenvironment-tme-deconvolution.html", "3 Tumor microenvironment (TME) deconvolution 3.1 Introduction 3.2 Initialize 3.3 Load data 3.4 Deconvolve TME 3.5 Expression-methylation correlation matrices 3.6 Diagnose TME normalization 3.7 Plot CD3D and CAV1 vs immune and CAF methylation modules 3.8 Annotate TME scores 3.9 Appendix: Sensitivity analysis of TME normalization", " 3 Tumor microenvironment (TME) deconvolution 3.1 Introduction Tumor microenvironment [TME] effects are a major confounder in any dataset of tumor DNA methylation. Differences in methylation between tumor and normal cells or between different tumors can just reflect a different proportion of immune or cancer associated fibroblasts (CAF) cells. Fortunately, the METABRIC dataset contains gene expression for each sample, which allows us to identify Immune and CAF expression signatures and associate them with those of DNA methylation, using the cross-correlations between gene expression profiles with promoter methylation signatures. In broad strokes, Methylayer's normalization strategy is to: Compute cross-correlation between gene expression and promoter methylation. Cluster the cross-correlation matrix to identify TME expression signatures (i.e. groups of TME genes that affect promoter methylation). Use the Euclidean distance in the 2D space of these signatures to identify the K-nearest neighbors of each tumor. Subtract from the raw methylation value of each tumor the mean methylation of its K neighbors. More details regarding TME normalization can be found in the Methylayer R package: https://github.com/tanaylab/methylayer See also Supplementary Note 1 for an additional, independent and unsupervised analysis scheme using non-negative matrix factorization (NMF) that further validated Methylayer estimates of Immune and CAF. 3.2 Initialize source(here::here(&quot;scripts/init.R&quot;)) 3.3 Load data 3.3.0.1 Promoter methylation matrix: prom_avg_meth &lt;- fread(here(&quot;data/promoter_avg_meth_filt.csv&quot;)) %&gt;% select(-name, -name3.chr) %&gt;% distinct(chrom, start, end, .keep_all = TRUE) %&gt;% as_tibble() head(prom_avg_meth) ## # A tibble: 6 x 1,785 ## chrom start end MB_0006 MB_0028 MB_0030 MB_0035 MB_0040 MB_0046 MB_0050 ## 1 chr1 762469 763020 0 0 0 0 0 0 0 ## MB_0053 MB_0054 MB_0062 MB_0064 MB_0068 MB_0112 MB_0113 MB_0114 ## 1 NA 0 0 0.0212766 0 0.01058201 0 NA ## MB_0118 MB_0119 MB_0120 MB_0121 MB_0123 MB_0124 MB_0125 MB_0126 ## 1 0.007067138 0.007751938 0 0 0 0.01731602 0 0.02469136 ## MB_0127 MB_0128 MB_0129 MB_0130 MB_0131 MB_0133 MB_0134 MB_0135 MB_0136 ## 1 0 0 0 0.01176471 0.0125 0 0.02752294 0 0 ## MB_0137 MB_0138 MB_0140 MB_0142 MB_0143 MB_0144 MB_0145 MB_0146 ## 1 0.008403361 0 0 0 0.004901961 0 0.00990099 0 ## MB_0147 MB_0148 MB_0149 MB_0150 MB_0151 MB_0152 MB_0154 MB_0155 ## 1 0.02608696 0 0 0 0 0 NA 0.004032258 ## MB_0157 MB_0162 MB_0163 MB_0164 MB_0165 MB_0166 MB_0167 MB_0168 ## 1 0 0 NA 0.02380952 0 0.02112676 0 0.005494505 ## MB_0169 MB_0170 MB_0171 MB_0172 MB_0173 MB_0174 MB_0175 MB_0176 ## 1 0.03 0 0.04651163 0 0.009569378 0.01960784 0 0 ## MB_0177 MB_0178 MB_0179 MB_0180 MB_0181 MB_0184 MB_0188 MB_0189 ## 1 0.01351351 0.02941176 0.01219512 NA 0 0 0 0 ## MB_0191 MB_0192 MB_0193 MB_0194 MB_0195 MB_0197 MB_0198 MB_0199 MB_0201 ## 1 NA 0 0 NA 0.01709402 0 0.01886792 0 0 ## MB_0202 MB_0203 MB_0204 MB_0205 MB_0206 MB_0207 MB_0214 MB_0215 MB_0218 ## 1 0 0.03 0 0.01442308 0 0.02173913 0 0 0 ## MB_0220 MB_0221 MB_0222 MB_0223 MB_0224 MB_0225 MB_0226 ## 1 NA NA 0 0.01869159 0.02197802 0.01886792 0.01492537 ## MB_0227 MB_0228 MB_0229 MB_0231 MB_0233 MB_0234 MB_0235 MB_0236 ## 1 0.006993007 NA 0 NA 0 0 0.004608295 0 ## MB_0238 MB_0239 MB_0240 MB_0241 MB_0242 MB_0243 MB_0244 MB_0245 ## 1 NA 0 0 0 0 0 0.01204819 0 ## MB_0246 MB_0248 MB_0249 MB_0250 MB_0251 MB_0252 MB_0253 ## 1 0.004739336 0 0.01898734 0.01449275 0.03255814 0.03191489 0.005882353 ## MB_0254 MB_0255 MB_0256 MB_0257 MB_0258 MB_0259 MB_0260 ## 1 0 0.006666667 0 0.004273504 0.01315789 NA 0.01675978 ## MB_0261 MB_0262 MB_0263 MB_0264 MB_0265 MB_0266 MB_0268 MB_0270 ## 1 0.008474576 0.04878049 0 0 0 0 0.009345794 NA ## MB_0271 MB_0272 MB_0273 MB_0278 MB_0279 MB_0280 MB_0282 MB_0283 MB_0284 ## 1 0 0.02542373 0 0 0.01716738 0 0.00625 0 0 ## MB_0285 MB_0286 MB_0287 MB_0288 MB_0290 MB_0291 MB_0292 MB_0293 ## 1 0.04109589 0 0 0.06153846 NA NA NA 0.04301075 ## MB_0294 MB_0295 MB_0301 MB_0302 MB_0303 MB_0304 MB_0305 MB_0306 ## 1 0 0 0.02083333 0.006896552 NA 0 0 0 ## MB_0307 MB_0308 MB_0309 MB_0310 MB_0311 MB_0312 MB_0313 MB_0314 MB_0315 ## 1 0 0.01273885 NA 0.01262626 0 0 0 0 0 ## MB_0316 MB_0317 MB_0318 MB_0319 MB_0320 MB_0321 MB_0322 MB_0324 ## 1 0 0 0 0.01190476 0 0.01075269 0.01507538 0.00308642 ## MB_0325 MB_0327 MB_0328 MB_0329 MB_0330 MB_0336 MB_0339 MB_0340 ## 1 0.009615385 0 0.01869159 0 0 0 0.006451613 0 ## MB_0341 MB_0342 MB_0343 MB_0345 MB_0348 MB_0349 MB_0350 MB_0352 MB_0353 ## 1 0 0 0 0 0.03030303 0 0 0 NA ## MB_0356 MB_0358 MB_0359 MB_0360 MB_0361 MB_0362 MB_0363 MB_0364 ## 1 0.05660377 0 0.0137931 0 NA 0 0 0 ## MB_0365 MB_0366 MB_0367 MB_0368 MB_0369 MB_0370 MB_0371 MB_0373 ## 1 0.008333333 0 0.02898551 0.01239669 0.02 0 0.003533569 0 ## MB_0374 MB_0375 MB_0378 MB_0379 MB_0380 MB_0381 MB_0383 MB_0384 ## 1 0 0.02380952 0 0 0 0.0137931 0.008064516 0.006329114 ## MB_0385 MB_0386 MB_0388 MB_0389 MB_0391 MB_0392 MB_0393 MB_0394 MB_0395 ## 1 0 0 0 0 0 0 0 0.03015075 0 ## MB_0396 MB_0398 MB_0399 MB_0400 MB_0401 MB_0402 MB_0404 MB_0406 ## 1 0 0 0 0 0 0.01550388 0 0.00660066 ## MB_0408 MB_0410 MB_0411 MB_0412 MB_0413 MB_0414 MB_0417 MB_0418 ## 1 0.02545455 0 0.0212766 0 0.01694915 0 0 0.006802721 ## MB_0419 MB_0420 MB_0421 MB_0422 MB_0425 MB_0426 MB_0427 ## 1 0.008695652 0.01156069 0.008474576 NA 0 0.01492537 0.008196721 ## MB_0428 MB_0429 MB_0431 MB_0432 MB_0434 MB_0436 MB_0437 MB_0439 ## 1 0 0.03333333 0 0 0 0.00462963 0 0.006410256 ## MB_0440 MB_0442 MB_0443 MB_0444 MB_0445 MB_0446 ## 1 0.01724138 0.008888889 0.008474576 0.004098361 0.03465347 0.04098361 ## MB_0449 MB_0451 MB_0452 MB_0453 MB_0454 MB_0455 MB_0458 MB_0460 ## 1 0.008403361 0 0.01526718 0.01092896 0 0 0 0 ## MB_0462 MB_0464 MB_0465 MB_0466 MB_0467 MB_0468 MB_0469 MB_0471 MB_0474 ## 1 0 0.01666667 0 0.0125 0.0125 0 0 0 0.02597403 ## MB_0475 MB_0476 MB_0478 MB_0479 MB_0480 MB_0481 MB_0482 MB_0483 MB_0484 ## 1 NA 0 0.01242236 0 0 0 NA NA 0 ## MB_0485 MB_0486 MB_0487 MB_0488 MB_0489 MB_0492 MB_0496 MB_0497 ## 1 0.008333333 NA 0.003937008 NA 0 0.05714286 0 0 ## MB_0500 MB_0501 MB_0502 MB_0503 MB_0504 MB_0505 MB_0506 MB_0507 ## 1 0 0.01522843 0.003558719 0 0 0.01204819 0 0.01226994 ## MB_0508 MB_0510 MB_0511 MB_0512 MB_0513 MB_0514 MB_0516 MB_0519 ## 1 0 0.02884615 NA 0 0 0 0.02702703 0.01016949 ## MB_0521 MB_0525 MB_0527 MB_0528 MB_0529 MB_0530 MB_0531 MB_0532 ## 1 0 0.008695652 0 0 0 0.006756757 0 0.009009009 ## MB_0534 MB_0535 MB_0536 MB_0538 MB_0542 MB_0544 MB_0545 MB_0546 ## 1 0.04444444 0 0.009345794 0 0.02238806 0.01219512 0 0 ## MB_0549 MB_0550 MB_0551 MB_0552 MB_0553 MB_0558 MB_0559 MB_0566 ## 1 0 0.008474576 0.03278689 0 0.009174312 0.01492537 0 0 ## MB_0568 MB_0569 MB_0570 MB_0571 MB_0572 MB_0574 MB_0575 MB_0576 ## 1 0 0.01515152 0.0125 0.0212766 0 0.01724138 0 0 ## MB_0580 MB_0581 MB_0582 MB_0583 MB_0585 MB_0589 MB_0591 MB_0593 MB_0594 ## 1 0 0 0 0 0.02739726 0 0 0 0 ## MB_0596 MB_0597 MB_0600 MB_0601 MB_0603 MB_0605 MB_0606 MB_0608 ## 1 0 0 0.005681818 0 0 0.004132231 0 NA ## MB_0609 MB_0610 MB_0615 MB_0616 MB_0617 MB_0618 MB_0620 MB_0621 ## 1 0 0.01459854 0 0.007692308 0 0 0.003968254 0 ## MB_0622 MB_0623 MB_0626 MB_0627 MB_0628 MB_0631 MB_0632 MB_0637 ## 1 0 0 0 0 0.01851852 0.0326087 0.007692308 0.02197802 ## MB_0638 MB_0639 MB_0642 MB_0643 MB_0646 MB_0649 MB_0650 MB_0653 MB_0655 ## 1 0 0.05128205 0 0 0 0 0 0 0 ## MB_0656 MB_0657 MB_0659 MB_0662 MB_0663 MB_0664 MB_0666 MB_0668 MB_0676 ## 1 0 0 0 0 0 0 0 NA 0 ## MB_0684 MB_0685 MB_0692 MB_0698 MB_0700 MB_0719 MB_0724 MB_0732 ## 1 NA 0.004166667 0 0.003703704 0 0 0 0 ## MB_0735 MB_0739 MB_0748 MB_0756 MB_0767 MB_0768 MB_0770 MB_0772 MB_0778 ## 1 0.01234568 0 0 0 0 0.01538462 0 0 0 ## MB_0779 MB_0785 MB_0786 MB_0788 MB_0794 MB_0795 MB_0801 MB_0803 MB_0818 ## 1 0 0 0 0 0 0 0.02380952 0 0 ## MB_0825 MB_0826 MB_0828 MB_0833 MB_0835 MB_0841 MB_0850 MB_0857 MB_0865 ## 1 0 0.008695652 0 0 0 0 0 0 0 ## MB_0868 MB_0872 MB_0873 MB_0875 MB_0877 MB_0878 MB_0879 ## 1 0.01117318 0.009259259 0.01324503 0.004484305 0 0.02932551 0.008635579 ## MB_0880 MB_0881 MB_0884 MB_0886 MB_0890 MB_0892 MB_0894 MB_0895 ## 1 0 NA 0.02083333 0 0.03125 0.015625 0.02956989 NA ## MB_0897 MB_0898 MB_0899 MB_0901 MB_0902 MB_0904 MB_0905 MB_0906 ## 1 0 0.02409639 0.009708738 0 0.01369863 0 0 0 ## MB_0908 MB_0923 MB_0924 MB_0925 MB_0927 MB_0928 MB_0929 ## 1 0.006944444 0.01554404 0.01960784 0 0 0.03149606 0.006944444 ## MB_0930 MB_0931 MB_0932 MB_0933 MB_0934 MB_0935 MB_0936 MB_0937 ## 1 0.04 0.02739726 0 0 0 0.00990099 0.007462687 0 ## MB_0939 MB_0941 MB_0942 MB_0943 MB_0944 MB_0945 MB_0947 MB_0948 MB_0949 ## 1 0 0 0 0 NA 0.01463415 0.02564103 0 0 ## MB_0950 MB_0951 MB_0952 MB_0953 MB_0955 MB_0956 MB_0957 MB_0958 ## 1 0.02 0.003649635 0 0.02020202 0 0 0 0 ## MB_0961 MB_0964 MB_0965 MB_0966 MB_0967 MB_0968 MB_0969 MB_0970 ## 1 0 0 NA 0.04046243 0.02247191 0.004807692 0 0 ## MB_0971 MB_0973 MB_0974 MB_0975 MB_0976 MB_0978 MB_0979 MB_0980 MB_0982 ## 1 0.03361345 0 0 0 0 0 0 0.01398601 NA ## MB_0983 MB_0984 MB_0986 MB_0987 MB_0988 MB_0989 MB_0990 MB_0991 ## 1 0 0 0.008196721 0 0 0 0.002570694 0.004672897 ## MB_0992 MB_0993 MB_0994 MB_0995 MB_0996 MB_0997 MB_0998 ## 1 0 0 0.007604563 0.01793722 0 0.007751938 0.01398601 ## MB_0999 MB_1001 MB_1002 MB_1003 MB_1004 MB_1005 MB_1006 MB_1007 ## 1 0.004201681 0 0.01190476 0 0.01156069 0 0.005494505 0.00625 ## MB_1008 MB_1009 MB_1010 MB_1011 MB_1012 MB_1013 MB_1014 MB_1015 ## 1 0 0 0 0 0.004032258 0.01438849 0 0.02027027 ## MB_1017 MB_1018 MB_1020 MB_1022 MB_1023 MB_1024 MB_1025 ## 1 0.01923077 0.005025126 0.01156069 0.005899705 0.006666667 0.006493506 0 ## MB_1026 MB_1027 MB_1028 MB_1029 MB_1031 MB_1032 MB_1033 MB_1034 ## 1 0 0.04225352 0.01492537 0.01408451 0 0 0.01162791 0 ## MB_1035 MB_1036 MB_1037 MB_1038 MB_1039 MB_1040 MB_1041 MB_1043 ## 1 0.02564103 0 0.01333333 0 0.02816901 0 0 0 ## MB_1044 MB_1045 MB_1046 MB_1047 MB_1048 MB_1049 MB_1050 MB_1051 MB_1052 ## 1 0.04545455 0 0 0 0 0 0 0 0 ## MB_1053 MB_1054 MB_1055 MB_1056 MB_1057 MB_1058 MB_1059 MB_1061 ## 1 0.00990099 0.0106383 NA 0 0 0.01666667 0.005847953 0 ## MB_1062 MB_1063 MB_1064 MB_1065 MB_1066 MB_1067 MB_1068 ## 1 0.03125 0.008695652 0.00617284 0.008196721 0.008264463 0.0125 0 ## MB_1069 MB_1070 MB_1071 MB_1072 MB_1073 MB_1074 MB_1075 ## 1 0.009174312 0.01923077 0 0 0.01142857 0.006896552 0.01652893 ## MB_1076 MB_1077 MB_1078 MB_1079 MB_1080 MB_1081 MB_1082 MB_1083 ## 1 0 0 0.01176471 0.06451613 0 0.01818182 0 0.01123596 ## MB_1084 MB_1085 MB_1086 MB_1087 MB_1090 MB_1091 MB_1093 MB_1096 ## 1 0.01234568 0.01694915 0.006329114 0 NA 0 0 0.02040816 ## MB_1097 MB_1098 MB_1100 MB_1101 MB_1102 MB_1103 MB_1104 MB_1105 MB_1107 ## 1 0.02941176 0 0.00617284 0 0 0 0 0 0 ## MB_1110 MB_1111 MB_1114 MB_1116 MB_1118 MB_1119 MB_1120 ## 1 0 0.006410256 0.006493506 0 0 0.01086957 0.004950495 ## MB_1121 MB_1122 MB_1123 MB_1124 MB_1125 MB_1126 MB_1127 MB_1129 ## 1 0.005235602 0 0.0122449 0.04950495 0 0 0 0.008163265 ## MB_1130 MB_1131 MB_1132 MB_1134 MB_1135 MB_1136 MB_1137 MB_1138 ## 1 0 0 0 0.01002506 0.01081081 0 0 0.003174603 ## MB_1139 MB_1141 MB_1142 MB_1143 MB_1144 MB_1145 MB_1146 ## 1 0.004694836 0.007712082 0 0.004484305 0.009836066 0.00877193 0.0130719 ## MB_1147 MB_1148 MB_1149 MB_1151 MB_1152 MB_1155 MB_1156 ## 1 0.009966777 0.02479339 0.007092199 0.004901961 0.01123596 0.01877934 0 ## MB_2517 MB_2536 MB_2556 MB_2564 MB_2610 MB_2613 MB_2614 MB_2616 ## 1 0 0.005263158 0 0.01197605 0.0234375 0 0.02380952 0 ## MB_2617 MB_2618 MB_2624 MB_2626 MB_2632 MB_2634 MB_2640 MB_2643 MB_2645 ## 1 0 0 0 0 0.05263158 0 0 0.01652893 NA ## MB_2669 MB_2686 MB_2705 MB_2708 MB_2711 MB_2712 MB_2718 ## 1 0 0 NA 0.01587302 0.01960784 0.00862069 0.005181347 ## MB_2724 MB_2728 MB_2730 MB_2742 MB_2744 MB_2745 MB_2747 MB_2749 ## 1 0.02255639 0 0 NA 0 0 0.01604278 0.02439024 ## MB_2750 MB_2752 MB_2753 MB_2754 MB_2760 MB_2763 MB_2764 ## 1 0.009345794 0.02777778 0.02659574 0.01865672 0 0.009090909 0 ## MB_2765 MB_2767 MB_2769 MB_2770 MB_2772 MB_2774 MB_2775 MB_2778 ## 1 0 NA 0 0.04477612 0.01869159 0.01123596 0.008333333 0 ## MB_2779 MB_2781 MB_2790 MB_2791 MB_2792 MB_2793 MB_2796 MB_2803 ## 1 0.03448276 0.02884615 0 0.02857143 0 0.007246377 0 0 ## MB_2814 MB_2819 MB_2820 MB_2821 MB_2827 MB_2833 MB_2834 ## 1 0 0 0.01010101 0.02857143 0.01923077 0.02884615 0.00617284 ## MB_2835 MB_2838 MB_2840 MB_2842 MB_2843 MB_2844 MB_2845 MB_2846 MB_2847 ## 1 0.01123596 0 0 0 0.01986755 0 0 0 0 ## MB_2848 MB_2849 MB_2850 MB_2851 MB_2853 MB_2854 MB_2862 MB_2895 ## 1 0.006993007 0 0 0 0 0 0.008264463 0 ## MB_2896 MB_2901 MB_2912 MB_2916 MB_2917 MB_2919 MB_2923 MB_2927 ## 1 0 0 0 0 0.01904762 0.02898551 0 NA ## MB_2929 MB_2931 MB_2933 MB_2939 MB_2951 MB_2952 MB_2953 ## 1 0.008264463 0 0.03623188 0 0.02027027 0 0.003846154 ## MB_2954 MB_2957 MB_2960 MB_2963 MB_2969 MB_2977 MB_2983 ## 1 0.01488095 0.02105263 0.005347594 0.01324503 0 0.01079137 0 ## MB_2984 MB_2990 MB_2993 MB_2994 MB_2996 MB_3001 MB_3005 MB_3006 ## 1 0.01910828 0 0 0 0 NA 0.007692308 NA ## MB_3007 MB_3008 MB_3014 MB_3016 MB_3021 MB_3025 MB_3028 MB_3031 ## 1 0 0.01030928 0 NA 0 0 NA 0.01010101 ## MB_3033 MB_3035 MB_3037 MB_3046 MB_3049 MB_3050 MB_3057 MB_3058 ## 1 0.01442308 0.01574803 0 0.01176471 0 NA 0 0 ## MB_3063 MB_3064 MB_3067 MB_3079 MB_3082 MB_3083 MB_3085 ## 1 0 0 0.03125 0.01219512 0.008130081 0.01818182 0.007142857 ## MB_3088 MB_3089 MB_3102 MB_3104 MB_3105 MB_3110 MB_3121 MB_3122 ## 1 0.01369863 0 0 0.01315789 0 0 0.01754386 0 ## MB_3153 MB_3165 MB_3167 MB_3171 MB_3211 MB_3218 MB_3228 MB_3235 ## 1 0 0.01176471 0.03184713 0.0106383 0.004672897 NA 0 0 ## MB_3252 MB_3253 MB_3254 MB_3266 MB_3271 MB_3275 MB_3277 ## 1 0 0.02702703 0 0.006622517 0 0.01209677 0.0106383 ## MB_3292 MB_3295 MB_3297 MB_3298 MB_3300 MB_3301 MB_3315 MB_3328 ## 1 0.009259259 0 0.04098361 0.01574803 0.02941176 0 0.025 0 ## MB_3329 MB_3341 MB_3350 MB_3351 MB_3357 MB_3360 MB_3361 MB_3367 ## 1 NA 0 0.009615385 0 NA 0.02105263 NA 0 ## MB_3371 MB_3378 MB_3382 MB_3383 MB_3395 MB_3396 MB_3402 MB_3403 ## 1 0.01818182 0 0 0 0 0.01941748 0 0 ## MB_3412 MB_3417 MB_3429 MB_3430 MB_3435 MB_3436 MB_3437 ## 1 0.03825137 0.04469274 0.01242236 0.005617978 0.02040816 0 0 ## MB_3439 MB_3452 MB_3453 MB_3459 MB_3462 MB_3467 MB_3470 MB_3476 ## 1 0 0.02727273 0 0.01863354 0 0 0.008264463 0.004950495 ## MB_3479 MB_3490 MB_3492 MB_3497 MB_3500 MB_3502 MB_3506 MB_3510 MB_3526 ## 1 0.01492537 0.01273885 0 0 0 0 0 0 0 ## MB_3545 MB_3548 MB_3555 MB_3556 MB_3560 MB_3576 MB_3582 MB_3600 ## 1 NA NA 0 0 NA 0.006622517 0 0.004587156 ## MB_3614 MB_3676 MB_3702 MB_3706 MB_3707 MB_3711 MB_3747 MB_3748 ## 1 0 0 0.005586592 0.007194245 0 NA 0 0.0375 ## MB_3752 MB_3754 MB_3755 MB_3781 MB_3804 MB_3823 MB_3824 MB_3838 ## 1 NA 0 0 0.01970443 0.01913876 0 0.02272727 0.02290076 ## MB_3840 MB_3842 MB_3850 MB_3852 MB_3854 MB_3865 MB_3866 MB_3871 MB_3874 ## 1 0 0.03448276 0 NA 0 0 0 0 0 ## MB_3978 MB_4000 MB_4001 MB_4003 MB_4004 MB_4008 MB_4012 MB_4015 ## 1 0 0 0 0.009009009 0 0 0 0.006024096 ## MB_4017 MB_4018 MB_4024 MB_4033 MB_4036 MB_4038 MB_4039 MB_4040 ## 1 0 0 0 0 0.01357466 0.02117647 0 0 ## MB_4042 MB_4046 MB_4048 MB_4049 MB_4051 MB_4053 MB_4054 ## 1 0.004115226 0 0.04242424 0.01030928 0.01030928 0.00913242 0.01273885 ## MB_4055 MB_4056 MB_4057 MB_4058 MB_4059 MB_4060 MB_4061 MB_4062 ## 1 0.01298701 0.05839416 0 0.02803738 0 0.03007519 0 0 ## MB_4063 MB_4064 MB_4066 MB_4072 MB_4079 MB_4083 MB_4084 ## 1 0.01612903 0.008522727 0.05464481 0.006711409 0 0.01298701 0.01287554 ## MB_4091 MB_4098 MB_4110 MB_4117 MB_4119 MB_4120 MB_4123 ## 1 0.005555556 0.01333333 0.02702703 0.02298851 0.01923077 0.005681818 0 ## MB_4126 MB_4127 MB_4139 MB_4141 MB_4145 MB_4146 MB_4148 MB_4154 ## 1 0 0 0 0 0.01282051 0 0.02083333 0 ## MB_4169 MB_4171 MB_4173 MB_4189 MB_4190 MB_4211 MB_4212 ## 1 0.007662835 0.004081633 0.01036269 0.02439024 0 0.00990099 0.02380952 ## MB_4213 MB_4222 MB_4224 MB_4230 MB_4233 MB_4234 MB_4235 ## 1 0 0.004761905 0 0.004347826 0.016 0.01086957 0.009868421 ## MB_4236 MB_4254 MB_4255 MB_4264 MB_4266 MB_4268 MB_4270 MB_4272 ## 1 0 0.005128205 0.03448276 0.0125 0 0 0.01265823 0 ## MB_4274 MB_4276 MB_4278 MB_4281 MB_4282 MB_4283 MB_4289 ## 1 0 0.005780347 0.01481481 0 0.02645503 0.005102041 0.03333333 ## MB_4293 MB_4300 MB_4306 MB_4308 MB_4310 MB_4313 MB_4317 MB_4318 MB_4322 ## 1 0.01183432 0.01142857 0 NA 0.03 0 0 NA 0 ## MB_4323 MB_4328 MB_4331 MB_4333 MB_4339 MB_4341 MB_4342 MB_4343 MB_4348 ## 1 0 0 0 0 0 0 0 NA 0 ## MB_4350 MB_4351 MB_4353 MB_4354 MB_4357 MB_4360 MB_4361 MB_4362 ## 1 0.01492537 0.03030303 0.009009009 NA 0 0 0 0.01935484 ## MB_4368 MB_4374 MB_4375 MB_4381 MB_4390 MB_4395 MB_4407 MB_4408 ## 1 0.01204819 NA 0 0 0.01219512 0.01639344 0 0 ## MB_4409 MB_4410 MB_4413 MB_4416 MB_4417 MB_4421 MB_4426 MB_4431 ## 1 0 0.01785714 0.004587156 0.01578947 0 0 0.03680982 NA ## MB_4434 MB_4442 MB_4444 MB_4455 MB_4458 MB_4464 MB_4465 MB_4474 ## 1 0.01369863 0.008823529 0 0 0 0.009852217 0.02631579 0 ## MB_4477 MB_4482 MB_4483 MB_4484 MB_4487 MB_4492 MB_4495 ## 1 0 0.005390836 0 0.008130081 0.003344482 0 0.008888889 ## MB_4511 MB_4521 MB_4528 MB_4529 MB_4531 MB_4541 MB_4548 MB_4556 ## 1 NA 0 0 0.005681818 0 0 0.01123596 0.01851852 ## MB_4557 MB_4558 MB_4564 MB_4578 MB_4591 MB_4593 MB_4598 ## 1 0 0.01363636 0.05263158 0 0.005154639 0.01428571 0.0245098 ## MB_4599 MB_4601 MB_4602 MB_4603 MB_4607 MB_4613 MB_4616 ## 1 0.003236246 0.008230453 0 0 0.01187648 0 0.002624672 ## MB_4618 MB_4621 MB_4622 MB_4623 MB_4626 MB_4627 MB_4630 ## 1 0 0 0.02941176 0 0.03937008 0.01052632 0.02564103 ## MB_4633 MB_4634 MB_4635 MB_4639 MB_4640 MB_4641 MB_4642 ## 1 0.008230453 0 0 0 0.007407407 0.004149378 0 ## MB_4643 MB_4644 MB_4648 MB_4649 MB_4651 MB_4653 MB_4654 MB_4655 ## 1 0.01577287 0 0 0 0.015625 0.008298755 0.01777778 0.016 ## MB_4661 MB_4663 MB_4665 MB_4666 MB_4669 MB_4670 MB_4671 ## 1 0.005882353 0 0.01481481 0.01388889 0.01716738 0 0.007843137 ## MB_4672 MB_4673 MB_4674 MB_4675 MB_4679 MB_4681 MB_4682 ## 1 0 0.01212121 0.003115265 0.01886792 0.00877193 0 0 ## MB_4685 MB_4686 MB_4688 MB_4691 MB_4692 MB_4694 MB_4696 ## 1 0.03597122 0.009049774 0.02197802 0.005076142 0.01219512 0 0 ## MB_4697 MB_4698 MB_4701 MB_4702 MB_4704 MB_4705 MB_4706 MB_4708 ## 1 0 0 0.01626016 0.02112676 0 0.0106383 0.01416431 0.0297619 ## MB_4709 MB_4710 MB_4711 MB_4712 MB_4714 MB_4715 MB_4716 ## 1 0.01045296 0.01010101 0.01428571 0.00862069 0.012 0.02824859 0 ## MB_4717 MB_4719 MB_4722 MB_4723 MB_4724 MB_4725 MB_4729 ## 1 0 0 0.008333333 0.01612903 0.005847953 0.0212766 0.01324503 ## MB_4730 MB_4731 MB_4732 MB_4733 MB_4735 MB_4737 MB_4738 ## 1 0.008403361 0 0.01818182 0.005376344 0.02332362 0.01111111 0.02631579 ## MB_4739 MB_4741 MB_4742 MB_4743 MB_4744 MB_4745 MB_4746 ## 1 0.01010101 0.009433962 0.01098901 0.01428571 0 0.004310345 0 ## MB_4749 MB_4752 MB_4757 MB_4758 MB_4762 MB_4763 MB_4764 MB_4767 ## 1 0 0 0.005617978 0 0.015625 0.008583691 0.03723404 0 ## MB_4769 MB_4770 MB_4771 MB_4778 MB_4779 MB_4782 MB_4784 ## 1 0.0248227 0.003344482 0.01398601 0 0.006024096 0.007092199 0.008264463 ## MB_4785 MB_4787 MB_4790 MB_4791 MB_4793 MB_4794 MB_4796 MB_4797 ## 1 0 0.02054795 0.004830918 0.02 0 0.02739726 0.01030928 0 ## MB_4798 MB_4800 MB_4801 MB_4802 MB_4805 MB_4806 MB_4809 ## 1 0.01 0 0.02536232 0.007092199 0.02941176 0 0.02884615 ## MB_4814 MB_4816 MB_4818 MB_4820 MB_4825 MB_4827 MB_4828 ## 1 0.006289308 0.02083333 0.01190476 0.01287554 0 0.003546099 0.008849558 ## MB_4829 MB_4832 MB_4834 MB_4836 MB_4838 MB_4839 MB_4843 ## 1 0 0.03797468 0 0.008849558 0.01176471 0 0.01117318 ## MB_4849 MB_4851 MB_4853 MB_4855 MB_4858 MB_4859 MB_4862 ## 1 0.01980198 0 0.009852217 0.01666667 0.008695652 0.004329004 0.02857143 ## MB_4865 MB_4866 MB_4867 MB_4869 MB_4871 MB_4872 MB_4873 ## 1 0.01098901 0.01086957 0.01067616 0.00862069 0.007125891 0 0.006514658 ## MB_4876 MB_4878 MB_4879 MB_4880 MB_4881 MB_4883 MB_4886 ## 1 0.02112676 0.01764706 0.05769231 0.02702703 0 0.01230769 0.01149425 ## MB_4887 MB_4888 MB_4893 MB_4894 MB_4896 MB_4897 MB_4898 ## 1 0.007662835 0.01149425 0.008 0.009950249 0 0.007692308 0.04705882 ## MB_4899 MB_4900 MB_4904 MB_4907 MB_4908 MB_4911 MB_4912 MB_4925 ## 1 0 0.01351351 0.01648352 0.006993007 0 0 0 0.01197605 ## MB_4928 MB_4929 MB_4930 MB_4931 MB_4933 MB_4934 MB_4935 ## 1 0 0.006024096 0.02439024 0.02678571 0.01081081 0.008928571 0.02097902 ## MB_4937 MB_4941 MB_4942 MB_4944 MB_4945 MB_4949 MB_4950 ## 1 0.01840491 0.01075269 0.02116402 0.0078125 0.003333333 0.005882353 0 ## MB_4952 MB_4956 MB_4957 MB_4959 MB_4961 MB_4962 MB_4965 ## 1 0.01333333 0 0.01333333 0 0.005405405 0 0.009852217 ## MB_4966 MB_4967 MB_4968 MB_4969 MB_4970 MB_4976 MB_4977 MB_4981 ## 1 0.009756098 0.03614458 0 0.005882353 0.025 0 0 0.01190476 ## MB_4986 MB_4987 MB_4991 MB_4992 MB_4993 MB_4994 MB_4996 ## 1 0.01204819 0.008849558 0 0 0.01156069 0.01239669 0.009009009 ## MB_4998 MB_4999 MB_5001 MB_5004 MB_5008 MB_5011 MB_5013 MB_5014 ## 1 0.005 0.006289308 0.01298701 0.02272727 0 0 0 0.004854369 ## MB_5015 MB_5018 MB_5019 MB_5022 MB_5027 MB_5028 MB_5033 MB_5039 ## 1 0 0.01428571 0 0 0.002832861 0 0.016 0 ## MB_5040 MB_5041 MB_5043 MB_5044 MB_5045 MB_5049 MB_5050 MB_5052 ## 1 0.01176471 0.005376344 0 0 0 0 0.01403509 0.0239521 ## MB_5053 MB_5054 MB_5057 MB_5059 MB_5060 MB_5061 MB_5062 ## 1 0 0.01398601 0.01098901 0 0.01075269 0 0.01315789 ## MB_5063 MB_5064 MB_5066 MB_5068 MB_5070 MB_5072 MB_5073 ## 1 0.02083333 0.008333333 0.01449275 0 0.008333333 0 0.005865103 ## MB_5074 MB_5078 MB_5079 MB_5081 MB_5084 MB_5086 MB_5088 ## 1 0.02439024 0.02702703 0.009090909 0.009852217 0.00304878 0 0 ## MB_5092 MB_5098 MB_5100 MB_5101 MB_5102 MB_5105 MB_5107 ## 1 0.01648352 0.004950495 0 0 0.02840909 0.004651163 0.01507538 ## MB_5110 MB_5114 MB_5115 MB_5116 MB_5118 MB_5120 MB_5121 ## 1 0.005988024 0.015625 0 0.01393728 0.003215434 0.008474576 0 ## MB_5122 MB_5123 MB_5124 MB_5126 MB_5127 MB_5134 MB_5135 MB_5138 ## 1 0.02173913 0.01351351 0 0 0.05102041 0 0 0 ## MB_5139 MB_5144 MB_5145 MB_5147 MB_5150 MB_5152 MB_5157 MB_5161 MB_5164 ## 1 0 0 0.01574803 0 0 0 0 0 0 ## MB_5167 MB_5169 MB_5171 MB_5172 MB_5174 MB_5175 MB_5176 MB_5182 ## 1 0.04477612 0.02654867 0 NA 0 0 0 0.01111111 ## MB_5184 MB_5186 MB_5188 MB_5190 MB_5191 MB_5193 MB_5197 MB_5200 ## 1 0.02564103 0.01140684 0.04147465 0 0 0 0.04411765 NA ## MB_5205 MB_5208 MB_5209 MB_5211 MB_5212 MB_5214 MB_5215 ## 1 NA 0 0 0.02380952 0.007874016 0.005763689 0.02272727 ## MB_5218 MB_5221 MB_5222 MB_5223 MB_5224 MB_5225 MB_5226 MB_5227 ## 1 0.05128205 0 0.04177546 0.03533569 0.00990099 0 0 0 ## MB_5230 MB_5232 MB_5233 MB_5235 MB_5238 MB_5239 MB_5243 MB_5244 ## 1 0.007874016 0.003802281 0 0 0 0 0.04166667 0 ## MB_5251 MB_5256 MB_5259 MB_5261 MB_5264 MB_5266 MB_5270 MB_5271 ## 1 0 0.02453988 0 0 0.01388889 0.00877193 NA 0 ## MB_5272 MB_5273 MB_5275 MB_5277 MB_5278 MB_5279 MB_5280 MB_5281 ## 1 0 0 0.009049774 0.00625 0.007142857 0 0.015625 0 ## MB_5284 MB_5286 MB_5287 MB_5288 MB_5292 MB_5293 MB_5298 MB_5306 MB_5311 ## 1 0 0 0 0 0 0 0.01242236 0 0 ## MB_5312 MB_5313 MB_5315 MB_5322 MB_5327 MB_5329 MB_5331 ## 1 0.02230483 0 0.004048583 0 0.04571429 0.009950249 0 ## MB_5334 MB_5335 MB_5338 MB_5339 MB_5341 MB_5345 MB_5348 MB_5350 MB_5351 ## 1 0.02816901 0 0 0 0 0 0 0 0 ## MB_5358 MB_5360 MB_5361 MB_5364 MB_5366 MB_5381 MB_5396 ## 1 0.009433962 NA 0.015625 0.01827676 0.02906977 0.006578947 0.01142857 ## MB_5399 MB_5402 MB_5410 MB_5425 MB_5427 MB_5428 MB_5433 MB_5439 ## 1 0 0 0 0.006410256 0 0 0 0.01003344 ## MB_5440 MB_5442 MB_5491 MB_5493 MB_5495 MB_5498 MB_5513 MB_5519 ## 1 0 NA 0 0.01204819 0.03125 0 0.002777778 0.02298851 ## MB_5530 MB_5533 MB_5543 MB_5558 MB_5559 MB_5563 MB_5567 MB_5580 ## 1 0.02985075 0 0 0 0.03846154 0.009090909 0 0 ## MB_5582 MB_5584 MB_5588 MB_5592 MB_5593 MB_5596 MB_5603 ## 1 0.005586592 0 0 0.00913242 0.01481481 0.01666667 0.01315789 ## MB_5605 MB_5614 MB_5620 MB_5634 MB_5640 MB_5641 MB_5642 ## 1 0.04705882 0.01273885 0.01129944 0.00990099 0.01398601 0.007092199 0.01775148 ## MB_5646 MB_5651 MB_5656 MB_6007 MB_6008 MB_6010 MB_6011 MB_6012 ## 1 0.01639344 0 0.009615385 0 0 0 0.02054795 0 ## MB_6018 MB_6019 MB_6023 MB_6024 MB_6025 MB_6026 MB_6030 ## 1 0.03846154 0.008695652 0.01075269 0.01327434 0 0.01470588 0.01960784 ## MB_6036 MB_6039 MB_6042 MB_6044 MB_6046 MB_6047 MB_6048 ## 1 0.03658537 0.006024096 0.02142857 0 0.02898551 0.00952381 0.00952381 ## MB_6049 MB_6050 MB_6052 MB_6053 MB_6055 MB_6058 MB_6059 MB_6060 MB_6062 ## 1 NA 0 0 0 0 0 0 0.01818182 0.03007519 ## MB_6063 MB_6065 MB_6068 MB_6069 MB_6071 MB_6075 MB_6077 MB_6079 ## 1 0.01324503 0.008426966 0 NA 0.02702703 0 0 0.009433962 ## MB_6080 MB_6082 MB_6083 MB_6085 MB_6090 MB_6092 MB_6097 ## 1 0.005714286 0.01910828 0.006578947 0.01117318 0.01257862 0 0.01619433 ## MB_6098 MB_6100 MB_6101 MB_6103 MB_6105 MB_6107 MB_6108 MB_6113 ## 1 0 0 0.009803922 0.008032129 0 0 0.02840909 0 ## MB_6114 MB_6116 MB_6118 MB_6122 MB_6124 MB_6125 MB_6131 ## 1 0 0.01183432 0.01117318 0 0.005291005 0.01886792 0.016 ## MB_6133 MB_6135 MB_6138 MB_6141 MB_6143 MB_6144 MB_6145 ## 1 0.01027397 0 0 0.007462687 0.016 0.009950249 0.004975124 ## MB_6146 MB_6147 MB_6149 MB_6150 MB_6152 MB_6154 MB_6156 MB_6157 ## 1 0 0.00619195 0 0.01212121 0.04022989 0 0 0 ## MB_6160 MB_6163 MB_6164 MB_6167 MB_6168 MB_6169 ## 1 0.02531646 0.01435407 0.007407407 0.01197605 0.01923077 0.009090909 ## MB_6171 MB_6178 MB_6179 MB_6181 MB_6184 MB_6185 MB_6187 MB_6188 ## 1 0.01282051 0.01324503 0.005586592 0.007407407 0 0 0 0 ## MB_6192 MB_6194 MB_6195 MB_6201 MB_6204 MB_6207 MB_6208 MB_6211 ## 1 0.03389831 0 0 0 0.03076923 0.01941748 0 0 ## MB_6212 MB_6213 MB_6214 MB_6218 MB_6223 MB_6224 MB_6225 MB_6226 ## 1 0 0 0 0 0.03409091 0 0.02419355 0.01149425 ## MB_6228 MB_6229 MB_6230 MB_6231 MB_6232 MB_6233 MB_6234 MB_6237 MB_6238 ## 1 0 0 0 0 0.04166667 0 0 NA 0.03378378 ## MB_6239 MB_6242 MB_6245 MB_6246 MB_6248 MB_6251 MB_6253 MB_6254 ## 1 0 0 NA 0.004081633 0 0.01666667 0.0212766 0.01025641 ## MB_6256 MB_6257 MB_6259 MB_6261 MB_6263 MB_6269 MB_6271 MB_6272 MB_6274 ## 1 0 0 0 0 0.015 0 0 0 0 ## MB_6275 MB_6281 MB_6283 MB_6284 MB_6286 MB_6287 MB_6288 MB_6289 ## 1 0 0.01941748 0.02515723 0.009259259 NA 0 0 NA ## MB_6291 MB_6293 MB_6294 MB_6297 MB_6300 MB_6302 MB_6305 MB_6306 ## 1 0.02083333 0.06989247 0.02678571 0.03067485 0 0 0 0 ## MB_6308 MB_6312 MB_6314 MB_6317 MB_6318 MB_6319 MB_6322 MB_6328 ## 1 0 0.05769231 0 0 NA 0 0.005649718 0.01574803 ## MB_6329 MB_6330 MB_6334 MB_6336 MB_6337 MB_6346 MB_6358 MB_6359 ## 1 0 0.01481481 0 0 0 0.04166667 0.025 0.0212766 ## MB_6360 MB_6363 MB_7000 MB_7002 MB_7003 MB_7004 MB_7005 ## 1 0.004484305 0.02083333 0.01818182 0 0 0.00877193 0.02112676 ## MB_7006 MB_7007 MB_7008 MB_7009 MB_7010 MB_7012 MB_7014 ## 1 0 0.01176471 0.03030303 0.00990099 0.00617284 0.01503759 0.01886792 ## MB_7015 MB_7016 MB_7017 MB_7018 MB_7019 MB_7020 MB_7022 MB_7023 ## 1 0.009708738 0 0 0 0.004716981 0 NA 0 ## MB_7026 MB_7028 MB_7029 MB_7030 MB_7031 MB_7032 MB_7034 MB_7035 ## 1 0.01703578 0.02777778 0 0 0 0.03418803 0 0 ## MB_7036 MB_7037 MB_7038 MB_7039 MB_7040 MB_7041 MB_7043 MB_7046 ## 1 0 0 0 0.0106383 0.02857143 0 0 0 ## MB_7048 MB_7049 MB_7050 MB_7051 MB_7052 MB_7053 MB_7054 ## 1 0.006872852 0.0106383 0.005291005 0.02298851 0.03448276 0.006410256 0 ## MB_7055 MB_7056 MB_7057 MB_7058 MB_7060 MB_7061 MB_7062 ## 1 0.006134969 0.009803922 0.01507538 0.03636364 0 0 0.02189781 ## MB_7065 MB_7066 MB_7067 MB_7068 MB_7070 MB_7071 MB_7072 ## 1 0.01030928 0.04320988 0 0.01351351 0 0.008849558 0 ## MB_7073 MB_7074 MB_7075 MB_7076 MB_7077 MB_7078 MB_7079 ## 1 0.01666667 0.008928571 0.01481481 0.00621118 0.006802721 0 0 ## MB_7080 MB_7083 MB_7084 MB_7085 MB_7086 MB_7087 MB_7088 MB_7089 ## 1 0.01149425 0 0 0.006134969 0 0 0.01190476 0.04020101 ## MB_7090 MB_7091 MB_7092 MB_7093 MB_7095 MB_7096 MB_7097 MB_7099 ## 1 0 0.02688172 0.01298701 0.007874016 0.02564103 0 0 0 ## MB_7100 MB_7102 MB_7104 MB_7107 MB_7109 MB_7113 MB_7115 MB_7116 ## 1 0 0 0.006134969 0 0 0.01030928 0 NA ## MB_7118 MB_7119 MB_7120 MB_7122 MB_7129 MB_7131 MB_7132 MB_7137 MB_7138 ## 1 0 0 0 0 0 NA 0.00729927 0.02 0.03738318 ## MB_7141 MB_7142 MB_7144 MB_7145 MB_7151 MB_7153 MB_7154 MB_7157 ## 1 0 0.02803738 0.02985075 0.02155172 0 0 0.01030928 0 ## MB_7158 MB_7159 MB_7160 MB_7161 MB_7162 MB_7164 MB_7167 MB_7170 ## 1 0.02739726 0 0.01282051 0.01136364 0 0 0 0 ## MB_7171 MB_7172 MB_7173 MB_7174 MB_7182 MB_7186 MB_7187 MB_7189 ## 1 0.01408451 NA NA 0.03208556 0 0.02898551 0 0 ## MB_7192 MB_7197 MB_7198 MB_7199 MB_7200 MB_7205 MB_7208 MB_7214 ## 1 0.03296703 0 0 0.008064516 0 0 0 0 ## MB_7217 MB_7218 MB_7221 MB_7223 MB_7225 MB_7227 MB_7228 MB_7229 ## 1 0.006410256 0.00952381 0 0 0 0.05 0 0 ## MB_7232 MB_7233 MB_7236 MB_7237 MB_7241 MB_7243 MB_7244 MB_7245 MB_7249 ## 1 0.01351351 0 0 0.01785714 0 0 0 0 0 ## MB_7250 MB_7251 MB_7252 MB_7253 MB_7254 MB_7256 MB_7261 MB_7262 MB_7263 ## 1 0 0 0.01793722 0 0.01149425 0 0 0 0 ## MB_7265 MB_7268 MB_7271 MB_7273 MB_7275 MB_7278 MB_7279 MB_7281 MB_7283 ## 1 NA 0 0 0 0 0 0 0 0.01829268 ## MB_7285 MB_7288 MB_7289 MB_7291 MB_7292 MB_7293 MB_7296 MB_7298 ## 1 NA 0 0 0 0 0.006849315 NA 0 ## [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 5 rows ] dim(prom_avg_meth) ## [1] 15693 1785 3.3.0.2 Expression matrix: expr_mat &lt;- fread(here(&quot;data/expression_matrix.csv&quot;)) %&gt;% expr_intervs_to_mat() head(expr_mat) ## MB_0362 MB_0346 MB_0386 MB_0574 MB_0185 MB_0503 MB_0641 ## MB_0201 MB_0218 MB_0316 MB_0189 MB_0891 MB_0658 MB_0899 ## MB_0605 MB_0258 MB_0506 MB_0420 MB_0223 MB_0445 MB_0199 ## MB_0517 MB_0155 MB_0428 MB_0117 MB_0906 MB_0249 MB_0660 ## MB_0497 MB_0434 MB_0143 MB_0513 MB_0541 MB_0653 MB_0455 ## MB_0540 MB_0384 MB_0637 MB_0157 MB_0443 MB_0584 MB_0292 ## MB_0322 MB_0501 MB_0401 MB_0140 MB_0606 MB_0666 MB_0598 ## MB_0453 MB_0138 MB_0579 MB_0405 MB_0471 MB_0347 MB_0619 ## MB_0171 MB_0310 MB_0621 MB_0614 MB_0372 MB_0374 MB_0382 ## MB_0327 MB_0066 MB_0144 MB_0596 MB_0164 MB_0215 MB_0146 ## MB_0229 MB_0505 MB_0102 MB_0569 MB_0516 MB_0272 MB_0585 ## MB_0494 MB_0306 MB_0463 MB_0198 MB_0203 MB_0607 MB_0631 ## MB_0363 MB_0427 MB_0519 MB_0371 MB_0380 MB_0221 MB_0348 ## MB_0261 MB_0576 MB_0385 MB_0659 MB_0270 MB_0379 MB_0432 ## MB_0527 MB_0624 MB_0273 MB_0050 MB_0460 MB_0654 MB_0454 ## MB_0392 MB_0336 MB_0467 MB_0349 MB_0378 MB_0176 MB_0429 ## MB_0397 MB_0571 MB_0426 MB_0135 MB_0112 MB_0352 MB_0644 ## MB_0601 MB_0568 MB_0328 MB_0325 MB_0358 MB_0413 MB_0158 ## MB_0636 MB_0145 MB_0195 MB_0422 MB_0483 MB_0317 MB_0486 ## MB_0139 MB_0257 MB_0345 MB_0375 MB_0419 MB_0480 MB_0311 ## MB_0324 MB_0368 MB_0389 MB_0248 MB_0035 MB_0667 MB_0423 ## MB_0904 MB_0119 MB_0650 MB_0204 MB_0184 MB_0600 MB_0400 ## MB_0511 MB_0059 MB_0500 MB_0150 MB_0895 MB_0366 MB_0173 ## MB_0131 MB_0206 MB_0315 MB_0361 MB_0545 MB_0370 MB_0642 ## MB_0431 MB_0181 MB_0603 MB_0295 MB_0618 MB_0496 MB_0411 ## MB_0285 MB_0360 MB_0359 MB_0344 MB_0583 MB_0202 MB_0485 ## MB_0609 MB_0538 MB_0197 MB_0410 MB_0528 MB_0165 MB_0152 ## MB_0546 MB_0148 MB_0594 MB_0521 MB_0532 MB_0536 MB_0319 ## MB_0491 MB_0404 MB_0243 MB_0580 MB_0312 MB_0060 MB_0635 ## MB_0649 MB_0643 MB_0581 MB_0383 MB_0142 MB_0320 MB_0207 ## MB_0167 MB_0591 MB_0613 MB_0313 MB_0599 MB_0286 MB_0575 ## MB_0549 MB_0214 MB_0589 MB_0406 MB_0452 MB_0524 MB_0880 ## MB_0573 MB_0664 MB_0446 MB_0008 MB_0656 MB_0154 MB_0597 ## MB_0550 MB_0616 MB_0448 MB_0412 MB_0122 MB_0425 MB_0314 ## MB_0356 MB_0440 MB_0398 MB_0438 MB_0449 MB_0162 MB_0593 ## MB_0301 MB_0628 MB_0283 MB_0106 MB_0341 MB_0474 MB_0394 ## MB_0373 MB_0247 MB_0225 MB_0424 MB_0209 MB_0115 MB_0136 ## MB_0542 MB_0354 MB_0151 MB_0590 MB_0608 MB_0657 MB_0559 ## MB_0893 MB_0514 MB_0395 MB_0294 MB_0439 MB_0481 MB_0529 ## MB_0224 MB_0302 MB_0126 MB_0220 MB_0192 MB_0121 MB_0239 ## MB_0364 MB_0232 MB_0884 MB_0238 MB_0194 MB_0882 MB_0010 ## MB_0236 MB_0377 MB_0123 MB_0504 MB_0564 MB_0475 MB_0321 ## MB_0482 MB_0101 MB_0662 MB_0291 MB_0465 MB_0630 MB_0036 ## MB_0166 MB_0180 MB_0525 MB_0307 MB_0002 MB_0408 MB_0466 ## MB_0632 MB_0120 MB_0507 MB_0287 MB_0869 MB_4633 MB_4627 ## MB_4004 MB_4708 MB_4618 MB_4641 MB_4622 MB_4634 MB_4688 ## MB_4665 MB_4666 MB_4640 MB_4691 MB_4671 MB_4667 MB_4721 ## MB_4723 MB_4718 MB_4716 MB_4729 MB_4717 MB_4724 MB_4770 ## MB_4752 MB_4762 MB_5169 MB_4796 MB_4790 MB_4797 MB_4800 ## MB_5541 MB_5549 MB_5519 MB_5495 MB_4832 MB_4745 MB_4825 ## MB_4814 MB_4757 MB_4694 MB_4698 MB_4715 MB_4685 MB_4712 ## MB_4672 MB_4704 MB_4655 MB_4651 MB_4661 MB_4649 MB_4642 ## MB_4674 MB_4648 MB_5197 MB_5152 MB_5201 MB_5189 MB_5281 ## MB_5212 MB_5172 MB_5183 MB_5185 MB_5022 MB_5014 MB_4994 ## MB_5017 MB_4982 MB_5004 MB_4986 MB_5327 MB_5341 MB_5323 ## MB_5328 MB_5318 MB_5287 MB_5324 MB_4682 MB_4710 MB_4701 ## MB_4709 MB_4686 MB_4706 MB_4719 MB_4702 MB_4908 MB_4871 ## MB_4906 MB_4911 MB_4866 MB_4858 MB_4862 MB_4872 MB_4887 ## MB_4867 MB_4888 MB_4929 MB_4945 MB_4930 MB_4894 MB_4898 ## MB_4670 MB_5013 MB_4977 MB_4967 MB_4981 MB_4003 MB_4968 ## MB_5052 MB_5049 MB_5041 MB_5044 MB_5072 MB_4171 MB_5053 ## MB_5045 MB_5116 MB_5120 MB_5074 MB_5119 MB_5114 MB_4230 ## MB_4154 MB_5115 MB_4737 MB_4764 MB_4735 MB_4730 MB_4733 ## MB_4758 MB_5033 MB_4741 MB_4732 MB_5305 MB_5256 MB_5273 ## MB_5236 MB_5238 MB_5233 MB_5244 MB_5253 MB_5260 MB_4998 ## MB_4993 MB_5001 MB_5084 MB_4969 MB_4999 MB_5011 MB_4959 ## MB_4599 MB_4616 MB_4623 MB_4644 MB_4869 MB_4878 MB_4851 ## MB_4233 MB_4937 MB_4934 MB_4899 MB_4912 MB_4935 MB_4933 ## MB_4900 MB_4941 MB_5221 MB_5139 MB_5222 MB_5097 MB_5338 ## MB_5315 MB_5195 MB_5226 MB_5232 MB_5160 MB_5126 MB_5124 ## MB_4855 MB_5279 MB_4173 MB_5145 MB_4944 MB_4961 MB_5121 ## MB_4956 MB_4886 MB_4950 MB_4965 MB_4962 MB_4952 MB_5267 ## MB_5266 MB_5396 MB_4938 MB_5351 MB_5347 MB_5312 MB_5311 ## MB_5284 MB_4148 MB_5078 MB_5088 MB_5064 MB_5107 MB_5066 ## MB_5068 MB_5061 MB_5070 MB_5059 MB_4266 MB_4276 MB_4771 ## MB_4739 MB_5331 MB_4743 MB_4785 MB_4778 MB_4763 MB_4779 ## MB_4849 MB_4787 MB_4767 MB_4784 MB_5043 MB_4992 MB_5020 ## MB_5019 MB_5015 MB_5048 MB_5035 MB_5398 MB_5377 MB_5291 ## MB_5403 MB_5224 MB_5369 MB_5404 MB_5397 MB_5378 MB_5388 ## MB_5395 MB_5365 MB_5389 MB_5385 MB_5393 MB_5289 MB_5361 ## MB_5392 MB_5147 MB_4140 MB_5138 MB_5123 MB_5065 MB_4127 ## MB_5058 MB_5050 MB_5027 MB_5060 MB_5062 MB_5383 MB_5101 ## MB_5258 MB_5268 MB_5261 MB_5272 MB_5264 MB_5259 MB_5306 ## MB_5270 MB_5411 MB_5490 MB_5421 MB_5348 MB_5429 MB_5405 ## MB_5414 MB_5489 MB_5417 MB_5481 MB_5409 MB_5413 MB_5299 ## MB_5408 MB_5475 MB_5505 MB_5100 MB_5325 MB_5502 MB_5485 ## MB_4293 MB_4289 MB_5293 MB_5381 MB_4834 MB_5498 MB_4749 ## MB_4818 MB_4805 MB_4809 MB_5418 MB_5441 MB_5424 MB_5296 ## MB_5446 MB_5137 MB_5219 MB_5093 MB_5350 MB_5230 MB_5206 ## MB_4687 MB_5433 MB_5442 MB_5427 MB_5491 MB_5493 MB_5451 ## MB_5454 MB_5360 MB_5229 MB_4827 MB_5455 MB_5349 MB_5370 ## MB_5290 MB_5366 MB_5382 MB_5402 MB_5288 MB_5384 MB_5358 ## MB_4357 MB_4991 MB_5401 MB_5387 MB_5390 MB_5412 MB_5193 ## MB_5182 MB_5157 MB_5205 MB_5161 MB_5292 MB_5211 MB_5218 ## MB_5209 MB_5227 MB_5213 MB_5166 MB_5163 MB_5188 MB_5143 ## MB_5329 MB_5322 MB_5310 MB_4000 MB_5240 MB_5228 MB_5136 ## MB_5140 MB_5106 MB_5117 MB_5104 MB_5131 MB_5109 MB_5176 ## MB_5158 MB_5076 MB_5215 MB_5223 MB_5179 MB_5330 MB_5144 ## MB_5196 MB_5200 MB_5583 MB_5601 MB_5632 MB_5616 MB_5604 ## MB_5589 MB_5582 MB_5625 MB_5571 MB_5596 MB_5590 MB_5599 ## MB_5629 MB_5579 MB_5623 MB_5654 MB_5617 MB_5638 MB_5635 ## MB_5642 MB_5647 MB_4018 MB_5584 MB_5626 MB_5602 MB_5653 ## MB_5576 MB_5575 MB_5646 MB_5634 MB_5591 MB_5567 MB_5651 ## MB_5603 MB_5622 MB_5597 MB_5613 MB_5580 MB_5645 MB_5548 ## MB_5526 MB_5531 MB_5468 MB_5474 MB_5514 MB_5302 MB_5510 ## MB_5473 MB_5484 MB_5432 MB_5525 MB_5562 MB_5497 MB_5551 ## MB_5300 MB_5560 MB_5550 MB_5520 MB_5529 MB_5554 MB_5301 ## MB_4421 MB_4408 MB_4146 MB_5534 MB_5521 MB_5482 MB_5483 ## MB_5532 MB_5556 MB_5518 MB_5486 MB_5511 MB_5422 MB_5535 ## MB_5477 MB_5472 MB_5540 MB_5184 MB_5294 MB_5565 MB_5040 ## MB_4801 MB_5499 MB_5459 MB_5243 MB_4120 MB_4966 MB_5457 ## MB_4011 MB_5478 MB_4822 MB_4017 MB_5018 MB_4791 MB_5118 ## MB_4806 MB_4970 MB_2964 MB_2963 MB_2957 MB_2954 MB_2916 ## MB_2725 MB_2711 MB_2730 MB_2669 MB_2705 MB_2728 MB_2708 ## MB_2735 MB_3035 MB_3064 MB_3060 MB_3049 MB_3037 MB_3063 ## MB_3083 MB_3046 MB_3067 MB_3351 MB_3367 MB_3361 MB_3412 ## MB_3371 MB_3429 MB_3360 MB_3403 MB_3350 MB_3355 MB_3329 ## MB_3467 MB_3341 MB_3298 MB_3357 MB_3388 MB_3365 MB_2749 ## MB_2754 MB_2752 MB_2745 MB_2747 MB_2760 MB_2742 MB_2750 ## MB_2753 MB_2966 MB_2953 MB_2969 MB_3014 MB_2947 MB_2951 ## MB_2960 MB_2970 MB_2971 MB_2933 MB_3479 MB_3490 MB_3487 ## MB_3459 MB_3476 MB_3492 MB_3452 MB_3303 MB_3328 MB_3300 ## MB_3277 MB_3254 MB_3275 MB_3272 MB_3271 MB_3292 MB_3840 ## MB_2536 MB_2564 MB_2513 MB_2617 MB_2614 MB_2632 MB_2556 ## MB_2624 MB_2867 MB_2922 MB_2917 MB_2858 MB_2854 MB_2853 ## MB_3235 MB_3165 MB_3171 MB_3167 MB_3222 MB_3706 MB_3497 ## MB_3488 MB_3711 MB_3548 MB_3506 MB_3525 MB_3606 MB_3453 ## MB_3545 MB_3470 MB_2765 MB_2763 MB_2767 MB_2790 MB_2769 ## MB_2842 MB_2772 MB_2779 MB_2774 MB_2983 MB_3005 MB_2977 ## MB_2996 MB_2999 MB_2994 MB_3025 MB_2984 MB_3002 MB_2845 ## MB_2912 MB_2844 MB_2847 MB_2849 MB_2851 MB_2848 MB_2863 ## MB_2840 MB_2843 MB_3013 MB_3058 MB_3016 MB_3057 MB_3008 ## MB_3021 MB_3032 MB_3007 MB_3033 MB_3026 MB_3006 MB_3439 ## MB_3437 MB_3395 MB_3386 MB_3382 MB_3379 MB_3430 MB_3389 ## MB_3378 MB_3110 MB_3079 MB_3103 MB_3102 MB_3085 MB_3122 ## MB_3104 MB_3123 MB_3121 MB_2835 MB_2838 MB_2801 MB_2834 ## MB_2796 MB_2857 MB_2819 MB_2781 MB_2793 MB_2827 MB_2814 ## MB_2791 MB_2803 MB_2797 MB_2795 MB_2786 MB_3850 MB_3556 ## MB_3838 MB_3707 MB_3600 MB_3824 MB_3823 MB_3781 MB_2642 ## MB_2686 MB_2616 MB_2634 MB_2613 MB_3842 MB_3866 MB_3874 ## MB_3871 MB_3702 MB_3105 MB_3852 MB_3854 MB_3865 MB_3228 ## MB_3028 MB_3502 MB_3567 MB_3752 MB_3450 MB_0444 MB_0476 ## MB_0610 MB_0451 MB_0133 MB_0005 MB_0048 MB_0083 MB_0053 ## MB_0056 MB_0068 MB_0093 MB_0079 MB_0108 MB_0006 MB_0014 ## MB_0022 MB_0039 MB_0062 MB_0054 MB_0081 MB_0071 MB_0099 ## MB_0064 MB_0107 MB_4681 MB_4626 MB_4639 MB_4673 MB_4711 ## MB_4607 MB_4669 MB_4015 MB_2931 MB_2927 MB_2919 MB_2944 ## MB_2929 MB_2932 MB_2724 MB_2712 MB_3062 MB_3050 MB_4722 ## MB_4731 MB_4725 MB_4707 MB_4643 MB_3363 MB_3383 MB_3344 ## MB_3381 MB_3297 MB_3301 MB_3088 MB_2764 MB_2744 MB_7114 ## MB_7118 MB_7113 MB_7130 MB_7149 MB_7140 MB_7148 MB_7208 ## MB_7170 MB_7174 MB_7252 MB_7244 MB_7187 MB_7251 MB_7173 ## MB_3001 MB_2952 MB_7097 MB_7104 MB_7099 MB_7069 MB_7066 ## MB_7100 MB_7067 MB_7073 MB_7063 MB_7102 MB_7068 MB_7075 ## MB_7053 MB_7074 MB_7057 MB_7109 MB_7051 MB_7071 MB_7106 ## MB_7059 MB_7107 MB_7076 MB_7111 MB_7015 MB_7026 MB_7013 ## MB_7023 MB_7024 MB_7014 MB_7017 MB_7019 MB_3510 MB_3500 ## MB_3396 MB_3435 MB_7186 MB_7142 MB_7196 MB_7171 MB_7145 ## MB_7132 MB_7189 MB_7137 MB_7181 MB_7155 MB_7138 MB_3295 ## MB_3218 MB_7232 MB_7281 MB_7270 MB_7231 MB_7220 MB_7277 ## MB_7269 MB_7280 MB_7227 MB_7278 MB_2610 MB_2517 MB_2896 ## MB_2901 MB_2895 MB_2900 MB_2939 MB_7008 MB_7002 MB_7000 ## MB_7006 MB_7007 MB_7011 MB_7001 MB_7009 MB_7003 MB_7005 ## MB_7010 MB_3153 MB_3211 MB_3181 MB_3252 MB_3266 MB_7082 ## MB_7081 MB_7093 MB_7083 MB_7091 MB_7065 MB_7085 MB_7096 ## MB_7018 MB_7088 MB_7055 MB_7080 MB_7161 MB_7115 MB_7123 ## MB_7176 MB_7121 MB_7172 MB_7164 MB_7127 MB_7128 MB_7157 ## MB_7092 MB_7135 MB_3754 MB_3536 MB_3748 MB_3530 MB_3582 ## MB_3528 MB_3547 MB_3576 MB_2770 MB_2758 MB_2771 MB_7152 ## MB_7143 MB_7197 MB_7153 MB_7144 MB_7185 MB_7199 MB_7158 ## MB_7163 MB_7215 MB_7200 MB_7193 MB_7188 MB_7198 MB_7256 ## MB_7258 MB_7194 MB_7254 MB_7262 MB_2990 MB_2993 MB_3031 ## MB_2904 MB_2846 MB_7154 MB_7229 MB_7151 MB_7228 MB_7218 ## MB_7147 MB_7219 MB_7165 MB_7150 MB_3436 MB_3462 MB_3417 ## MB_2721 MB_3092 MB_2821 MB_2850 MB_2820 MB_2823 MB_2792 ## MB_7273 MB_7283 MB_7284 MB_7279 MB_7233 MB_7287 MB_7250 ## MB_7238 MB_7285 MB_7260 MB_7264 MB_7268 MB_7276 MB_7212 ## MB_7267 MB_7266 MB_7216 MB_7195 MB_7201 MB_7217 MB_2778 ## MB_2815 MB_2833 MB_3614 MB_7052 MB_7124 MB_7122 MB_7133 ## MB_7084 MB_7101 MB_7116 MB_7131 MB_7090 MB_7095 MB_7094 ## MB_7087 MB_7077 MB_7072 MB_7041 MB_7044 MB_7022 MB_7070 ## MB_7079 MB_7035 MB_7025 MB_7062 MB_7036 MB_7046 MB_4839 ## MB_5559 MB_5463 MB_4744 MB_4769 MB_4484 MB_5558 MB_4750 ## MB_4793 MB_4843 MB_5563 MB_5546 MB_5513 MB_5656 MB_5530 ## MB_5553 MB_4836 MB_4828 MB_4697 MB_4679 MB_4033 MB_4692 ## MB_4675 MB_4653 MB_4663 MB_4660 MB_5275 MB_4654 MB_2618 ## MB_2718 MB_2643 MB_2629 MB_2645 MB_2626 MB_6263 MB_6305 ## MB_6185 MB_6187 MB_6248 MB_6330 MB_6184 MB_6329 MB_6283 ## MB_6359 MB_6337 MB_6256 MB_6201 MB_6207 MB_6194 MB_6281 ## MB_6322 MB_6223 MB_6190 MB_6306 MB_6188 MB_6318 MB_6228 ## MB_6226 MB_6225 MB_6280 MB_6253 MB_6098 MB_6017 MB_6019 ## MB_6163 MB_6157 MB_6179 MB_6105 MB_6047 MB_6001 MB_6050 ## MB_6169 MB_4548 MB_4564 MB_4591 MB_4557 MB_4601 MB_4598 ## MB_4578 MB_4593 MB_5186 MB_4974 MB_4978 MB_5086 MB_5150 ## MB_5345 MB_4696 MB_4695 MB_4714 MB_4705 MB_4882 MB_4879 ## MB_4881 MB_4846 MB_4870 MB_4224 MB_4845 MB_4904 MB_4865 ## MB_4876 MB_4860 MB_5081 MB_4897 MB_4925 MB_4883 MB_4896 ## MB_4987 MB_4416 MB_4374 MB_4407 MB_5039 MB_4119 MB_4091 ## MB_5079 MB_5073 MB_5105 MB_4254 MB_5174 MB_4742 MB_5239 ## MB_5251 MB_4996 MB_4282 MB_4603 MB_4621 MB_4853 MB_4362 ## MB_4602 MB_4222 MB_4893 MB_4859 MB_4212 MB_4873 MB_4942 ## MB_4949 MB_4928 MB_5098 MB_5313 MB_4145 MB_5122 MB_5278 ## MB_4213 MB_4126 MB_4957 MB_5470 MB_5317 MB_5308 MB_4976 ## MB_5277 MB_5110 MB_4046 MB_4012 MB_4141 MB_4001 MB_4792 ## MB_4738 MB_4264 MB_4794 MB_4782 MB_5008 MB_4426 MB_4390 ## MB_4434 MB_4368 MB_4442 MB_4418 MB_4381 MB_4395 MB_4630 ## MB_6010 MB_6021 MB_6059 MB_6154 MB_6097 MB_6107 MB_6023 ## MB_6152 MB_6018 MB_6082 MB_6029 MB_5295 MB_5386 MB_5092 ## MB_6068 MB_6039 MB_6022 MB_6125 MB_6053 MB_6135 MB_6042 ## MB_6058 MB_6077 MB_6052 MB_5368 MB_4189 MB_5335 MB_4008 ## MB_5134 MB_4139 MB_5130 MB_5135 MB_4880 MB_5054 MB_5057 ## MB_4098 MB_4760 MB_5102 MB_5420 MB_5458 MB_5492 MB_5407 ## MB_5394 MB_5410 MB_5435 MB_5406 MB_4329 MB_4005 MB_6288 ## MB_6272 MB_6218 MB_6246 MB_6217 MB_6308 MB_6271 MB_6245 ## MB_6233 MB_4343 MB_4281 MB_4283 MB_4341 MB_4303 MB_4274 ## MB_4292 MB_4278 MB_5399 MB_5364 MB_3526 MB_6138 MB_6049 ## MB_6055 MB_6108 MB_6044 MB_6181 MB_6100 MB_6085 MB_6113 ## MB_6079 MB_6103 MB_6016 MB_6149 MB_6131 MB_6007 MB_6147 ## MB_6114 MB_6167 MB_6146 MB_6092 MB_6160 MB_6075 MB_6011 ## MB_6071 MB_6214 MB_6334 MB_6346 MB_6319 MB_6200 MB_6336 ## MB_6211 MB_6232 MB_6234 MB_6300 MB_5533 MB_5543 MB_4236 ## MB_4234 MB_4270 MB_4235 MB_4250 MB_5467 MB_4323 MB_4318 ## MB_4333 MB_4339 MB_4322 MB_4351 MB_5063 MB_4360 MB_4375 ## MB_4798 MB_4746 MB_4838 MB_4829 MB_4802 MB_5426 MB_5444 ## MB_5431 MB_5447 MB_5434 MB_5255 MB_5231 MB_5339 MB_5208 ## MB_5428 MB_5440 MB_5425 MB_5298 MB_5334 MB_5326 MB_4059 ## MB_6230 MB_6150 MB_6014 MB_6145 MB_6012 MB_6024 MB_6124 ## MB_6171 MB_6060 MB_6008 MB_6036 MB_6144 MB_5346 MB_5373 ## MB_6178 MB_6063 MB_6020 MB_6062 MB_6069 MB_6141 MB_6118 ## MB_6065 MB_6006 MB_6048 MB_6116 MB_4310 MB_4300 MB_4298 ## MB_4417 MB_4079 MB_4317 MB_4350 MB_4332 MB_4324 MB_4306 ## MB_7226 MB_7205 MB_7160 MB_7159 MB_7167 MB_7207 MB_7237 ## MB_7241 MB_7236 MB_7168 MB_7162 MB_7235 MB_4331 MB_4353 ## MB_4354 MB_4328 MB_4348 MB_6030 MB_6133 MB_6083 MB_6026 ## MB_6168 MB_6101 MB_6156 MB_6051 MB_6182 MB_6080 MB_6143 ## MB_6164 MB_0551 MB_0391 MB_0367 MB_5171 MB_5199 MB_5177 ## MB_5178 MB_5280 MB_5148 MB_4342 MB_5225 MB_4024 MB_6314 ## MB_6257 MB_6358 MB_6242 MB_6237 MB_6183 MB_6254 MB_6231 ## MB_6204 MB_6229 MB_5154 MB_5175 MB_5173 MB_5162 MB_5164 ## MB_7253 MB_7298 MB_7299 MB_7293 MB_3978 MB_7288 MB_2923 ## MB_0402 MB_0381 MB_0592 MB_5271 MB_5235 MB_4931 MB_5332 ## MB_7045 MB_7049 MB_7031 MB_7061 MB_7050 MB_7078 MB_7054 ## MB_7048 MB_7058 MB_7056 MB_7038 MB_7086 MB_0177 MB_0435 ## MB_0159 MB_0399 MB_0388 MB_0351 MB_0615 MB_0265 MB_0116 ## MB_0472 MB_0191 MB_0231 MB_0558 MB_0393 MB_0553 MB_0587 ## MB_0611 MB_0640 MB_0114 MB_0222 MB_0284 MB_0459 MB_0128 ## MB_0639 MB_0318 MB_0417 MB_6238 MB_6286 MB_6328 MB_6284 ## MB_6363 MB_6224 MB_6297 MB_6239 MB_6208 MB_6273 MB_6344 ## MB_6312 MB_6212 MB_6302 MB_6327 MB_6287 MB_6213 MB_6251 ## MB_0489 MB_0876 MB_0342 MB_7289 MB_3253 MB_7291 MB_7243 ## MB_3466 MB_7286 MB_7292 MB_7275 MB_7249 MB_7295 MB_7297 ## MB_7294 MB_7296 MB_3402 MB_5113 MB_5450 MB_7032 MB_7037 ## MB_7040 MB_7020 MB_7042 MB_7043 MB_7028 MB_7029 MB_7027 ## MB_7060 MB_7034 MB_5191 MB_5214 MB_5204 MB_5155 MB_5190 ## MB_5614 MB_5592 MB_0437 MB_0028 MB_0309 MB_0100 MB_5648 ## MB_5572 MB_5655 MB_5577 MB_5585 MB_5620 MB_5652 MB_0537 ## MB_0544 MB_0468 MB_0333 MB_0205 MB_0233 MB_0210 MB_0200 ## MB_0244 MB_5588 MB_5628 MB_5633 MB_0169 MB_0253 MB_0226 ## MB_0278 MB_0266 MB_0577 MB_0156 MB_0531 MB_0245 MB_5641 ## MB_5640 MB_0534 MB_0230 MB_0109 MB_0304 MB_0369 MB_0627 ## MB_0492 MB_0147 MB_0442 MB_0111 MB_0634 MB_0280 MB_0490 ## MB_0885 MB_0178 MB_0242 MB_5624 MB_5593 MB_4010 MB_5605 ## MB_5636 MB_4529 MB_5566 MB_0268 MB_0160 MB_0275 MB_0127 ## MB_0045 MB_0414 MB_0259 MB_0396 MB_0874 MB_0179 MB_0526 ## MB_0586 MB_0508 MB_0288 MB_0269 MB_0582 MB_0901 MB_0000 ## MB_0535 MB_0469 MB_0478 MB_0499 MB_0170 MB_0403 MB_0464 ## MB_0421 MB_0623 MB_0241 MB_0163 MB_0149 MB_0153 MB_0350 ## MB_0512 MB_0020 MB_0046 MB_0134 MB_0495 MB_0470 MB_0872 ## MB_0661 MB_0339 MB_0264 MB_0175 MB_0303 MB_0172 MB_0125 ## MB_0340 MB_0234 MB_0487 MB_0305 MB_0390 MB_0502 MB_0663 ## MB_0130 MB_0289 MB_0129 MB_0343 MB_0458 MB_0570 MB_0281 ## MB_0488 MB_0655 MB_0235 MB_0484 MB_0436 MB_0299 MB_0877 ## MB_0097 MB_0897 MB_0095 MB_0227 MB_0353 MB_0522 MB_0543 ## MB_0646 MB_0293 MB_0552 MB_0260 MB_0256 MB_0539 MB_0626 ## MB_0211 MB_0124 MB_0510 MB_0365 MB_0290 MB_0113 MB_0620 ## MB_0282 MB_0228 MB_0578 MB_0479 MB_0263 MB_0509 MB_0110 ## MB_0279 MB_0168 MB_0588 MB_0462 MB_0262 MB_0907 MB_0554 ## MB_0418 MB_0193 MB_0652 MB_0638 MB_0188 MB_0617 MB_7225 ## MB_7141 MB_7234 MB_7089 MB_7030 MB_7004 MB_7119 MB_7263 ## MB_7012 MB_0174 MB_7182 MB_7039 MB_3797 MB_7112 MB_0308 ## MB_7230 MB_5452 MB_6195 MB_6317 MB_5460 MB_5464 MB_5552 ## MB_5547 MB_6189 MB_6122 MB_6192 MB_4820 MB_5527 MB_5167 ## MB_5465 MB_5453 MB_5471 MB_5127 MB_4313 MB_4823 MB_0830 ## MB_1065 MB_1125 MB_0720 MB_1071 MB_1128 MB_0870 MB_0735 ## MB_1022 MB_1080 MB_1133 MB_1131 MB_0808 MB_0719 MB_1063 ## MB_0803 MB_0752 MB_1023 MB_0718 MB_0818 MB_0948 MB_1024 ## MB_0721 MB_0879 MB_0938 MB_1081 MB_0894 MB_0741 MB_0722 ## MB_1103 MB_0772 MB_0908 MB_0749 MB_1007 MB_1107 MB_0821 ## MB_0875 MB_0724 MB_1034 MB_0892 MB_0726 MB_0929 MB_1050 ## MB_0905 MB_0728 MB_0932 MB_1057 MB_1011 MB_1120 MB_0825 ## MB_0762 MB_1027 MB_1122 MB_0832 MB_0683 MB_0746 MB_0933 ## MB_1074 MB_0706 MB_0754 MB_0973 MB_1077 MB_0964 MB_0988 ## MB_1085 MB_0745 MB_0707 MB_0847 MB_1018 MB_1114 MB_0857 ## MB_1021 MB_1124 MB_0939 MB_1031 MB_1134 MB_0817 MB_0865 ## MB_0998 MB_0758 MB_1082 MB_0747 MB_1100 MB_1012 MB_1105 ## MB_0971 MB_1037 MB_0727 MB_0862 MB_1028 MB_1126 MB_1132 ## MB_0682 MB_0952 MB_0675 MB_1075 MB_0955 MB_0710 MB_1086 ## MB_0777 MB_0689 MB_0717 MB_0778 MB_0691 MB_0937 MB_0779 ## MB_0704 MB_0936 MB_1121 MB_0782 MB_1009 MB_1130 MB_0712 ## MB_1055 MB_1096 MB_0784 MB_0748 MB_1104 MB_0956 MB_1111 ## MB_0961 MB_0775 MB_0811 MB_0848 MB_1127 MB_0776 MB_0833 ## MB_1014 MB_1129 MB_0669 MB_1039 MB_1030 MB_0766 MB_1033 ## MB_1036 MB_1116 MB_1044 MB_1049 MB_1068 MB_0812 MB_1076 ## MB_0814 MB_1087 MB_0822 ## [ reached getOption(&quot;max.print&quot;) -- omitted 6 rows ] dim(expr_mat) ## [1] 26245 2124 Note that we matched promoter methylation and gene expression profiles using Refseq annotations. Alternative promoters were resolved by selecting the promoter with the minimal average methylation value in the normal samples. 3.3.0.3 Genomic methylation: After we use the promoter methylation and expression to deconvolute the data, we can remove the TME signatures also from the genomic regions. We need, therefore, do load also the entire avg. methylation dataset (both promoter and genomic): genomic_avg_meth &lt;- fread(here(&quot;data/genomic_msp1_avg_meth_filt.csv&quot;)) %&gt;% as_tibble() all_meth &lt;- bind_rows( prom_avg_meth, genomic_avg_meth ) head(all_meth) ## # A tibble: 6 x 1,785 ## chrom start end MB_0006 MB_0028 MB_0030 MB_0035 MB_0040 MB_0046 MB_0050 ## 1 chr1 762469 763020 0 0 0 0 0 0 0 ## MB_0053 MB_0054 MB_0062 MB_0064 MB_0068 MB_0112 MB_0113 MB_0114 ## 1 NA 0 0 0.0212766 0 0.01058201 0 NA ## MB_0118 MB_0119 MB_0120 MB_0121 MB_0123 MB_0124 MB_0125 MB_0126 ## 1 0.007067138 0.007751938 0 0 0 0.01731602 0 0.02469136 ## MB_0127 MB_0128 MB_0129 MB_0130 MB_0131 MB_0133 MB_0134 MB_0135 MB_0136 ## 1 0 0 0 0.01176471 0.0125 0 0.02752294 0 0 ## MB_0137 MB_0138 MB_0140 MB_0142 MB_0143 MB_0144 MB_0145 MB_0146 ## 1 0.008403361 0 0 0 0.004901961 0 0.00990099 0 ## MB_0147 MB_0148 MB_0149 MB_0150 MB_0151 MB_0152 MB_0154 MB_0155 ## 1 0.02608696 0 0 0 0 0 NA 0.004032258 ## MB_0157 MB_0162 MB_0163 MB_0164 MB_0165 MB_0166 MB_0167 MB_0168 ## 1 0 0 NA 0.02380952 0 0.02112676 0 0.005494505 ## MB_0169 MB_0170 MB_0171 MB_0172 MB_0173 MB_0174 MB_0175 MB_0176 ## 1 0.03 0 0.04651163 0 0.009569378 0.01960784 0 0 ## MB_0177 MB_0178 MB_0179 MB_0180 MB_0181 MB_0184 MB_0188 MB_0189 ## 1 0.01351351 0.02941176 0.01219512 NA 0 0 0 0 ## MB_0191 MB_0192 MB_0193 MB_0194 MB_0195 MB_0197 MB_0198 MB_0199 MB_0201 ## 1 NA 0 0 NA 0.01709402 0 0.01886792 0 0 ## MB_0202 MB_0203 MB_0204 MB_0205 MB_0206 MB_0207 MB_0214 MB_0215 MB_0218 ## 1 0 0.03 0 0.01442308 0 0.02173913 0 0 0 ## MB_0220 MB_0221 MB_0222 MB_0223 MB_0224 MB_0225 MB_0226 ## 1 NA NA 0 0.01869159 0.02197802 0.01886792 0.01492537 ## MB_0227 MB_0228 MB_0229 MB_0231 MB_0233 MB_0234 MB_0235 MB_0236 ## 1 0.006993007 NA 0 NA 0 0 0.004608295 0 ## MB_0238 MB_0239 MB_0240 MB_0241 MB_0242 MB_0243 MB_0244 MB_0245 ## 1 NA 0 0 0 0 0 0.01204819 0 ## MB_0246 MB_0248 MB_0249 MB_0250 MB_0251 MB_0252 MB_0253 ## 1 0.004739336 0 0.01898734 0.01449275 0.03255814 0.03191489 0.005882353 ## MB_0254 MB_0255 MB_0256 MB_0257 MB_0258 MB_0259 MB_0260 ## 1 0 0.006666667 0 0.004273504 0.01315789 NA 0.01675978 ## MB_0261 MB_0262 MB_0263 MB_0264 MB_0265 MB_0266 MB_0268 MB_0270 ## 1 0.008474576 0.04878049 0 0 0 0 0.009345794 NA ## MB_0271 MB_0272 MB_0273 MB_0278 MB_0279 MB_0280 MB_0282 MB_0283 MB_0284 ## 1 0 0.02542373 0 0 0.01716738 0 0.00625 0 0 ## MB_0285 MB_0286 MB_0287 MB_0288 MB_0290 MB_0291 MB_0292 MB_0293 ## 1 0.04109589 0 0 0.06153846 NA NA NA 0.04301075 ## MB_0294 MB_0295 MB_0301 MB_0302 MB_0303 MB_0304 MB_0305 MB_0306 ## 1 0 0 0.02083333 0.006896552 NA 0 0 0 ## MB_0307 MB_0308 MB_0309 MB_0310 MB_0311 MB_0312 MB_0313 MB_0314 MB_0315 ## 1 0 0.01273885 NA 0.01262626 0 0 0 0 0 ## MB_0316 MB_0317 MB_0318 MB_0319 MB_0320 MB_0321 MB_0322 MB_0324 ## 1 0 0 0 0.01190476 0 0.01075269 0.01507538 0.00308642 ## MB_0325 MB_0327 MB_0328 MB_0329 MB_0330 MB_0336 MB_0339 MB_0340 ## 1 0.009615385 0 0.01869159 0 0 0 0.006451613 0 ## MB_0341 MB_0342 MB_0343 MB_0345 MB_0348 MB_0349 MB_0350 MB_0352 MB_0353 ## 1 0 0 0 0 0.03030303 0 0 0 NA ## MB_0356 MB_0358 MB_0359 MB_0360 MB_0361 MB_0362 MB_0363 MB_0364 ## 1 0.05660377 0 0.0137931 0 NA 0 0 0 ## MB_0365 MB_0366 MB_0367 MB_0368 MB_0369 MB_0370 MB_0371 MB_0373 ## 1 0.008333333 0 0.02898551 0.01239669 0.02 0 0.003533569 0 ## MB_0374 MB_0375 MB_0378 MB_0379 MB_0380 MB_0381 MB_0383 MB_0384 ## 1 0 0.02380952 0 0 0 0.0137931 0.008064516 0.006329114 ## MB_0385 MB_0386 MB_0388 MB_0389 MB_0391 MB_0392 MB_0393 MB_0394 MB_0395 ## 1 0 0 0 0 0 0 0 0.03015075 0 ## MB_0396 MB_0398 MB_0399 MB_0400 MB_0401 MB_0402 MB_0404 MB_0406 ## 1 0 0 0 0 0 0.01550388 0 0.00660066 ## MB_0408 MB_0410 MB_0411 MB_0412 MB_0413 MB_0414 MB_0417 MB_0418 ## 1 0.02545455 0 0.0212766 0 0.01694915 0 0 0.006802721 ## MB_0419 MB_0420 MB_0421 MB_0422 MB_0425 MB_0426 MB_0427 ## 1 0.008695652 0.01156069 0.008474576 NA 0 0.01492537 0.008196721 ## MB_0428 MB_0429 MB_0431 MB_0432 MB_0434 MB_0436 MB_0437 MB_0439 ## 1 0 0.03333333 0 0 0 0.00462963 0 0.006410256 ## MB_0440 MB_0442 MB_0443 MB_0444 MB_0445 MB_0446 ## 1 0.01724138 0.008888889 0.008474576 0.004098361 0.03465347 0.04098361 ## MB_0449 MB_0451 MB_0452 MB_0453 MB_0454 MB_0455 MB_0458 MB_0460 ## 1 0.008403361 0 0.01526718 0.01092896 0 0 0 0 ## MB_0462 MB_0464 MB_0465 MB_0466 MB_0467 MB_0468 MB_0469 MB_0471 MB_0474 ## 1 0 0.01666667 0 0.0125 0.0125 0 0 0 0.02597403 ## MB_0475 MB_0476 MB_0478 MB_0479 MB_0480 MB_0481 MB_0482 MB_0483 MB_0484 ## 1 NA 0 0.01242236 0 0 0 NA NA 0 ## MB_0485 MB_0486 MB_0487 MB_0488 MB_0489 MB_0492 MB_0496 MB_0497 ## 1 0.008333333 NA 0.003937008 NA 0 0.05714286 0 0 ## MB_0500 MB_0501 MB_0502 MB_0503 MB_0504 MB_0505 MB_0506 MB_0507 ## 1 0 0.01522843 0.003558719 0 0 0.01204819 0 0.01226994 ## MB_0508 MB_0510 MB_0511 MB_0512 MB_0513 MB_0514 MB_0516 MB_0519 ## 1 0 0.02884615 NA 0 0 0 0.02702703 0.01016949 ## MB_0521 MB_0525 MB_0527 MB_0528 MB_0529 MB_0530 MB_0531 MB_0532 ## 1 0 0.008695652 0 0 0 0.006756757 0 0.009009009 ## MB_0534 MB_0535 MB_0536 MB_0538 MB_0542 MB_0544 MB_0545 MB_0546 ## 1 0.04444444 0 0.009345794 0 0.02238806 0.01219512 0 0 ## MB_0549 MB_0550 MB_0551 MB_0552 MB_0553 MB_0558 MB_0559 MB_0566 ## 1 0 0.008474576 0.03278689 0 0.009174312 0.01492537 0 0 ## MB_0568 MB_0569 MB_0570 MB_0571 MB_0572 MB_0574 MB_0575 MB_0576 ## 1 0 0.01515152 0.0125 0.0212766 0 0.01724138 0 0 ## MB_0580 MB_0581 MB_0582 MB_0583 MB_0585 MB_0589 MB_0591 MB_0593 MB_0594 ## 1 0 0 0 0 0.02739726 0 0 0 0 ## MB_0596 MB_0597 MB_0600 MB_0601 MB_0603 MB_0605 MB_0606 MB_0608 ## 1 0 0 0.005681818 0 0 0.004132231 0 NA ## MB_0609 MB_0610 MB_0615 MB_0616 MB_0617 MB_0618 MB_0620 MB_0621 ## 1 0 0.01459854 0 0.007692308 0 0 0.003968254 0 ## MB_0622 MB_0623 MB_0626 MB_0627 MB_0628 MB_0631 MB_0632 MB_0637 ## 1 0 0 0 0 0.01851852 0.0326087 0.007692308 0.02197802 ## MB_0638 MB_0639 MB_0642 MB_0643 MB_0646 MB_0649 MB_0650 MB_0653 MB_0655 ## 1 0 0.05128205 0 0 0 0 0 0 0 ## MB_0656 MB_0657 MB_0659 MB_0662 MB_0663 MB_0664 MB_0666 MB_0668 MB_0676 ## 1 0 0 0 0 0 0 0 NA 0 ## MB_0684 MB_0685 MB_0692 MB_0698 MB_0700 MB_0719 MB_0724 MB_0732 ## 1 NA 0.004166667 0 0.003703704 0 0 0 0 ## MB_0735 MB_0739 MB_0748 MB_0756 MB_0767 MB_0768 MB_0770 MB_0772 MB_0778 ## 1 0.01234568 0 0 0 0 0.01538462 0 0 0 ## MB_0779 MB_0785 MB_0786 MB_0788 MB_0794 MB_0795 MB_0801 MB_0803 MB_0818 ## 1 0 0 0 0 0 0 0.02380952 0 0 ## MB_0825 MB_0826 MB_0828 MB_0833 MB_0835 MB_0841 MB_0850 MB_0857 MB_0865 ## 1 0 0.008695652 0 0 0 0 0 0 0 ## MB_0868 MB_0872 MB_0873 MB_0875 MB_0877 MB_0878 MB_0879 ## 1 0.01117318 0.009259259 0.01324503 0.004484305 0 0.02932551 0.008635579 ## MB_0880 MB_0881 MB_0884 MB_0886 MB_0890 MB_0892 MB_0894 MB_0895 ## 1 0 NA 0.02083333 0 0.03125 0.015625 0.02956989 NA ## MB_0897 MB_0898 MB_0899 MB_0901 MB_0902 MB_0904 MB_0905 MB_0906 ## 1 0 0.02409639 0.009708738 0 0.01369863 0 0 0 ## MB_0908 MB_0923 MB_0924 MB_0925 MB_0927 MB_0928 MB_0929 ## 1 0.006944444 0.01554404 0.01960784 0 0 0.03149606 0.006944444 ## MB_0930 MB_0931 MB_0932 MB_0933 MB_0934 MB_0935 MB_0936 MB_0937 ## 1 0.04 0.02739726 0 0 0 0.00990099 0.007462687 0 ## MB_0939 MB_0941 MB_0942 MB_0943 MB_0944 MB_0945 MB_0947 MB_0948 MB_0949 ## 1 0 0 0 0 NA 0.01463415 0.02564103 0 0 ## MB_0950 MB_0951 MB_0952 MB_0953 MB_0955 MB_0956 MB_0957 MB_0958 ## 1 0.02 0.003649635 0 0.02020202 0 0 0 0 ## MB_0961 MB_0964 MB_0965 MB_0966 MB_0967 MB_0968 MB_0969 MB_0970 ## 1 0 0 NA 0.04046243 0.02247191 0.004807692 0 0 ## MB_0971 MB_0973 MB_0974 MB_0975 MB_0976 MB_0978 MB_0979 MB_0980 MB_0982 ## 1 0.03361345 0 0 0 0 0 0 0.01398601 NA ## MB_0983 MB_0984 MB_0986 MB_0987 MB_0988 MB_0989 MB_0990 MB_0991 ## 1 0 0 0.008196721 0 0 0 0.002570694 0.004672897 ## MB_0992 MB_0993 MB_0994 MB_0995 MB_0996 MB_0997 MB_0998 ## 1 0 0 0.007604563 0.01793722 0 0.007751938 0.01398601 ## MB_0999 MB_1001 MB_1002 MB_1003 MB_1004 MB_1005 MB_1006 MB_1007 ## 1 0.004201681 0 0.01190476 0 0.01156069 0 0.005494505 0.00625 ## MB_1008 MB_1009 MB_1010 MB_1011 MB_1012 MB_1013 MB_1014 MB_1015 ## 1 0 0 0 0 0.004032258 0.01438849 0 0.02027027 ## MB_1017 MB_1018 MB_1020 MB_1022 MB_1023 MB_1024 MB_1025 ## 1 0.01923077 0.005025126 0.01156069 0.005899705 0.006666667 0.006493506 0 ## MB_1026 MB_1027 MB_1028 MB_1029 MB_1031 MB_1032 MB_1033 MB_1034 ## 1 0 0.04225352 0.01492537 0.01408451 0 0 0.01162791 0 ## MB_1035 MB_1036 MB_1037 MB_1038 MB_1039 MB_1040 MB_1041 MB_1043 ## 1 0.02564103 0 0.01333333 0 0.02816901 0 0 0 ## MB_1044 MB_1045 MB_1046 MB_1047 MB_1048 MB_1049 MB_1050 MB_1051 MB_1052 ## 1 0.04545455 0 0 0 0 0 0 0 0 ## MB_1053 MB_1054 MB_1055 MB_1056 MB_1057 MB_1058 MB_1059 MB_1061 ## 1 0.00990099 0.0106383 NA 0 0 0.01666667 0.005847953 0 ## MB_1062 MB_1063 MB_1064 MB_1065 MB_1066 MB_1067 MB_1068 ## 1 0.03125 0.008695652 0.00617284 0.008196721 0.008264463 0.0125 0 ## MB_1069 MB_1070 MB_1071 MB_1072 MB_1073 MB_1074 MB_1075 ## 1 0.009174312 0.01923077 0 0 0.01142857 0.006896552 0.01652893 ## MB_1076 MB_1077 MB_1078 MB_1079 MB_1080 MB_1081 MB_1082 MB_1083 ## 1 0 0 0.01176471 0.06451613 0 0.01818182 0 0.01123596 ## MB_1084 MB_1085 MB_1086 MB_1087 MB_1090 MB_1091 MB_1093 MB_1096 ## 1 0.01234568 0.01694915 0.006329114 0 NA 0 0 0.02040816 ## MB_1097 MB_1098 MB_1100 MB_1101 MB_1102 MB_1103 MB_1104 MB_1105 MB_1107 ## 1 0.02941176 0 0.00617284 0 0 0 0 0 0 ## MB_1110 MB_1111 MB_1114 MB_1116 MB_1118 MB_1119 MB_1120 ## 1 0 0.006410256 0.006493506 0 0 0.01086957 0.004950495 ## MB_1121 MB_1122 MB_1123 MB_1124 MB_1125 MB_1126 MB_1127 MB_1129 ## 1 0.005235602 0 0.0122449 0.04950495 0 0 0 0.008163265 ## MB_1130 MB_1131 MB_1132 MB_1134 MB_1135 MB_1136 MB_1137 MB_1138 ## 1 0 0 0 0.01002506 0.01081081 0 0 0.003174603 ## MB_1139 MB_1141 MB_1142 MB_1143 MB_1144 MB_1145 MB_1146 ## 1 0.004694836 0.007712082 0 0.004484305 0.009836066 0.00877193 0.0130719 ## MB_1147 MB_1148 MB_1149 MB_1151 MB_1152 MB_1155 MB_1156 ## 1 0.009966777 0.02479339 0.007092199 0.004901961 0.01123596 0.01877934 0 ## MB_2517 MB_2536 MB_2556 MB_2564 MB_2610 MB_2613 MB_2614 MB_2616 ## 1 0 0.005263158 0 0.01197605 0.0234375 0 0.02380952 0 ## MB_2617 MB_2618 MB_2624 MB_2626 MB_2632 MB_2634 MB_2640 MB_2643 MB_2645 ## 1 0 0 0 0 0.05263158 0 0 0.01652893 NA ## MB_2669 MB_2686 MB_2705 MB_2708 MB_2711 MB_2712 MB_2718 ## 1 0 0 NA 0.01587302 0.01960784 0.00862069 0.005181347 ## MB_2724 MB_2728 MB_2730 MB_2742 MB_2744 MB_2745 MB_2747 MB_2749 ## 1 0.02255639 0 0 NA 0 0 0.01604278 0.02439024 ## MB_2750 MB_2752 MB_2753 MB_2754 MB_2760 MB_2763 MB_2764 ## 1 0.009345794 0.02777778 0.02659574 0.01865672 0 0.009090909 0 ## MB_2765 MB_2767 MB_2769 MB_2770 MB_2772 MB_2774 MB_2775 MB_2778 ## 1 0 NA 0 0.04477612 0.01869159 0.01123596 0.008333333 0 ## MB_2779 MB_2781 MB_2790 MB_2791 MB_2792 MB_2793 MB_2796 MB_2803 ## 1 0.03448276 0.02884615 0 0.02857143 0 0.007246377 0 0 ## MB_2814 MB_2819 MB_2820 MB_2821 MB_2827 MB_2833 MB_2834 ## 1 0 0 0.01010101 0.02857143 0.01923077 0.02884615 0.00617284 ## MB_2835 MB_2838 MB_2840 MB_2842 MB_2843 MB_2844 MB_2845 MB_2846 MB_2847 ## 1 0.01123596 0 0 0 0.01986755 0 0 0 0 ## MB_2848 MB_2849 MB_2850 MB_2851 MB_2853 MB_2854 MB_2862 MB_2895 ## 1 0.006993007 0 0 0 0 0 0.008264463 0 ## MB_2896 MB_2901 MB_2912 MB_2916 MB_2917 MB_2919 MB_2923 MB_2927 ## 1 0 0 0 0 0.01904762 0.02898551 0 NA ## MB_2929 MB_2931 MB_2933 MB_2939 MB_2951 MB_2952 MB_2953 ## 1 0.008264463 0 0.03623188 0 0.02027027 0 0.003846154 ## MB_2954 MB_2957 MB_2960 MB_2963 MB_2969 MB_2977 MB_2983 ## 1 0.01488095 0.02105263 0.005347594 0.01324503 0 0.01079137 0 ## MB_2984 MB_2990 MB_2993 MB_2994 MB_2996 MB_3001 MB_3005 MB_3006 ## 1 0.01910828 0 0 0 0 NA 0.007692308 NA ## MB_3007 MB_3008 MB_3014 MB_3016 MB_3021 MB_3025 MB_3028 MB_3031 ## 1 0 0.01030928 0 NA 0 0 NA 0.01010101 ## MB_3033 MB_3035 MB_3037 MB_3046 MB_3049 MB_3050 MB_3057 MB_3058 ## 1 0.01442308 0.01574803 0 0.01176471 0 NA 0 0 ## MB_3063 MB_3064 MB_3067 MB_3079 MB_3082 MB_3083 MB_3085 ## 1 0 0 0.03125 0.01219512 0.008130081 0.01818182 0.007142857 ## MB_3088 MB_3089 MB_3102 MB_3104 MB_3105 MB_3110 MB_3121 MB_3122 ## 1 0.01369863 0 0 0.01315789 0 0 0.01754386 0 ## MB_3153 MB_3165 MB_3167 MB_3171 MB_3211 MB_3218 MB_3228 MB_3235 ## 1 0 0.01176471 0.03184713 0.0106383 0.004672897 NA 0 0 ## MB_3252 MB_3253 MB_3254 MB_3266 MB_3271 MB_3275 MB_3277 ## 1 0 0.02702703 0 0.006622517 0 0.01209677 0.0106383 ## MB_3292 MB_3295 MB_3297 MB_3298 MB_3300 MB_3301 MB_3315 MB_3328 ## 1 0.009259259 0 0.04098361 0.01574803 0.02941176 0 0.025 0 ## MB_3329 MB_3341 MB_3350 MB_3351 MB_3357 MB_3360 MB_3361 MB_3367 ## 1 NA 0 0.009615385 0 NA 0.02105263 NA 0 ## MB_3371 MB_3378 MB_3382 MB_3383 MB_3395 MB_3396 MB_3402 MB_3403 ## 1 0.01818182 0 0 0 0 0.01941748 0 0 ## MB_3412 MB_3417 MB_3429 MB_3430 MB_3435 MB_3436 MB_3437 ## 1 0.03825137 0.04469274 0.01242236 0.005617978 0.02040816 0 0 ## MB_3439 MB_3452 MB_3453 MB_3459 MB_3462 MB_3467 MB_3470 MB_3476 ## 1 0 0.02727273 0 0.01863354 0 0 0.008264463 0.004950495 ## MB_3479 MB_3490 MB_3492 MB_3497 MB_3500 MB_3502 MB_3506 MB_3510 MB_3526 ## 1 0.01492537 0.01273885 0 0 0 0 0 0 0 ## MB_3545 MB_3548 MB_3555 MB_3556 MB_3560 MB_3576 MB_3582 MB_3600 ## 1 NA NA 0 0 NA 0.006622517 0 0.004587156 ## MB_3614 MB_3676 MB_3702 MB_3706 MB_3707 MB_3711 MB_3747 MB_3748 ## 1 0 0 0.005586592 0.007194245 0 NA 0 0.0375 ## MB_3752 MB_3754 MB_3755 MB_3781 MB_3804 MB_3823 MB_3824 MB_3838 ## 1 NA 0 0 0.01970443 0.01913876 0 0.02272727 0.02290076 ## MB_3840 MB_3842 MB_3850 MB_3852 MB_3854 MB_3865 MB_3866 MB_3871 MB_3874 ## 1 0 0.03448276 0 NA 0 0 0 0 0 ## MB_3978 MB_4000 MB_4001 MB_4003 MB_4004 MB_4008 MB_4012 MB_4015 ## 1 0 0 0 0.009009009 0 0 0 0.006024096 ## MB_4017 MB_4018 MB_4024 MB_4033 MB_4036 MB_4038 MB_4039 MB_4040 ## 1 0 0 0 0 0.01357466 0.02117647 0 0 ## MB_4042 MB_4046 MB_4048 MB_4049 MB_4051 MB_4053 MB_4054 ## 1 0.004115226 0 0.04242424 0.01030928 0.01030928 0.00913242 0.01273885 ## MB_4055 MB_4056 MB_4057 MB_4058 MB_4059 MB_4060 MB_4061 MB_4062 ## 1 0.01298701 0.05839416 0 0.02803738 0 0.03007519 0 0 ## MB_4063 MB_4064 MB_4066 MB_4072 MB_4079 MB_4083 MB_4084 ## 1 0.01612903 0.008522727 0.05464481 0.006711409 0 0.01298701 0.01287554 ## MB_4091 MB_4098 MB_4110 MB_4117 MB_4119 MB_4120 MB_4123 ## 1 0.005555556 0.01333333 0.02702703 0.02298851 0.01923077 0.005681818 0 ## MB_4126 MB_4127 MB_4139 MB_4141 MB_4145 MB_4146 MB_4148 MB_4154 ## 1 0 0 0 0 0.01282051 0 0.02083333 0 ## MB_4169 MB_4171 MB_4173 MB_4189 MB_4190 MB_4211 MB_4212 ## 1 0.007662835 0.004081633 0.01036269 0.02439024 0 0.00990099 0.02380952 ## MB_4213 MB_4222 MB_4224 MB_4230 MB_4233 MB_4234 MB_4235 ## 1 0 0.004761905 0 0.004347826 0.016 0.01086957 0.009868421 ## MB_4236 MB_4254 MB_4255 MB_4264 MB_4266 MB_4268 MB_4270 MB_4272 ## 1 0 0.005128205 0.03448276 0.0125 0 0 0.01265823 0 ## MB_4274 MB_4276 MB_4278 MB_4281 MB_4282 MB_4283 MB_4289 ## 1 0 0.005780347 0.01481481 0 0.02645503 0.005102041 0.03333333 ## MB_4293 MB_4300 MB_4306 MB_4308 MB_4310 MB_4313 MB_4317 MB_4318 MB_4322 ## 1 0.01183432 0.01142857 0 NA 0.03 0 0 NA 0 ## MB_4323 MB_4328 MB_4331 MB_4333 MB_4339 MB_4341 MB_4342 MB_4343 MB_4348 ## 1 0 0 0 0 0 0 0 NA 0 ## MB_4350 MB_4351 MB_4353 MB_4354 MB_4357 MB_4360 MB_4361 MB_4362 ## 1 0.01492537 0.03030303 0.009009009 NA 0 0 0 0.01935484 ## MB_4368 MB_4374 MB_4375 MB_4381 MB_4390 MB_4395 MB_4407 MB_4408 ## 1 0.01204819 NA 0 0 0.01219512 0.01639344 0 0 ## MB_4409 MB_4410 MB_4413 MB_4416 MB_4417 MB_4421 MB_4426 MB_4431 ## 1 0 0.01785714 0.004587156 0.01578947 0 0 0.03680982 NA ## MB_4434 MB_4442 MB_4444 MB_4455 MB_4458 MB_4464 MB_4465 MB_4474 ## 1 0.01369863 0.008823529 0 0 0 0.009852217 0.02631579 0 ## MB_4477 MB_4482 MB_4483 MB_4484 MB_4487 MB_4492 MB_4495 ## 1 0 0.005390836 0 0.008130081 0.003344482 0 0.008888889 ## MB_4511 MB_4521 MB_4528 MB_4529 MB_4531 MB_4541 MB_4548 MB_4556 ## 1 NA 0 0 0.005681818 0 0 0.01123596 0.01851852 ## MB_4557 MB_4558 MB_4564 MB_4578 MB_4591 MB_4593 MB_4598 ## 1 0 0.01363636 0.05263158 0 0.005154639 0.01428571 0.0245098 ## MB_4599 MB_4601 MB_4602 MB_4603 MB_4607 MB_4613 MB_4616 ## 1 0.003236246 0.008230453 0 0 0.01187648 0 0.002624672 ## MB_4618 MB_4621 MB_4622 MB_4623 MB_4626 MB_4627 MB_4630 ## 1 0 0 0.02941176 0 0.03937008 0.01052632 0.02564103 ## MB_4633 MB_4634 MB_4635 MB_4639 MB_4640 MB_4641 MB_4642 ## 1 0.008230453 0 0 0 0.007407407 0.004149378 0 ## MB_4643 MB_4644 MB_4648 MB_4649 MB_4651 MB_4653 MB_4654 MB_4655 ## 1 0.01577287 0 0 0 0.015625 0.008298755 0.01777778 0.016 ## MB_4661 MB_4663 MB_4665 MB_4666 MB_4669 MB_4670 MB_4671 ## 1 0.005882353 0 0.01481481 0.01388889 0.01716738 0 0.007843137 ## MB_4672 MB_4673 MB_4674 MB_4675 MB_4679 MB_4681 MB_4682 ## 1 0 0.01212121 0.003115265 0.01886792 0.00877193 0 0 ## MB_4685 MB_4686 MB_4688 MB_4691 MB_4692 MB_4694 MB_4696 ## 1 0.03597122 0.009049774 0.02197802 0.005076142 0.01219512 0 0 ## MB_4697 MB_4698 MB_4701 MB_4702 MB_4704 MB_4705 MB_4706 MB_4708 ## 1 0 0 0.01626016 0.02112676 0 0.0106383 0.01416431 0.0297619 ## MB_4709 MB_4710 MB_4711 MB_4712 MB_4714 MB_4715 MB_4716 ## 1 0.01045296 0.01010101 0.01428571 0.00862069 0.012 0.02824859 0 ## MB_4717 MB_4719 MB_4722 MB_4723 MB_4724 MB_4725 MB_4729 ## 1 0 0 0.008333333 0.01612903 0.005847953 0.0212766 0.01324503 ## MB_4730 MB_4731 MB_4732 MB_4733 MB_4735 MB_4737 MB_4738 ## 1 0.008403361 0 0.01818182 0.005376344 0.02332362 0.01111111 0.02631579 ## MB_4739 MB_4741 MB_4742 MB_4743 MB_4744 MB_4745 MB_4746 ## 1 0.01010101 0.009433962 0.01098901 0.01428571 0 0.004310345 0 ## MB_4749 MB_4752 MB_4757 MB_4758 MB_4762 MB_4763 MB_4764 MB_4767 ## 1 0 0 0.005617978 0 0.015625 0.008583691 0.03723404 0 ## MB_4769 MB_4770 MB_4771 MB_4778 MB_4779 MB_4782 MB_4784 ## 1 0.0248227 0.003344482 0.01398601 0 0.006024096 0.007092199 0.008264463 ## MB_4785 MB_4787 MB_4790 MB_4791 MB_4793 MB_4794 MB_4796 MB_4797 ## 1 0 0.02054795 0.004830918 0.02 0 0.02739726 0.01030928 0 ## MB_4798 MB_4800 MB_4801 MB_4802 MB_4805 MB_4806 MB_4809 ## 1 0.01 0 0.02536232 0.007092199 0.02941176 0 0.02884615 ## MB_4814 MB_4816 MB_4818 MB_4820 MB_4825 MB_4827 MB_4828 ## 1 0.006289308 0.02083333 0.01190476 0.01287554 0 0.003546099 0.008849558 ## MB_4829 MB_4832 MB_4834 MB_4836 MB_4838 MB_4839 MB_4843 ## 1 0 0.03797468 0 0.008849558 0.01176471 0 0.01117318 ## MB_4849 MB_4851 MB_4853 MB_4855 MB_4858 MB_4859 MB_4862 ## 1 0.01980198 0 0.009852217 0.01666667 0.008695652 0.004329004 0.02857143 ## MB_4865 MB_4866 MB_4867 MB_4869 MB_4871 MB_4872 MB_4873 ## 1 0.01098901 0.01086957 0.01067616 0.00862069 0.007125891 0 0.006514658 ## MB_4876 MB_4878 MB_4879 MB_4880 MB_4881 MB_4883 MB_4886 ## 1 0.02112676 0.01764706 0.05769231 0.02702703 0 0.01230769 0.01149425 ## MB_4887 MB_4888 MB_4893 MB_4894 MB_4896 MB_4897 MB_4898 ## 1 0.007662835 0.01149425 0.008 0.009950249 0 0.007692308 0.04705882 ## MB_4899 MB_4900 MB_4904 MB_4907 MB_4908 MB_4911 MB_4912 MB_4925 ## 1 0 0.01351351 0.01648352 0.006993007 0 0 0 0.01197605 ## MB_4928 MB_4929 MB_4930 MB_4931 MB_4933 MB_4934 MB_4935 ## 1 0 0.006024096 0.02439024 0.02678571 0.01081081 0.008928571 0.02097902 ## MB_4937 MB_4941 MB_4942 MB_4944 MB_4945 MB_4949 MB_4950 ## 1 0.01840491 0.01075269 0.02116402 0.0078125 0.003333333 0.005882353 0 ## MB_4952 MB_4956 MB_4957 MB_4959 MB_4961 MB_4962 MB_4965 ## 1 0.01333333 0 0.01333333 0 0.005405405 0 0.009852217 ## MB_4966 MB_4967 MB_4968 MB_4969 MB_4970 MB_4976 MB_4977 MB_4981 ## 1 0.009756098 0.03614458 0 0.005882353 0.025 0 0 0.01190476 ## MB_4986 MB_4987 MB_4991 MB_4992 MB_4993 MB_4994 MB_4996 ## 1 0.01204819 0.008849558 0 0 0.01156069 0.01239669 0.009009009 ## MB_4998 MB_4999 MB_5001 MB_5004 MB_5008 MB_5011 MB_5013 MB_5014 ## 1 0.005 0.006289308 0.01298701 0.02272727 0 0 0 0.004854369 ## MB_5015 MB_5018 MB_5019 MB_5022 MB_5027 MB_5028 MB_5033 MB_5039 ## 1 0 0.01428571 0 0 0.002832861 0 0.016 0 ## MB_5040 MB_5041 MB_5043 MB_5044 MB_5045 MB_5049 MB_5050 MB_5052 ## 1 0.01176471 0.005376344 0 0 0 0 0.01403509 0.0239521 ## MB_5053 MB_5054 MB_5057 MB_5059 MB_5060 MB_5061 MB_5062 ## 1 0 0.01398601 0.01098901 0 0.01075269 0 0.01315789 ## MB_5063 MB_5064 MB_5066 MB_5068 MB_5070 MB_5072 MB_5073 ## 1 0.02083333 0.008333333 0.01449275 0 0.008333333 0 0.005865103 ## MB_5074 MB_5078 MB_5079 MB_5081 MB_5084 MB_5086 MB_5088 ## 1 0.02439024 0.02702703 0.009090909 0.009852217 0.00304878 0 0 ## MB_5092 MB_5098 MB_5100 MB_5101 MB_5102 MB_5105 MB_5107 ## 1 0.01648352 0.004950495 0 0 0.02840909 0.004651163 0.01507538 ## MB_5110 MB_5114 MB_5115 MB_5116 MB_5118 MB_5120 MB_5121 ## 1 0.005988024 0.015625 0 0.01393728 0.003215434 0.008474576 0 ## MB_5122 MB_5123 MB_5124 MB_5126 MB_5127 MB_5134 MB_5135 MB_5138 ## 1 0.02173913 0.01351351 0 0 0.05102041 0 0 0 ## MB_5139 MB_5144 MB_5145 MB_5147 MB_5150 MB_5152 MB_5157 MB_5161 MB_5164 ## 1 0 0 0.01574803 0 0 0 0 0 0 ## MB_5167 MB_5169 MB_5171 MB_5172 MB_5174 MB_5175 MB_5176 MB_5182 ## 1 0.04477612 0.02654867 0 NA 0 0 0 0.01111111 ## MB_5184 MB_5186 MB_5188 MB_5190 MB_5191 MB_5193 MB_5197 MB_5200 ## 1 0.02564103 0.01140684 0.04147465 0 0 0 0.04411765 NA ## MB_5205 MB_5208 MB_5209 MB_5211 MB_5212 MB_5214 MB_5215 ## 1 NA 0 0 0.02380952 0.007874016 0.005763689 0.02272727 ## MB_5218 MB_5221 MB_5222 MB_5223 MB_5224 MB_5225 MB_5226 MB_5227 ## 1 0.05128205 0 0.04177546 0.03533569 0.00990099 0 0 0 ## MB_5230 MB_5232 MB_5233 MB_5235 MB_5238 MB_5239 MB_5243 MB_5244 ## 1 0.007874016 0.003802281 0 0 0 0 0.04166667 0 ## MB_5251 MB_5256 MB_5259 MB_5261 MB_5264 MB_5266 MB_5270 MB_5271 ## 1 0 0.02453988 0 0 0.01388889 0.00877193 NA 0 ## MB_5272 MB_5273 MB_5275 MB_5277 MB_5278 MB_5279 MB_5280 MB_5281 ## 1 0 0 0.009049774 0.00625 0.007142857 0 0.015625 0 ## MB_5284 MB_5286 MB_5287 MB_5288 MB_5292 MB_5293 MB_5298 MB_5306 MB_5311 ## 1 0 0 0 0 0 0 0.01242236 0 0 ## MB_5312 MB_5313 MB_5315 MB_5322 MB_5327 MB_5329 MB_5331 ## 1 0.02230483 0 0.004048583 0 0.04571429 0.009950249 0 ## MB_5334 MB_5335 MB_5338 MB_5339 MB_5341 MB_5345 MB_5348 MB_5350 MB_5351 ## 1 0.02816901 0 0 0 0 0 0 0 0 ## MB_5358 MB_5360 MB_5361 MB_5364 MB_5366 MB_5381 MB_5396 ## 1 0.009433962 NA 0.015625 0.01827676 0.02906977 0.006578947 0.01142857 ## MB_5399 MB_5402 MB_5410 MB_5425 MB_5427 MB_5428 MB_5433 MB_5439 ## 1 0 0 0 0.006410256 0 0 0 0.01003344 ## MB_5440 MB_5442 MB_5491 MB_5493 MB_5495 MB_5498 MB_5513 MB_5519 ## 1 0 NA 0 0.01204819 0.03125 0 0.002777778 0.02298851 ## MB_5530 MB_5533 MB_5543 MB_5558 MB_5559 MB_5563 MB_5567 MB_5580 ## 1 0.02985075 0 0 0 0.03846154 0.009090909 0 0 ## MB_5582 MB_5584 MB_5588 MB_5592 MB_5593 MB_5596 MB_5603 ## 1 0.005586592 0 0 0.00913242 0.01481481 0.01666667 0.01315789 ## MB_5605 MB_5614 MB_5620 MB_5634 MB_5640 MB_5641 MB_5642 ## 1 0.04705882 0.01273885 0.01129944 0.00990099 0.01398601 0.007092199 0.01775148 ## MB_5646 MB_5651 MB_5656 MB_6007 MB_6008 MB_6010 MB_6011 MB_6012 ## 1 0.01639344 0 0.009615385 0 0 0 0.02054795 0 ## MB_6018 MB_6019 MB_6023 MB_6024 MB_6025 MB_6026 MB_6030 ## 1 0.03846154 0.008695652 0.01075269 0.01327434 0 0.01470588 0.01960784 ## MB_6036 MB_6039 MB_6042 MB_6044 MB_6046 MB_6047 MB_6048 ## 1 0.03658537 0.006024096 0.02142857 0 0.02898551 0.00952381 0.00952381 ## MB_6049 MB_6050 MB_6052 MB_6053 MB_6055 MB_6058 MB_6059 MB_6060 MB_6062 ## 1 NA 0 0 0 0 0 0 0.01818182 0.03007519 ## MB_6063 MB_6065 MB_6068 MB_6069 MB_6071 MB_6075 MB_6077 MB_6079 ## 1 0.01324503 0.008426966 0 NA 0.02702703 0 0 0.009433962 ## MB_6080 MB_6082 MB_6083 MB_6085 MB_6090 MB_6092 MB_6097 ## 1 0.005714286 0.01910828 0.006578947 0.01117318 0.01257862 0 0.01619433 ## MB_6098 MB_6100 MB_6101 MB_6103 MB_6105 MB_6107 MB_6108 MB_6113 ## 1 0 0 0.009803922 0.008032129 0 0 0.02840909 0 ## MB_6114 MB_6116 MB_6118 MB_6122 MB_6124 MB_6125 MB_6131 ## 1 0 0.01183432 0.01117318 0 0.005291005 0.01886792 0.016 ## MB_6133 MB_6135 MB_6138 MB_6141 MB_6143 MB_6144 MB_6145 ## 1 0.01027397 0 0 0.007462687 0.016 0.009950249 0.004975124 ## MB_6146 MB_6147 MB_6149 MB_6150 MB_6152 MB_6154 MB_6156 MB_6157 ## 1 0 0.00619195 0 0.01212121 0.04022989 0 0 0 ## MB_6160 MB_6163 MB_6164 MB_6167 MB_6168 MB_6169 ## 1 0.02531646 0.01435407 0.007407407 0.01197605 0.01923077 0.009090909 ## MB_6171 MB_6178 MB_6179 MB_6181 MB_6184 MB_6185 MB_6187 MB_6188 ## 1 0.01282051 0.01324503 0.005586592 0.007407407 0 0 0 0 ## MB_6192 MB_6194 MB_6195 MB_6201 MB_6204 MB_6207 MB_6208 MB_6211 ## 1 0.03389831 0 0 0 0.03076923 0.01941748 0 0 ## MB_6212 MB_6213 MB_6214 MB_6218 MB_6223 MB_6224 MB_6225 MB_6226 ## 1 0 0 0 0 0.03409091 0 0.02419355 0.01149425 ## MB_6228 MB_6229 MB_6230 MB_6231 MB_6232 MB_6233 MB_6234 MB_6237 MB_6238 ## 1 0 0 0 0 0.04166667 0 0 NA 0.03378378 ## MB_6239 MB_6242 MB_6245 MB_6246 MB_6248 MB_6251 MB_6253 MB_6254 ## 1 0 0 NA 0.004081633 0 0.01666667 0.0212766 0.01025641 ## MB_6256 MB_6257 MB_6259 MB_6261 MB_6263 MB_6269 MB_6271 MB_6272 MB_6274 ## 1 0 0 0 0 0.015 0 0 0 0 ## MB_6275 MB_6281 MB_6283 MB_6284 MB_6286 MB_6287 MB_6288 MB_6289 ## 1 0 0.01941748 0.02515723 0.009259259 NA 0 0 NA ## MB_6291 MB_6293 MB_6294 MB_6297 MB_6300 MB_6302 MB_6305 MB_6306 ## 1 0.02083333 0.06989247 0.02678571 0.03067485 0 0 0 0 ## MB_6308 MB_6312 MB_6314 MB_6317 MB_6318 MB_6319 MB_6322 MB_6328 ## 1 0 0.05769231 0 0 NA 0 0.005649718 0.01574803 ## MB_6329 MB_6330 MB_6334 MB_6336 MB_6337 MB_6346 MB_6358 MB_6359 ## 1 0 0.01481481 0 0 0 0.04166667 0.025 0.0212766 ## MB_6360 MB_6363 MB_7000 MB_7002 MB_7003 MB_7004 MB_7005 ## 1 0.004484305 0.02083333 0.01818182 0 0 0.00877193 0.02112676 ## MB_7006 MB_7007 MB_7008 MB_7009 MB_7010 MB_7012 MB_7014 ## 1 0 0.01176471 0.03030303 0.00990099 0.00617284 0.01503759 0.01886792 ## MB_7015 MB_7016 MB_7017 MB_7018 MB_7019 MB_7020 MB_7022 MB_7023 ## 1 0.009708738 0 0 0 0.004716981 0 NA 0 ## MB_7026 MB_7028 MB_7029 MB_7030 MB_7031 MB_7032 MB_7034 MB_7035 ## 1 0.01703578 0.02777778 0 0 0 0.03418803 0 0 ## MB_7036 MB_7037 MB_7038 MB_7039 MB_7040 MB_7041 MB_7043 MB_7046 ## 1 0 0 0 0.0106383 0.02857143 0 0 0 ## MB_7048 MB_7049 MB_7050 MB_7051 MB_7052 MB_7053 MB_7054 ## 1 0.006872852 0.0106383 0.005291005 0.02298851 0.03448276 0.006410256 0 ## MB_7055 MB_7056 MB_7057 MB_7058 MB_7060 MB_7061 MB_7062 ## 1 0.006134969 0.009803922 0.01507538 0.03636364 0 0 0.02189781 ## MB_7065 MB_7066 MB_7067 MB_7068 MB_7070 MB_7071 MB_7072 ## 1 0.01030928 0.04320988 0 0.01351351 0 0.008849558 0 ## MB_7073 MB_7074 MB_7075 MB_7076 MB_7077 MB_7078 MB_7079 ## 1 0.01666667 0.008928571 0.01481481 0.00621118 0.006802721 0 0 ## MB_7080 MB_7083 MB_7084 MB_7085 MB_7086 MB_7087 MB_7088 MB_7089 ## 1 0.01149425 0 0 0.006134969 0 0 0.01190476 0.04020101 ## MB_7090 MB_7091 MB_7092 MB_7093 MB_7095 MB_7096 MB_7097 MB_7099 ## 1 0 0.02688172 0.01298701 0.007874016 0.02564103 0 0 0 ## MB_7100 MB_7102 MB_7104 MB_7107 MB_7109 MB_7113 MB_7115 MB_7116 ## 1 0 0 0.006134969 0 0 0.01030928 0 NA ## MB_7118 MB_7119 MB_7120 MB_7122 MB_7129 MB_7131 MB_7132 MB_7137 MB_7138 ## 1 0 0 0 0 0 NA 0.00729927 0.02 0.03738318 ## MB_7141 MB_7142 MB_7144 MB_7145 MB_7151 MB_7153 MB_7154 MB_7157 ## 1 0 0.02803738 0.02985075 0.02155172 0 0 0.01030928 0 ## MB_7158 MB_7159 MB_7160 MB_7161 MB_7162 MB_7164 MB_7167 MB_7170 ## 1 0.02739726 0 0.01282051 0.01136364 0 0 0 0 ## MB_7171 MB_7172 MB_7173 MB_7174 MB_7182 MB_7186 MB_7187 MB_7189 ## 1 0.01408451 NA NA 0.03208556 0 0.02898551 0 0 ## MB_7192 MB_7197 MB_7198 MB_7199 MB_7200 MB_7205 MB_7208 MB_7214 ## 1 0.03296703 0 0 0.008064516 0 0 0 0 ## MB_7217 MB_7218 MB_7221 MB_7223 MB_7225 MB_7227 MB_7228 MB_7229 ## 1 0.006410256 0.00952381 0 0 0 0.05 0 0 ## MB_7232 MB_7233 MB_7236 MB_7237 MB_7241 MB_7243 MB_7244 MB_7245 MB_7249 ## 1 0.01351351 0 0 0.01785714 0 0 0 0 0 ## MB_7250 MB_7251 MB_7252 MB_7253 MB_7254 MB_7256 MB_7261 MB_7262 MB_7263 ## 1 0 0 0.01793722 0 0.01149425 0 0 0 0 ## MB_7265 MB_7268 MB_7271 MB_7273 MB_7275 MB_7278 MB_7279 MB_7281 MB_7283 ## 1 NA 0 0 0 0 0 0 0 0.01829268 ## MB_7285 MB_7288 MB_7289 MB_7291 MB_7292 MB_7293 MB_7296 MB_7298 ## 1 NA 0 0 0 0 0.006849315 NA 0 ## [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 5 rows ] dim(all_meth) ## [1] 201082 1785 3.4 Deconvolve TME Due to the very different characteristics of ER+/ER- and normal samples, we analyze them separatly. k is chosen based on the number of samples in the dataset. See below a power analysis on the effect of K on normalization. We exclude loci with mean methylation value lower than 0.1 or higher than 0.9 (min_meth, max_meth) and use only rows (expression profiles) and columns (methylation profiles) that have at least one correlation value greater than 0.25 or smaller than -0.25 (meth_cor_thresh, expr_cor_thresh). We use &quot;CD3D&quot; gene as an anchor for immune genes, and &quot;CAV1&quot; as an anchor for CAF genes. The following utility function subsets samples from the methylation matrices and then runs methylayer::deconv_TME: deconv_TME_metabric &lt;- function(prom_avg_meth, all_meth, expr_mat, samples, ...){ prom_mat &lt;- prom_avg_meth %&gt;% select(chrom:end, any_of(samples)) %&gt;% intervs_to_mat() raw_meth_mat &lt;- all_meth %&gt;% select(chrom:end, any_of(samples)) %&gt;% intervs_to_mat() res &lt;- methylayer::deconv_TME(prom_mat, expr_mat, raw_meth_mat, ...) return(res) } 3.4.1 ER+ samples ER_positive_norm_meth &lt;- deconv_TME_metabric(prom_avg_meth, all_meth, expr_mat, ER_positive_samples, k = 30) %cache_rds% here(&quot;data/ER_positive_norm_meth.rds&quot;) 3.4.2 ER- samples ER_negative_norm_meth &lt;- deconv_TME_metabric(prom_avg_meth, all_meth, expr_mat, ER_negative_samples, k = 15) %cache_rds% here(&quot;data/ER_negative_norm_meth.rds&quot;) 3.4.3 Normal samples normal_norm_meth &lt;- deconv_TME_metabric(prom_avg_meth, all_meth, expr_mat, normal_samples, k = 15) %cache_rds% here(&quot;data/normal_norm_meth.rds&quot;) 3.4.4 Merge normalized methylation For convenience, we can now merge the TME-normalized methylation from ER+/ER-/normal samples to a single file: all_norm_meth &lt;- cbind(ER_positive_norm_meth$norm_meth, ER_negative_norm_meth$norm_meth, normal_norm_meth$norm_meth) %&gt;% mat_to_intervs() %cache_df% here(&quot;data/all_norm_meth.tsv&quot;) %&gt;% as_tibble() dim(all_norm_meth) ## [1] 201082 1513 3.4.5 Merge TME scores We also merge the CAF and Immmune score for each sample. Note that methylayer extracts both the expression module score (caf and immune columns) and methylation score (caf.meth, immune.meth). The expression scores were used for the deconvolution wheareas the methylation scores are the average methylation of the loci that were correlated to the expression score (above 0.3, scores_cor_thresh parameter). tme_df &lt;- bind_rows( ER_positive_norm_meth$tme_features, ER_negative_norm_meth$tme_features, normal_norm_meth$tme_features ) %&gt;% select(samp, caf, immune, caf.meth, immune.meth) %cache_df% here(&quot;data/TME_features.tsv&quot;) %&gt;% as_tibble() tme_df ## # A tibble: 1,510 x 5 ## samp caf immune caf.meth immune.meth ## 1 MB_0006 -0.2441946 -0.1114837 0.2950609 0.4722494 ## 2 MB_0028 -1.7266095 -0.9358944 0.4851022 0.6191494 ## 3 MB_0046 -0.6545081 -1.0023582 0.4210078 0.6308352 ## 4 MB_0050 1.7038169 0.1281640 0.2336145 0.4808316 ## 5 MB_0053 -0.8152407 0.2103729 0.4603347 0.5915159 ## 6 MB_0054 -0.5608747 0.9292829 0.4790603 0.6093489 ## # ... with 1,504 more rows 3.4.6 CAF and Immune genes We can see the genes that were used in the deconvolution by running get_TME_genes function: get_TME_genes(ER_positive_norm_meth$em_cross_clust, caf_gene = NULL) ## [1] &quot;ACAP1&quot; &quot;ADA&quot; &quot;ADAM7&quot; &quot;AIM2&quot; &quot;AOAH&quot; &quot;APBB1IP&quot; ## [7] &quot;APOBEC3G&quot; &quot;ARHGAP30&quot; &quot;ARHGAP4&quot; &quot;ARHGAP9&quot; &quot;ARRDC5&quot; &quot;BANK1&quot; ## [13] &quot;BIRC3&quot; &quot;BLK&quot; &quot;BTLA&quot; &quot;BTN3A1&quot; &quot;BTN3A2&quot; &quot;BTN3A3&quot; ## [19] &quot;C1orf162&quot; &quot;CAMK1G&quot; &quot;CCL13&quot; &quot;CCL5&quot; &quot;CCR2&quot; &quot;CCR7&quot; ## [25] &quot;CD19&quot; &quot;CD2&quot; &quot;CD247&quot; &quot;CD27&quot; &quot;CD28&quot; &quot;CD37&quot; ## [31] &quot;CD38&quot; &quot;CD3D&quot; &quot;CD3E&quot; &quot;CD3G&quot; &quot;CD40&quot; &quot;CD40LG&quot; ## [37] &quot;CD48&quot; &quot;CD5&quot; &quot;CD52&quot; &quot;CD53&quot; &quot;CD6&quot; &quot;CD69&quot; ## [43] &quot;CD7&quot; &quot;CD79A&quot; &quot;CD8A&quot; &quot;CD96&quot; &quot;CORO1A&quot; &quot;CST7&quot; ## [49] &quot;CTSH&quot; &quot;CTSS&quot; &quot;CTSW&quot; &quot;CXCL13&quot; &quot;CXCR3&quot; &quot;CXCR5&quot; ## [55] &quot;CXCR6&quot; &quot;CYBB&quot; &quot;CYTIP&quot; &quot;DHRS9&quot; &quot;DOCK11&quot; &quot;DOCK2&quot; ## [61] &quot;DOCK8&quot; &quot;DOK2&quot; &quot;DPEP2&quot; &quot;EBI3&quot; &quot;EOMES&quot; &quot;EVI2B&quot; ## [67] &quot;FAM65B&quot; &quot;FCAR&quot; &quot;FCN1&quot; &quot;FCRLA&quot; &quot;FERMT3&quot; &quot;FGD2&quot; ## [73] &quot;FGL2&quot; &quot;FGR&quot; &quot;FLT3LG&quot; &quot;FOXN2&quot; &quot;GAB3&quot; &quot;GBP2&quot; ## [79] &quot;GFI1&quot; &quot;GPR18&quot; &quot;GPR183&quot; &quot;GZMA&quot; &quot;GZMB&quot; &quot;GZMH&quot; ## [85] &quot;GZMK&quot; &quot;HAPLN3&quot; &quot;HLA-DMA&quot; &quot;HLA-DOA&quot; &quot;HLA-DQA1&quot; &quot;HLA-E&quot; ## [91] &quot;HSD11B1&quot; &quot;HVCN1&quot; &quot;IGLL1&quot; &quot;IGLL3P&quot; &quot;IL10RA&quot; &quot;IL15&quot; ## [97] &quot;IL16&quot; &quot;IL18BP&quot; &quot;IL18RAP&quot; &quot;IL2RB&quot; &quot;IL2RG&quot; &quot;IL32&quot; ## [103] &quot;IRF8&quot; &quot;ITGB2&quot; &quot;ITK&quot; &quot;JSRP1&quot; &quot;KLHL6&quot; &quot;KLRD1&quot; ## [109] &quot;KLRG1&quot; &quot;LAMP3&quot; &quot;LAX1&quot; &quot;LCK&quot; &quot;LCP1&quot; &quot;LGALS2&quot; ## [115] &quot;LPXN&quot; &quot;LY9&quot; &quot;LY96&quot; &quot;LYN&quot; &quot;MAP4K1&quot; &quot;MAPK1&quot; ## [121] &quot;MATK&quot; &quot;MEI1&quot; &quot;MGAT1&quot; &quot;MS4A6A&quot; &quot;NAPSA&quot; &quot;NAPSB&quot; ## [127] &quot;NCF4&quot; &quot;NFS1&quot; &quot;NKG7&quot; &quot;NPSR1&quot; &quot;P2RY10&quot; &quot;P2RY8&quot; ## [133] &quot;PARVG&quot; &quot;PLAC8&quot; &quot;PLCB2&quot; &quot;PLEK&quot; &quot;PLEKHA2&quot; &quot;PLEKHO1&quot; ## [139] &quot;PNOC&quot; &quot;POU2AF1&quot; &quot;PRF1&quot; &quot;PSMB10&quot; &quot;PSTPIP1&quot; &quot;PTGDS&quot; ## [145] &quot;PTPN22&quot; &quot;PTPN7&quot; &quot;PTPRCAP&quot; &quot;PVRIG&quot; &quot;PYHIN1&quot; &quot;RAB33A&quot; ## [151] &quot;RAC2&quot; &quot;RASAL3&quot; &quot;RASGRP2&quot; &quot;RASGRP3&quot; &quot;RCSD1&quot; &quot;RGL4&quot; ## [157] &quot;RHOG&quot; &quot;S1PR4&quot; &quot;SAMD3&quot; &quot;SASH3&quot; &quot;SEL1L3&quot; &quot;SELL&quot; ## [163] &quot;SH2D1A&quot; &quot;SH3BGRL3&quot; &quot;SIRPG&quot; &quot;SLA2&quot; &quot;SLAMF1&quot; &quot;SLAMF6&quot; ## [169] &quot;SPIB&quot; &quot;SPOCK2&quot; &quot;SRGN&quot; &quot;STK17B&quot; &quot;SYK&quot; &quot;TBC1D10C&quot; ## [175] &quot;TCN2&quot; &quot;THEMIS&quot; &quot;TLR8&quot; &quot;TLR9&quot; &quot;TMEM140&quot; &quot;TNFAIP3&quot; ## [181] &quot;TNFAIP8&quot; &quot;TNFRSF13B&quot; &quot;TNFRSF17&quot; &quot;TNFRSF1B&quot; &quot;TNFSF14&quot; &quot;TOX2&quot; ## [187] &quot;TRAT1&quot; &quot;UBASH3A&quot; &quot;VAMP5&quot; &quot;VCAM1&quot; &quot;VPREB3&quot; &quot;WAS&quot; ## [193] &quot;WIPF1&quot; &quot;ZAP70&quot; &quot;ZNF831&quot; message(&quot;ER+&quot;) ## ER+ get_TME_genes(ER_positive_norm_meth$em_cross_clust, caf_gene = NULL) %&gt;% length() ## [1] 195 get_TME_genes(ER_positive_norm_meth$em_cross_clust, immune_gene = NULL) %&gt;% length() ## [1] 207 message(&quot;ER-&quot;) ## ER- get_TME_genes(ER_negative_norm_meth$em_cross_clust, caf_gene = NULL) %&gt;% length() ## [1] 345 get_TME_genes(ER_negative_norm_meth$em_cross_clust, immune_gene = NULL) %&gt;% length() ## [1] 360 message(&quot;normal&quot;) ## normal get_TME_genes(normal_norm_meth$em_cross_clust, caf_gene = NULL) %&gt;% length() ## [1] 864 get_TME_genes(normal_norm_meth$em_cross_clust, immune_gene = NULL) %&gt;% length() ## [1] 592 3.5 Expression-methylation correlation matrices methylayer allows us to plot the expression-methylation correlation matrices it uses in the deconvolution process: 3.5.0.1 Extended Data Figure 2a-b options(repr.plot.width = 7, repr.plot.height=10) methylayer::plot_em_cross_cor(ER_positive_norm_meth$em_cross_clust) ## plotting em cross dim(ER_positive_norm_meth$em_cross_clust$em_cross) ## [1] 2701 5879 options(repr.plot.width = 7, repr.plot.height=10) plot_em_cross_cor(ER_negative_norm_meth$em_cross_clust) ## plotting em cross dim(ER_negative_norm_meth$em_cross_clust$em_cross) ## [1] 3525 11054 options(repr.plot.width = 7, repr.plot.height=10) plot_em_cross_cor(normal_norm_meth$em_cross_clust) ## plotting em cross dim(normal_norm_meth$em_cross_clust$em_cross) ## [1] 2636 16806 3.5.1 Export clustering We can export summary statistics (centers) of the expression-methylation clusters to excel files: methylayer::export_em_cross_mods(ER_negative_norm_meth$em_cross_clust, here(&quot;export&quot;, &quot;em_cross_ER_negative.xlsx&quot;)) methylayer::export_em_cross_mods(ER_positive_norm_meth$em_cross_clust, here(&quot;export&quot;, &quot;em_cross_ER_positive.xlsx&quot;)) methylayer::export_em_cross_mods(normal_norm_meth$em_cross_clust, here(&quot;export&quot;, &quot;em_cross_normal.xlsx&quot;)) 3.6 Diagnose TME normalization We will extract the correlation of the raw and normalized methylation to gene expression of selected genes in order to see that our normalization worked. before_after_df &lt;- methylayer::calc_gene_cor_before_after_deconv( ER_positive_norm_meth, all_meth, c(&quot;CAV1&quot;, &quot;CD3D&quot;, &quot;GATA3&quot;, &quot;TOP2A&quot;)) %cache_df% here(&quot;data/gene_cor_before_after_ER_positive.tsv&quot;) %&gt;% as_tibble() before_after_df &lt;- before_after_df %&gt;% select(-ends_with(&quot;.norm&quot;)) %&gt;% gather(&quot;gene&quot;, &quot;cor_raw&quot;, -(chrom:end)) %&gt;% left_join(before_after_df %&gt;% select(chrom:end, ends_with(&quot;.norm&quot;)) %&gt;% gather(&quot;gene&quot;, &quot;cor_norm&quot;, -(chrom:end)) %&gt;% mutate(gene = gsub(&quot;.norm$&quot;, &quot;&quot;, gene)), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;gene&quot;)) 3.6.0.1 Figure 1h options(repr.plot.width = 8, repr.plot.height = 8) lims &lt;- c(-0.7, 0.7) p_before_after &lt;- before_after_df %&gt;% mutate(ER = &quot;ER+&quot;) %&gt;% mutate( cor_raw = tgutil::clip_vals(cor_raw, lims[1], lims[2]), cor_norm = tgutil::clip_vals(cor_norm, lims[1], lims[2]) ) %&gt;% ggplot(aes(x=cor_raw, y=cor_norm, color=ER)) + geom_point(size=0.001) + scale_color_manual(values=annot_colors$ER1) + geom_abline(linetype = &quot;dashed&quot;) + xlab(&quot;Raw methylation vs. expression correlation&quot;) + ylab(&quot;Normalized methylation\\nvs. expression correlation&quot;) + facet_wrap(.~gene, nrow=2) + guides(color=&quot;none&quot;) + xlim(lims[1], lims[2]) + ylim(lims[1], lims[2]) + theme(aspect.ratio=1) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) p_before_after + theme_bw() + theme(aspect.ratio=1) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) We plot the CAF and immune expression signatures against the promoter that is most anti-correlated with CD3D gene expression: get_top_cor_promoter &lt;- function(gene, em_cross){ em_cross[, gene] %&gt;% as.matrix() %&gt;% mat_to_intervs() %&gt;% rename(cor = V1) %&gt;% inner_join(promoter_intervs, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) %&gt;% arrange(cor) %&gt;% slice(1) %&gt;% as_tibble() } get_locus_before_after_meth &lt;- function(deconv_list, raw_meth, intervals){ raw_meth &lt;- all_meth %&gt;% inner_join(intervals, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) %&gt;% gather(&quot;samp&quot;, &quot;raw_meth&quot;, -(chrom:end)) %&gt;% as_tibble() norm_meth &lt;- deconv_list$norm_meth[intervals %&gt;% intervs_to_mat() %&gt;% rownames(), ] %&gt;% enframe(&quot;samp&quot;, &quot;norm_meth&quot;) %&gt;% as_tibble() return(raw_meth %&gt;% left_join(norm_meth, by = &quot;samp&quot;)) } plot_before_after_gene_cor_meth &lt;- function(gene, tme_df, deconv_list, raw_meth){ anti_cor_gene &lt;- get_top_cor_promoter(gene, deconv_list$em_cross$em_cross) before_after_meth &lt;- get_locus_before_after_meth(deconv_list, raw_meth, anti_cor_gene %&gt;% select(chrom, start, end)) %&gt;% add_ER() p_gene_norm_before_after &lt;- tme_df %&gt;% left_join(before_after_meth, by = &quot;samp&quot;) %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% select(samp, CAF=caf, Immune=immune, `Methylation`=raw_meth, `Normalized\\nMethylation`=norm_meth) %&gt;% gather(&quot;type&quot;, &quot;meth&quot;, -samp, -Immune, -CAF) %&gt;% mutate(type = factor(type, levels=c(&quot;Methylation&quot;, &quot;Normalized\\nMethylation&quot;))) %&gt;% gather(&quot;expr_type&quot;, &quot;expr&quot;, -samp, -type, -meth) %&gt;% ggplot(aes(x=meth, y=expr)) + geom_point(size=0.1) + facet_grid(expr_type~type, scales=&quot;free_x&quot;) + theme(aspect.ratio=1) + xlab(&quot;&quot;) + ylab(&quot;Expression&quot;) + scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) + ggtitle(glue(&quot;{anti_cor_gene$name[1]} ({gene})&quot;)) + vertical_labs() p_gene_norm_before_after } 3.6.0.2 Extended Data Figure 3a-d p_cd3d_top_meth &lt;- plot_before_after_gene_cor_meth(&quot;CD3D&quot;, tme_df, ER_positive_norm_meth, all_meth) p_cav1_top_meth &lt;- plot_before_after_gene_cor_meth(&quot;CAV1&quot;, tme_df, ER_positive_norm_meth, all_meth) p_top2a_top_meth &lt;- plot_before_after_gene_cor_meth(&quot;TOP2A&quot;, tme_df, ER_positive_norm_meth, all_meth) p_gata3_top_meth &lt;- plot_before_after_gene_cor_meth(&quot;GATA3&quot;, tme_df, ER_positive_norm_meth, all_meth) p_cd3d_top_meth + theme_bw() ## Warning: Removed 12 rows containing missing values (geom_point). p_cav1_top_meth + theme_bw() ## Warning: Removed 4 rows containing missing values (geom_point). p_top2a_top_meth + theme_bw() ## Warning: Removed 84 rows containing missing values (geom_point). p_gata3_top_meth + theme_bw() 3.7 Plot CD3D and CAV1 vs immune and CAF methylation modules 3.7.0.1 Figure 1f options(repr.plot.width = 8, repr.plot.height = 4) df &lt;- tme_df %&gt;% add_ER() %&gt;% left_join(expr_mat[&quot;CD3D&quot;, ] %&gt;% enframe(&quot;samp&quot;, &quot;expr&quot;)) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% as_tibble() ## Joining, by = &quot;samp&quot; rho_df &lt;- df %&gt;% group_by(ER) %&gt;% summarise(rho = cor(immune.meth, expr, use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;)) %&gt;% mutate(label = sprintf(&quot;~rho == %0.2f&quot;, rho)) p_CD3D &lt;- df %&gt;% ggplot(aes(x=immune.meth, y=expr, color=ER)) + geom_point(size=0.1) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + guides(color=FALSE) + facet_wrap(.~ER) + xlab(&quot;Immune methylation module&quot;) + ylab(&quot;CD3D expression&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_CD3D + geom_text(data = rho_df, inherit.aes = FALSE, x = 0.65, y = 11, aes(label=label), parse=TRUE, size=5) options(repr.plot.width = 8, repr.plot.height = 4) df &lt;- tme_df %&gt;% add_ER() %&gt;% left_join(expr_mat[&quot;CAV1&quot;, ] %&gt;% enframe(&quot;samp&quot;, &quot;expr&quot;)) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% as_tibble() ## Joining, by = &quot;samp&quot; rho_df &lt;- df %&gt;% group_by(ER) %&gt;% summarise(rho = cor(caf.meth, expr, use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;)) %&gt;% mutate(label = sprintf(&quot;~rho == %0.2f&quot;, rho)) p_CAV1 &lt;- df %&gt;% ggplot(aes(x=caf.meth, y=expr, color=ER)) + geom_point(size=0.1) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + guides(color=FALSE) + facet_wrap(.~ER) + xlab(&quot;CAFs methylation module&quot;) + ylab(&quot;CAV1 expression&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_CAV1 + geom_text(data = rho_df, inherit.aes = FALSE, x = 0.65, y = 11, aes(label=label), parse=TRUE, size=5) 3.7.0.2 Extended Data Figure 2c options(repr.plot.width = 8, repr.plot.height = 4) df &lt;- expr_mat[c(&quot;CAV1&quot;, &quot;CD3D&quot;), ] %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% as_tibble() %&gt;% add_ER() %&gt;% filter(ER != &quot;normal&quot;) rho_df &lt;- df %&gt;% group_by(ER) %&gt;% summarise(rho = cor(CAV1, CD3D, use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;)) %&gt;% mutate(label = sprintf(&quot;~rho == %0.2f&quot;, rho)) p_CAV1_CD3D &lt;- df %&gt;% ggplot(aes(x=CAV1, y=CD3D, color=ER)) + geom_point(size=0.1) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + guides(color=&quot;none&quot;) + facet_wrap(.~ER) + xlab(&quot;CAV1 expression&quot;) + ylab(&quot;CD3D expression&quot;) p_CAV1_CD3D + geom_text(data = rho_df, inherit.aes = FALSE, x = 11.5, y = 11.5, aes(label=label), parse=TRUE, size=5) options(repr.plot.width = 8, repr.plot.height = 4) df &lt;- tme_df %&gt;% add_ER() %&gt;% filter(ER != &quot;normal&quot;) %&gt;% as_tibble() rho_df &lt;- df %&gt;% group_by(ER) %&gt;% summarise(rho = cor(caf.meth, immune.meth, use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;)) %&gt;% mutate(label = sprintf(&quot;~rho == %0.2f&quot;, rho)) p_immune_caf &lt;- df %&gt;% ggplot(aes(x=caf.meth, y=immune.meth, color=ER)) + geom_point(size=0.1) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + guides(color=&quot;none&quot;) + facet_wrap(.~ER) + xlab(&quot;CAFs methylation module&quot;) + ylab(&quot;Immune methylation module&quot;) p_immune_caf + geom_text(data = rho_df, inherit.aes = FALSE, x = 0.7, y = 0.4, aes(label=label), parse=TRUE, size=5) 3.8 Annotate TME scores We reverse immune and CAF methylation scores so as higher score =&gt; more progressed. feats &lt;- tme_df %&gt;% mutate(immune.meth = -immune.meth, caf.meth = -caf.meth) We will calculate the distribution of tumor grade stratified by five bins of Immune/CAF methylation scores: nbins &lt;- 5 df &lt;- feats %&gt;% mutate( immune = cut(immune, quantile(immune, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), caf = cut(caf, quantile(caf, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), immune.meth = cut(immune.meth, quantile(immune.meth, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), caf.meth = cut(caf.meth, quantile(caf.meth, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins)) %&gt;% left_join(samp_data %&gt;% select(samp, ER=ER1, stage, grade), by = &quot;samp&quot;) %&gt;% mutate(stage = ifelse(stage %in% c(0, &quot;DCIS&quot;, 1), &quot;0-1&quot;, stage)) %&gt;% mutate(stage = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, stage)) %&gt;% mutate(grade = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, grade)) Calculate p-values: df %&gt;% filter(ER %in% c(&quot;ER+&quot;, &quot;ER-&quot;)) %&gt;% gather(&quot;feat&quot;, &quot;bin&quot;, -samp, -ER, -stage, -grade) %&gt;% group_by(ER, feat) %&gt;% summarise(grade_pval = chisq.test(bin, grade)$p.value, stage_pval = chisq.test(bin, stage)$p.value) %&gt;% mutate(signif = case_when(grade_pval &lt;= 0.0001 ~ &quot;****&quot;, grade_pval &lt;= 0.001 ~ &quot;***&quot;, grade_pval &lt;= 0.01 ~ &quot;**&quot;, grade_pval &lt;= 0.05 ~ &quot;*&quot;)) %&gt;% as.data.frame() ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## ER feat grade_pval stage_pval signif ## 1 ER- caf 0.00022642925 0.001946125 *** ## 2 ER- caf.meth 0.00308191469 0.209690818 ** ## 3 ER- immune 0.37129150376 0.580276177 &lt;NA&gt; ## 4 ER- immune.meth 0.30517904201 0.102242249 &lt;NA&gt; ## 5 ER+ caf 0.00006512545 0.060334718 **** ## 6 ER+ caf.meth 0.00001267372 0.070515621 **** ## 7 ER+ immune 0.00063631960 0.457202009 *** ## 8 ER+ immune.meth 0.00557962596 0.293001516 ** 3.8.0.1 Figure 1g options(repr.plot.width = 6, repr.plot.height = 4) p_grade_immune_positive &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, immune.meth) %&gt;% group_by(immune.meth) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=immune.meth, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + xlab(&quot;Immune&quot;) + ylab(&quot;% of samples&quot;) + ggtitle(&quot;ER+&quot;) p_grade_immune_positive + theme_bw() p_grade_caf_positive &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, caf.meth) %&gt;% group_by(caf.meth) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=caf.meth, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) + xlab(&quot;CAF&quot;) + ggtitle(&quot;ER+&quot;) p_grade_caf_positive + theme_bw() p_grade_immune_negative &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, immune.meth) %&gt;% group_by(immune.meth) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=immune.meth, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) + xlab(&quot;Immune&quot;) + ggtitle(&quot;ER-&quot;) p_grade_immune_negative + theme_bw() p_grade_caf_negative &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, caf.meth) %&gt;% group_by(caf.meth) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=caf.meth, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) + xlab(&quot;CAF&quot;) + ggtitle(&quot;ER-&quot;) p_grade_caf_negative + theme_bw() 3.9 Appendix: Sensitivity analysis of TME normalization 3.9.0.1 Extended Data Figure 3e get_TME_deconv_sensitivity &lt;- function(prom_avg_meth, expr_mat, all_meth){ { calc_tme_gene_cor &lt;- function(samples, k, genes = c(&quot;CAV1&quot;, &quot;CD3D&quot;, &quot;TOP2A&quot;, &quot;GATA3&quot;)){ print(k) deconv_list &lt;- deconv_TME_metabric(prom_avg_meth, all_meth, expr_mat, samples, k = k) calc_gene_cor_before_after_deconv(deconv_list, all_meth, genes) %&gt;% mutate(k = k) } ER_pos_df &lt;- map_dfr(seq(5,60,5), ~ calc_tme_gene_cor(ER_positive_samples, .x) %&gt;% mutate(ER = &quot;ER+&quot;)) ER_neg_df &lt;- map_dfr(seq(5,60,5), ~ calc_tme_gene_cor(ER_negative_samples, .x) %&gt;% mutate(ER = &quot;ER-&quot;)) normal_df &lt;- map_dfr(seq(5,60,5), ~ calc_tme_gene_cor(normal_samples, .x) %&gt;% mutate(ER = &quot;normal+&quot;)) sens_df &lt;- bind_rows(ER_pos_df, ER_neg_df, normal_df) sens_df } %cache_df% here(&quot;data/TME_sensetivity.tsv&quot;) %&gt;% as_tibble() } sens_df &lt;- get_TME_deconv_sensitivity(prom_avg_meth, expr_mat, all_meth) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;))) options(repr.plot.width = 8, repr.plot.height = 5) CD3D_plot &lt;- sens_df %&gt;% mutate(cor = CD3D.norm) %&gt;% ggplot(aes(x=factor(k), y=cor)) + geom_violin(fill=&quot;gray&quot;) + ggtitle(&quot;CD3D&quot;) + xlab(&quot;K&quot;) + ylab(&quot;Normalized methylation\\ncorrelation&quot;) + facet_grid(.~ER) + ylim(-0.6, 0.6) + theme(aspect.ratio=0.8) + vertical_labs() CAV_plot &lt;- sens_df %&gt;% mutate(cor = CAV1.norm) %&gt;% ggplot(aes(x=factor(k), y=cor)) + geom_violin(fill=&quot;gray&quot;) + ggtitle(&quot;CAV1&quot;) + xlab(&quot;K&quot;) + ylab(&quot;Normalized methylation\\ncorrelation&quot;) + facet_grid(.~ER) + ylim(-0.6, 0.6) + theme(aspect.ratio=0.8) + vertical_labs() p_sens &lt;- cowplot::plot_grid(CD3D_plot, CAV_plot, nrow=2, align = &quot;hv&quot;) p_sens We can see that larger values of K lead to less effective normalization (wider correlation distribution) of the CAF and immune signatures since the neighborhood becomes less homogenous in the Immune/CAF space. gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4549619 243.0 8043172 429.6 8043172 429.6 ## Vcells 1994787427 15219.1 3106352163 23699.6 2588522739 19748.9 "],["definition-of-clock-mg-and-ml-scores.html", "4 Definition of Clock, MG and ML scores 4.1 Introduction 4.2 Initialize 4.3 Load data 4.4 Clustering of normalized methylation of ER+ tumors 4.5 Project clustering on ER- correlation matrix 4.6 Classify loci in the genome to epigenomic features 4.7 Average methylation of the features 4.8 Plot distribution over samples of the correlated loci 4.9 Plot loci classification 4.10 Project all epigenomic features using UMAP 4.11 Compare epigenomic scores to clinical annotations 4.12 Distribution of the scores in iC10 integrative clusters 4.13 Epipolymorphism of the epigenomic layers 4.14 Comparison of the epigenomic scores with existing epigenomic age metrics", " 4 Definition of Clock, MG and ML scores 4.1 Introduction After cleaning the methylation data from TME effects we went on to look for global trends in the methylation data, i.e. trends that affect all or almost all of the methylome, in particular due to replication age and copy number aberration effects. 4.2 Initialize source(here::here(&quot;scripts/init.R&quot;)) 4.3 Load data We load both TME-normalized and raw methylation values. all_norm_meth &lt;- fread(here(&quot;data/all_norm_meth.tsv&quot;)) %&gt;% as_tibble() all_mat_raw &lt;- get_all_meth() %&gt;% intervs_to_mat() head(all_mat_raw) ## MB_0006 MB_0028 MB_0030 MB_0035 MB_0040 ## chr1_762469_763020 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 ## MB_0046 MB_0050 MB_0053 MB_0054 MB_0062 ## chr1_762469_763020 0.00000000 0.00000000 NA 0.00000000 0.000000000 ## MB_0064 MB_0068 MB_0112 MB_0113 MB_0114 ## chr1_762469_763020 0.021276596 0.000000000 0.01058201 0.000000000 NA ## MB_0118 MB_0119 MB_0120 MB_0121 MB_0123 ## chr1_762469_763020 0.007067138 0.007751938 0.00000000 0.00000000 0.000000000 ## MB_0124 MB_0125 MB_0126 MB_0127 MB_0128 ## chr1_762469_763020 0.01731602 0.000000000 0.02469136 0.000000000 0.00000000 ## MB_0129 MB_0130 MB_0131 MB_0133 MB_0134 ## chr1_762469_763020 0.00000000 0.011764706 0.012500000 0.000000000 0.027522936 ## MB_0135 MB_0136 MB_0137 MB_0138 MB_0140 ## chr1_762469_763020 0.00000000 0.00000000 0.008403361 0.000000000 0.00000000 ## MB_0142 MB_0143 MB_0144 MB_0145 MB_0146 ## chr1_762469_763020 0.000000000 0.004901961 0.00000000 0.00990099 0.00000000 ## MB_0147 MB_0148 MB_0149 MB_0150 MB_0151 ## chr1_762469_763020 0.026086957 0.00000000 0.000000000 0.000000000 0.00000000 ## MB_0152 MB_0154 MB_0155 MB_0157 MB_0162 ## chr1_762469_763020 0.000000000 NA 0.004032258 0.000000000 0.00000000 ## MB_0163 MB_0164 MB_0165 MB_0166 MB_0167 ## chr1_762469_763020 NA 0.023809524 0.00000000 0.021126761 0.00000000 ## MB_0168 MB_0169 MB_0170 MB_0171 MB_0172 ## chr1_762469_763020 0.005494505 0.03000000 0.00000000 0.046511628 0.00000000 ## MB_0173 MB_0174 MB_0175 MB_0176 MB_0177 ## chr1_762469_763020 0.009569378 0.019607843 0.000000000 0.00000000 0.013513514 ## MB_0178 MB_0179 MB_0180 MB_0181 MB_0184 ## chr1_762469_763020 0.029411765 0.012195122 NA 0.000000000 0.00000000 ## MB_0188 MB_0189 MB_0191 MB_0192 MB_0193 ## chr1_762469_763020 0.000000000 0.00000000 NA 0.000000000 0.000000000 ## MB_0194 MB_0195 MB_0197 MB_0198 MB_0199 ## chr1_762469_763020 NA 0.017094017 0.000000000 0.01886792 0.000000000 ## MB_0201 MB_0202 MB_0203 MB_0204 MB_0205 ## chr1_762469_763020 0.00000000 0.00000000 0.03000000 0.000000000 0.01442308 ## MB_0206 MB_0207 MB_0214 MB_0215 MB_0218 ## chr1_762469_763020 0.000000000 0.021739130 0.000000000 0.00000000 0.00000000 ## MB_0220 MB_0221 MB_0222 MB_0223 MB_0224 ## chr1_762469_763020 NA NA 0.00000000 0.018691589 0.02197802 ## MB_0225 MB_0226 MB_0227 MB_0228 MB_0229 ## chr1_762469_763020 0.018867925 0.014925373 0.006993007 NA 0.000000000 ## MB_0231 MB_0233 MB_0234 MB_0235 MB_0236 ## chr1_762469_763020 NA 0.00000000 0.000000000 0.004608295 0.00000000 ## MB_0238 MB_0239 MB_0240 MB_0241 MB_0242 ## chr1_762469_763020 NA 0.00000000 0.000000000 0.00000000 0.00000000 ## MB_0243 MB_0244 MB_0245 MB_0246 MB_0248 ## chr1_762469_763020 0.000000000 0.012048193 0.00000000 0.004739336 0.000000000 ## MB_0249 MB_0250 MB_0251 MB_0252 MB_0253 ## chr1_762469_763020 0.0189873418 0.01449275 0.03255814 0.031914894 0.005882353 ## MB_0254 MB_0255 MB_0256 MB_0257 MB_0258 ## chr1_762469_763020 0.000000000 0.006666667 0.000000000 0.004273504 0.013157895 ## MB_0259 MB_0260 MB_0261 MB_0262 MB_0263 ## chr1_762469_763020 NA 0.01675978 0.008474576 0.048780488 0.000000000 ## MB_0264 MB_0265 MB_0266 MB_0268 MB_0270 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.009345794 NA ## MB_0271 MB_0272 MB_0273 MB_0278 MB_0279 ## chr1_762469_763020 0.000000000 0.025423729 0.00000000 0.00000000 0.01716738 ## MB_0280 MB_0282 MB_0283 MB_0284 MB_0285 ## chr1_762469_763020 0.00000000 0.006250000 0.00000000 0.00000000 0.04109589 ## MB_0286 MB_0287 MB_0288 MB_0290 MB_0291 ## chr1_762469_763020 0.000000000 0.000000000 0.061538462 NA NA ## MB_0292 MB_0293 MB_0294 MB_0295 MB_0301 ## chr1_762469_763020 NA 0.04301075 0.000000000 0.000000000 0.020833333 ## MB_0302 MB_0303 MB_0304 MB_0305 MB_0306 ## chr1_762469_763020 0.006896552 NA 0.00000000 0.00000000 0.000000000 ## MB_0307 MB_0308 MB_0309 MB_0310 MB_0311 ## chr1_762469_763020 0.00000000 0.012738854 NA 0.012626263 0.000000000 ## MB_0312 MB_0313 MB_0314 MB_0315 MB_0316 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.00000000 0.000000000 ## MB_0317 MB_0318 MB_0319 MB_0320 MB_0321 ## chr1_762469_763020 0.00000000 0.00000000 0.01190476 0.000000000 0.010752688 ## MB_0322 MB_0324 MB_0325 MB_0327 MB_0328 ## chr1_762469_763020 0.01507538 0.003086420 0.009615385 0.000000000 0.01869159 ## MB_0329 MB_0330 MB_0336 MB_0339 MB_0340 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.006451613 0.000000000 ## MB_0341 MB_0342 MB_0343 MB_0345 MB_0348 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.00000000 0.03030303 ## MB_0349 MB_0350 MB_0352 MB_0353 MB_0356 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 NA 0.05660377 ## MB_0358 MB_0359 MB_0360 MB_0361 MB_0362 ## chr1_762469_763020 0.00000000 0.013793103 0.00000000 NA 0.00000000 ## MB_0363 MB_0364 MB_0365 MB_0366 MB_0367 ## chr1_762469_763020 0.00000000 0.00000000 0.008333333 0.00000000 0.028985507 ## MB_0368 MB_0369 MB_0370 MB_0371 MB_0373 ## chr1_762469_763020 0.01239669 0.020000000 0.00000000 0.003533569 0.000000000 ## MB_0374 MB_0375 MB_0378 MB_0379 MB_0380 ## chr1_762469_763020 0.000000000 0.02380952 0.000000000 0.000000000 0.00000000 ## MB_0381 MB_0383 MB_0384 MB_0385 MB_0386 ## chr1_762469_763020 0.01379310 0.008064516 0.006329114 0.000000000 0.000000000 ## MB_0388 MB_0389 MB_0391 MB_0392 MB_0393 ## chr1_762469_763020 0.00000000 0.00000000 0.000000000 0.00000000 0.00000000 ## MB_0394 MB_0395 MB_0396 MB_0398 MB_0399 ## chr1_762469_763020 0.03015075 0.000000000 0.000000000 0.00000000 0.00000000 ## MB_0400 MB_0401 MB_0402 MB_0404 MB_0406 ## chr1_762469_763020 0.00000000 0.00000000 0.01550388 0.000000000 0.00660066 ## MB_0408 MB_0410 MB_0411 MB_0412 MB_0413 ## chr1_762469_763020 0.02545455 0.00000000 0.021276596 0.000000000 0.016949153 ## MB_0414 MB_0417 MB_0418 MB_0419 MB_0420 ## chr1_762469_763020 0.000000000 0.000000000 0.006802721 0.008695652 0.011560694 ## MB_0421 MB_0422 MB_0425 MB_0426 MB_0427 ## chr1_762469_763020 0.008474576 NA 0.000000000 0.014925373 0.008196721 ## MB_0428 MB_0429 MB_0431 MB_0432 MB_0434 ## chr1_762469_763020 0.00000000 0.033333333 0.00000000 0.000000000 0.000000000 ## MB_0436 MB_0437 MB_0439 MB_0440 MB_0442 ## chr1_762469_763020 0.00462963 0.00000000 0.006410256 0.01724138 0.008888889 ## MB_0443 MB_0444 MB_0445 MB_0446 MB_0449 ## chr1_762469_763020 0.008474576 0.004098361 0.03465347 0.04098361 0.008403361 ## MB_0451 MB_0452 MB_0453 MB_0454 MB_0455 ## chr1_762469_763020 0.000000000 0.015267176 0.010928962 0.000000000 0.000000000 ## MB_0458 MB_0460 MB_0462 MB_0464 MB_0465 ## chr1_762469_763020 0.00000000 0.00000000 0.00000000 0.016666667 0.00000000 ## MB_0466 MB_0467 MB_0468 MB_0469 MB_0471 ## chr1_762469_763020 0.012500000 0.01250000 0.000000000 0.000000000 0.00000000 ## MB_0474 MB_0475 MB_0476 MB_0478 MB_0479 ## chr1_762469_763020 0.02597403 NA 0.000000000 0.012422360 0.00000000 ## MB_0480 MB_0481 MB_0482 MB_0483 MB_0484 ## chr1_762469_763020 0.000000000 0.000000000 NA NA 0.000000000 ## MB_0485 MB_0486 MB_0487 MB_0488 MB_0489 ## chr1_762469_763020 0.008333333 NA 0.003937008 NA 0.000000000 ## MB_0492 MB_0496 MB_0497 MB_0500 MB_0501 ## chr1_762469_763020 0.057142857 0.00000000 0.000000000 0.00000000 0.01522843 ## MB_0502 MB_0503 MB_0504 MB_0505 MB_0506 ## chr1_762469_763020 0.003558719 0.000000000 0.00000000 0.012048193 0.000000000 ## MB_0507 MB_0508 MB_0510 MB_0511 MB_0512 ## chr1_762469_763020 0.012269939 0.00000000 0.02884615 NA 0.000000000 ## MB_0513 MB_0514 MB_0516 MB_0519 MB_0521 ## chr1_762469_763020 0.000000000 0.000000000 0.027027027 0.010169492 0.00000000 ## MB_0525 MB_0527 MB_0528 MB_0529 MB_0530 ## chr1_762469_763020 0.008695652 0.00000000 0.00000000 0.00000000 0.006756757 ## MB_0531 MB_0532 MB_0534 MB_0535 MB_0536 ## chr1_762469_763020 0.000000000 0.009009009 0.044444444 0.000000000 0.009345794 ## MB_0538 MB_0542 MB_0544 MB_0545 MB_0546 ## chr1_762469_763020 0.000000000 0.022388060 0.01219512 0.00000000 0.000000000 ## MB_0549 MB_0550 MB_0551 MB_0552 MB_0553 ## chr1_762469_763020 0.000000000 0.008474576 0.03278689 0.000000000 0.009174312 ## MB_0558 MB_0559 MB_0566 MB_0568 MB_0569 ## chr1_762469_763020 0.014925373 0.00000000 0.000000000 0.000000000 0.015151515 ## MB_0570 MB_0571 MB_0572 MB_0574 MB_0575 ## chr1_762469_763020 0.012500000 0.021276596 0.000000000 0.017241379 0.000000000 ## MB_0576 MB_0580 MB_0581 MB_0582 MB_0583 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.00000000 0.00000000 ## MB_0585 MB_0589 MB_0591 MB_0593 MB_0594 ## chr1_762469_763020 0.02739726 0.00000000 0.000000000 0.00000000 0.00000000 ## MB_0596 MB_0597 MB_0600 MB_0601 MB_0603 ## chr1_762469_763020 0.000000000 0.000000000 0.005681818 0.000000000 0.000000000 ## MB_0605 MB_0606 MB_0608 MB_0609 MB_0610 ## chr1_762469_763020 0.004132231 0.00000000 NA 0.00000000 0.014598540 ## MB_0615 MB_0616 MB_0617 MB_0618 MB_0620 ## chr1_762469_763020 0.000000000 0.007692308 0.00000000 0.000000000 0.003968254 ## MB_0621 MB_0622 MB_0623 MB_0626 MB_0627 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.00000000 0.000000000 ## MB_0628 MB_0631 MB_0632 MB_0637 MB_0638 ## chr1_762469_763020 0.01851852 0.03260870 0.007692308 0.021978022 0.00000000 ## MB_0639 MB_0642 MB_0643 MB_0646 MB_0649 ## chr1_762469_763020 0.051282051 0.00000000 0.000000000 0.00000000 0.000000000 ## MB_0650 MB_0653 MB_0655 MB_0656 MB_0657 ## chr1_762469_763020 0.00000000 0.00000000 0.000000000 0.00000000 0.00000000 ## MB_0659 MB_0662 MB_0663 MB_0664 MB_0666 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.00000000 0.000000000 ## MB_0668 MB_0676 MB_0684 MB_0685 MB_0692 ## chr1_762469_763020 NA 0.000000000 NA 0.004166667 0.000000000 ## MB_0698 MB_0700 MB_0719 MB_0724 MB_0732 ## chr1_762469_763020 0.003703704 0.000000000 0.00000000 0.000000000 0.000000000 ## MB_0735 MB_0739 MB_0748 MB_0756 MB_0767 ## chr1_762469_763020 0.01234568 0.00000000 0.000000000 0.0000000000 0.000000000 ## MB_0768 MB_0770 MB_0772 MB_0778 MB_0779 ## chr1_762469_763020 0.01538462 0.0000000000 0.000000000 0.000000000 0.000000000 ## MB_0785 MB_0786 MB_0788 MB_0794 MB_0795 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.000000000 0.0000000000 ## MB_0801 MB_0803 MB_0818 MB_0825 MB_0826 ## chr1_762469_763020 0.0238095238 0.000000000 0.000000000 0.000000000 0.008695652 ## MB_0828 MB_0833 MB_0835 MB_0841 MB_0850 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.000000000 0.0000000000 ## MB_0857 MB_0865 MB_0868 MB_0872 MB_0873 ## chr1_762469_763020 0.000000000 0.000000000 0.011173184 0.009259259 0.013245033 ## MB_0875 MB_0877 MB_0878 MB_0879 MB_0880 ## chr1_762469_763020 0.004484305 0.0000000000 0.02932551 0.008635579 0.00000000 ## MB_0881 MB_0884 MB_0886 MB_0890 MB_0892 ## chr1_762469_763020 NA 0.02083333 0.000000000 0.031250000 0.01562500 ## MB_0894 MB_0895 MB_0897 MB_0898 MB_0899 ## chr1_762469_763020 0.029569892 NA 0.000000000 0.024096386 0.009708738 ## MB_0901 MB_0902 MB_0904 MB_0905 MB_0906 ## chr1_762469_763020 0.000000000 0.013698630 0.00000000 0.000000000 0.000000000 ## MB_0908 MB_0923 MB_0924 MB_0925 MB_0927 ## chr1_762469_763020 0.006944444 0.015544041 0.019607843 0.00000000 0.000000000 ## MB_0928 MB_0929 MB_0930 MB_0931 MB_0932 ## chr1_762469_763020 0.03149606 0.006944444 0.040000000 0.027397260 0.00000000 ## MB_0933 MB_0934 MB_0935 MB_0936 MB_0937 ## chr1_762469_763020 0.00000000 0.000000000 0.00990099 0.007462687 0.000000000 ## MB_0939 MB_0941 MB_0942 MB_0943 MB_0944 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.000000000 NA ## MB_0945 MB_0947 MB_0948 MB_0949 MB_0950 ## chr1_762469_763020 0.01463415 0.02564103 0.000000000 0.00000000 0.020000000 ## MB_0951 MB_0952 MB_0953 MB_0955 MB_0956 ## chr1_762469_763020 0.003649635 0.000000000 0.02020202 0.000000000 0.000000000 ## MB_0957 MB_0958 MB_0961 MB_0964 MB_0965 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.00000000 NA ## MB_0966 MB_0967 MB_0968 MB_0969 MB_0970 ## chr1_762469_763020 0.040462428 0.022471910 0.004807692 0.000000000 0.00000000 ## MB_0971 MB_0973 MB_0974 MB_0975 MB_0976 ## chr1_762469_763020 0.033613445 0.00000000 0.00000000 0.000000000 0.000000000 ## MB_0978 MB_0979 MB_0980 MB_0982 MB_0983 ## chr1_762469_763020 0.000000000 0.000000000 0.013986014 NA 0.000000000 ## MB_0984 MB_0986 MB_0987 MB_0988 MB_0989 ## chr1_762469_763020 0.000000000 0.008196721 0.000000000 0.00000000 0.000000000 ## MB_0990 MB_0991 MB_0992 MB_0993 MB_0994 ## chr1_762469_763020 0.002570694 0.0046728972 0.00000000 0.000000000 0.007604563 ## MB_0995 MB_0996 MB_0997 MB_0998 MB_0999 ## chr1_762469_763020 0.017937220 0.000000000 0.007751938 0.013986014 0.004201681 ## MB_1001 MB_1002 MB_1003 MB_1004 MB_1005 ## chr1_762469_763020 0.000000000 0.01190476 0.000000000 0.011560694 0.000000000 ## MB_1006 MB_1007 MB_1008 MB_1009 MB_1010 ## chr1_762469_763020 0.005494505 0.006250000 0.000000000 0.000000000 0.000000000 ## MB_1011 MB_1012 MB_1013 MB_1014 MB_1015 ## chr1_762469_763020 0.000000000 0.004032258 0.014388489 0.00000000 0.020270270 ## MB_1017 MB_1018 MB_1020 MB_1022 MB_1023 ## chr1_762469_763020 0.01923077 0.005025126 0.011560694 0.005899705 0.006666667 ## MB_1024 MB_1025 MB_1026 MB_1027 MB_1028 ## chr1_762469_763020 0.006493506 0.000000000 0.000000000 0.042253521 0.014925373 ## MB_1029 MB_1031 MB_1032 MB_1033 MB_1034 ## chr1_762469_763020 0.014084507 0.00000000 0.000000000 0.01162791 0.00000000 ## MB_1035 MB_1036 MB_1037 MB_1038 MB_1039 ## chr1_762469_763020 0.025641026 0.000000000 0.01333333 0.00000000 0.028169014 ## MB_1040 MB_1041 MB_1043 MB_1044 MB_1045 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.04545455 0.000000000 ## MB_1046 MB_1047 MB_1048 MB_1049 MB_1050 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.000000000 0.000000000 ## MB_1051 MB_1052 MB_1053 MB_1054 MB_1055 ## chr1_762469_763020 0.00000000 0.000000000 0.009900990 0.010638298 NA ## MB_1056 MB_1057 MB_1058 MB_1059 MB_1061 ## chr1_762469_763020 0.000000000 0.000000000 0.016666667 0.005847953 0.000000000 ## MB_1062 MB_1063 MB_1064 MB_1065 MB_1066 ## chr1_762469_763020 0.03125000 0.008695652 0.006172840 0.008196721 0.008264463 ## MB_1067 MB_1068 MB_1069 MB_1070 MB_1071 ## chr1_762469_763020 0.012500000 0.00000000 0.009174312 0.01923077 0.000000000 ## MB_1072 MB_1073 MB_1074 MB_1075 MB_1076 ## chr1_762469_763020 0.000000000 0.01142857 0.006896552 0.016528926 0.000000000 ## MB_1077 MB_1078 MB_1079 MB_1080 MB_1081 ## chr1_762469_763020 0.00000000 0.01176471 0.06451613 0.00000000 0.01818182 ## MB_1082 MB_1083 MB_1084 MB_1085 MB_1086 ## chr1_762469_763020 0.000000000 0.01123596 0.012345679 0.016949153 0.006329114 ## MB_1087 MB_1090 MB_1091 MB_1093 MB_1096 ## chr1_762469_763020 0.000000000 NA 0.000000000 0.000000000 0.020408163 ## MB_1097 MB_1098 MB_1100 MB_1101 MB_1102 ## chr1_762469_763020 0.02941176 0.00000000 0.006172840 0.000000000 0.000000000 ## MB_1103 MB_1104 MB_1105 MB_1107 MB_1110 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.00000000 0.000000000 ## MB_1111 MB_1114 MB_1116 MB_1118 MB_1119 ## chr1_762469_763020 0.006410256 0.006493506 0.000000000 0.000000000 0.01086957 ## MB_1120 MB_1121 MB_1122 MB_1123 MB_1124 ## chr1_762469_763020 0.004950495 0.005235602 0.000000000 0.01224490 0.04950495 ## MB_1125 MB_1126 MB_1127 MB_1129 MB_1130 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.008163265 0.000000000 ## MB_1131 MB_1132 MB_1134 MB_1135 MB_1136 ## chr1_762469_763020 0.000000000 0.000000000 0.010025063 0.010810811 0.000000000 ## MB_1137 MB_1138 MB_1139 MB_1141 MB_1142 ## chr1_762469_763020 0.00000000 0.003174603 0.004694836 0.007712082 0.00000000 ## MB_1143 MB_1144 MB_1145 MB_1146 MB_1147 ## chr1_762469_763020 0.004484305 0.009836066 0.008771930 0.01307190 0.009966777 ## MB_1148 MB_1149 MB_1151 MB_1152 MB_1155 ## chr1_762469_763020 0.02479339 0.007092199 0.004901961 0.011235955 0.01877934 ## MB_1156 MB_2517 MB_2536 MB_2556 MB_2564 ## chr1_762469_763020 0.000000000 0.000000000 0.005263158 0.00000000 0.011976048 ## MB_2610 MB_2613 MB_2614 MB_2616 MB_2617 ## chr1_762469_763020 0.023437500 0.000000000 0.023809524 0.0000000000 0.00000000 ## MB_2618 MB_2624 MB_2626 MB_2632 MB_2634 ## chr1_762469_763020 0.000000000 0.000000000 0.00000000 0.05263158 0.000000000 ## MB_2640 MB_2643 MB_2645 MB_2669 MB_2686 ## chr1_762469_763020 0.00000000 0.016528926 NA 0.00000000 0.000000000 ## MB_2705 MB_2708 MB_2711 MB_2712 MB_2718 ## chr1_762469_763020 NA 0.015873016 0.019607843 0.008620690 0.005181347 ## MB_2724 MB_2728 MB_2730 MB_2742 MB_2744 ## chr1_762469_763020 0.02255639 0.000000000 0.000000000 NA 0.000000000 ## MB_2745 MB_2747 MB_2749 MB_2750 MB_2752 ## chr1_762469_763020 0.000000000 0.016042781 0.02439024 0.009345794 0.02777778 ## MB_2753 MB_2754 MB_2760 MB_2763 MB_2764 ## chr1_762469_763020 0.026595745 0.018656716 0.000000000 0.009090909 0.00000000 ## MB_2765 MB_2767 MB_2769 MB_2770 MB_2772 ## chr1_762469_763020 0.00000000 NA 0.000000000 0.04477612 0.018691589 ## MB_2774 MB_2775 MB_2778 MB_2779 MB_2781 ## chr1_762469_763020 0.011235955 0.008333333 0.000000000 0.03448276 0.0288461538 ## MB_2790 MB_2791 MB_2792 MB_2793 MB_2796 ## chr1_762469_763020 0.000000000 0.028571429 0.000000000 0.007246377 0.00000000 ## MB_2803 MB_2814 MB_2819 MB_2820 MB_2821 ## chr1_762469_763020 0.000000000 0.00000000 0.00000000 0.010101010 0.028571429 ## MB_2827 MB_2833 MB_2834 MB_2835 MB_2838 ## chr1_762469_763020 0.01923077 0.02884615 0.00617284 0.011235955 0.000000000 ## MB_2840 MB_2842 MB_2843 MB_2844 MB_2845 ## chr1_762469_763020 0.00000000 0.000000000 0.01986755 0.00000000 0.00000000 ## MB_2846 MB_2847 MB_2848 MB_2849 MB_2850 ## chr1_762469_763020 0.000000000 0.000000000 0.006993007 0.000000000 0.000000000 ## MB_2851 MB_2853 MB_2854 MB_2862 MB_2895 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.008264463 0.000000000 ## MB_2896 MB_2901 MB_2912 MB_2916 MB_2917 ## chr1_762469_763020 0.00000000 0.00000000 0.00000000 0.000000000 0.019047619 ## MB_2919 MB_2923 MB_2927 MB_2929 MB_2931 ## chr1_762469_763020 0.02898551 0.00000000 NA 0.008264463 0.000000000 ## MB_2933 MB_2939 MB_2951 MB_2952 MB_2953 ## chr1_762469_763020 0.036231884 0.00000000 0.02027027 0.00000000 0.003846154 ## MB_2954 MB_2957 MB_2960 MB_2963 MB_2969 ## chr1_762469_763020 0.01488095 0.021052632 0.005347594 0.013245033 0.000000000 ## MB_2977 MB_2983 MB_2984 MB_2990 MB_2993 ## chr1_762469_763020 0.010791367 0.00000000 0.01910828 0.000000000 0.000000000 ## MB_2994 MB_2996 MB_3001 MB_3005 MB_3006 ## chr1_762469_763020 0.00000000 0.00000000 NA 0.007692308 NA ## MB_3007 MB_3008 MB_3014 MB_3016 MB_3021 ## chr1_762469_763020 0.000000000 0.010309278 0.00000000 NA 0.000000000 ## MB_3025 MB_3028 MB_3031 MB_3033 MB_3035 ## chr1_762469_763020 0.00000000 NA 0.010101010 0.014423077 0.015748031 ## MB_3037 MB_3046 MB_3049 MB_3050 MB_3057 ## chr1_762469_763020 0.00000000 0.011764706 0.00000000 NA 0.000000000 ## MB_3058 MB_3063 MB_3064 MB_3067 MB_3079 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.031250000 0.01219512 ## MB_3082 MB_3083 MB_3085 MB_3088 MB_3089 ## chr1_762469_763020 0.008130081 0.018181818 0.007142857 0.01369863 0.000000000 ## MB_3102 MB_3104 MB_3105 MB_3110 MB_3121 ## chr1_762469_763020 0.000000000 0.013157895 0.000000000 0.00000000 0.01754386 ## MB_3122 MB_3153 MB_3165 MB_3167 MB_3171 ## chr1_762469_763020 0.00000000 0.000000000 0.011764706 0.031847134 0.010638298 ## MB_3211 MB_3218 MB_3228 MB_3235 MB_3252 ## chr1_762469_763020 0.004672897 NA 0.000000000 0.00000000 0.00000000 ## MB_3253 MB_3254 MB_3266 MB_3271 MB_3275 ## chr1_762469_763020 0.027027027 0.000000000 0.006622517 0.000000000 0.012096774 ## MB_3277 MB_3292 MB_3295 MB_3297 MB_3298 ## chr1_762469_763020 0.010638298 0.009259259 0.000000000 0.040983607 0.015748031 ## MB_3300 MB_3301 MB_3315 MB_3328 MB_3329 ## chr1_762469_763020 0.02941176 0.00000000 0.02500000 0.000000000 NA ## MB_3341 MB_3350 MB_3351 MB_3357 MB_3360 ## chr1_762469_763020 0.00000000 0.009615385 0.00000000 NA 0.021052632 ## MB_3361 MB_3367 MB_3371 MB_3378 MB_3382 ## chr1_762469_763020 NA 0.00000000 0.01818182 0.000000000 0.000000000 ## MB_3383 MB_3395 MB_3396 MB_3402 MB_3403 ## chr1_762469_763020 0.000000000 0.000000000 0.019417476 0.00000000 0.000000000 ## MB_3412 MB_3417 MB_3429 MB_3430 MB_3435 ## chr1_762469_763020 0.038251366 0.044692737 0.012422360 0.005617978 0.02040816 ## MB_3436 MB_3437 MB_3439 MB_3452 MB_3453 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.02727273 0.000000000 ## MB_3459 MB_3462 MB_3467 MB_3470 MB_3476 ## chr1_762469_763020 0.01863354 0.000000000 0.00000000 0.008264463 0.004950495 ## MB_3479 MB_3490 MB_3492 MB_3497 MB_3500 ## chr1_762469_763020 0.01492537 0.012738854 0.000000000 0.000000000 0.00000000 ## MB_3502 MB_3506 MB_3510 MB_3526 MB_3545 ## chr1_762469_763020 0.00000000 0.000000000 0.000000000 0.000000000 NA ## MB_3548 MB_3555 MB_3556 MB_3560 MB_3576 ## chr1_762469_763020 NA 0.000000000 0.00000000 NA 0.006622517 ## MB_3582 MB_3600 MB_3614 MB_3676 MB_3702 ## chr1_762469_763020 0.00000000 0.004587156 0.00000000 0.000000000 0.005586592 ## MB_3706 MB_3707 MB_3711 MB_3747 MB_3748 ## chr1_762469_763020 0.007194245 0.000000000 NA 0.00000000 0.03750000 ## MB_3752 MB_3754 MB_3755 MB_3781 MB_3804 ## chr1_762469_763020 NA 0.0000000 0.000000000 0.019704433 0.019138756 ## MB_3823 MB_3824 MB_3838 MB_3840 MB_3842 ## chr1_762469_763020 0.00000000 0.022727273 0.02290076 0.00000000 0.034482759 ## MB_3850 MB_3852 MB_3854 MB_3865 MB_3866 ## chr1_762469_763020 0.000000000 NA 0.000000000 0.000000000 0.00000000 ## MB_3871 MB_3874 MB_3978 MB_4000 MB_4001 ## chr1_762469_763020 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 ## MB_4003 MB_4004 MB_4008 MB_4012 MB_4015 ## chr1_762469_763020 0.009009009 0.000000000 0.00000000 0.00000000 0.006024096 ## MB_4017 MB_4018 MB_4024 MB_4033 MB_4036 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.00000000 0.013574661 ## MB_4038 MB_4039 MB_4040 MB_4042 MB_4046 ## chr1_762469_763020 0.02117647 0.000000000 0.00000000 0.004115226 0.000000000 ## MB_4048 MB_4049 MB_4051 MB_4053 MB_4054 ## chr1_762469_763020 0.04242424 0.010309278 0.01030928 0.009132420 0.012738854 ## MB_4055 MB_4056 MB_4057 MB_4058 MB_4059 ## chr1_762469_763020 0.012987013 0.058394161 0.000000000 0.02803738 0.000000000 ## MB_4060 MB_4061 MB_4062 MB_4063 MB_4064 ## chr1_762469_763020 0.03007519 0.00000000 0.000000000 0.01612903 0.008522727 ## MB_4066 MB_4072 MB_4079 MB_4083 MB_4084 ## chr1_762469_763020 0.0546448087 0.006711409 0.000000000 0.01298701 0.012875536 ## MB_4091 MB_4098 MB_4110 MB_4117 MB_4119 ## chr1_762469_763020 0.005555556 0.013333333 0.02702703 0.022988506 0.01923077 ## MB_4120 MB_4123 MB_4126 MB_4127 MB_4139 ## chr1_762469_763020 0.005681818 0.000000000 0.000000000 0.00000000 0.00000000 ## MB_4141 MB_4145 MB_4146 MB_4148 MB_4154 ## chr1_762469_763020 0.00000000 0.01282051 0.000000000 0.02083333 0.000000000 ## MB_4169 MB_4171 MB_4173 MB_4189 MB_4190 ## chr1_762469_763020 0.007662835 0.004081633 0.010362694 0.024390244 0.000000000 ## MB_4211 MB_4212 MB_4213 MB_4222 MB_4224 ## chr1_762469_763020 0.00990099 0.02380952 0.00000000 0.004761905 0.000000000 ## MB_4230 MB_4233 MB_4234 MB_4235 MB_4236 ## chr1_762469_763020 0.004347826 0.016000000 0.01086957 0.009868421 0.000000000 ## MB_4254 MB_4255 MB_4264 MB_4266 MB_4268 ## chr1_762469_763020 0.005128205 0.03448276 0.012500000 0.000000000 0.000000000 ## MB_4270 MB_4272 MB_4274 MB_4276 MB_4278 ## chr1_762469_763020 0.01265823 0.000000000 0.00000000 0.005780347 0.01481481 ## MB_4281 MB_4282 MB_4283 MB_4289 MB_4293 ## chr1_762469_763020 0.00000000 0.026455026 0.005102041 0.03333333 0.011834320 ## MB_4300 MB_4306 MB_4308 MB_4310 MB_4313 ## chr1_762469_763020 0.01142857 0.000000000 NA 0.030000000 0.00000000 ## MB_4317 MB_4318 MB_4322 MB_4323 MB_4328 ## chr1_762469_763020 0.00000000 NA 0.000000000 0.00000000 0.00000000 ## MB_4331 MB_4333 MB_4339 MB_4341 MB_4342 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.000000000 0.000000000 ## MB_4343 MB_4348 MB_4350 MB_4351 MB_4353 ## chr1_762469_763020 NA 0.00000000 0.01492537 0.03030303 0.009009009 ## MB_4354 MB_4357 MB_4360 MB_4361 MB_4362 ## chr1_762469_763020 NA 0.000000000 0.00000000 0.00000000 0.019354839 ## MB_4368 MB_4374 MB_4375 MB_4381 MB_4390 ## chr1_762469_763020 0.012048193 NA 0.000000000 0.00000000 0.01219512 ## MB_4395 MB_4407 MB_4408 MB_4409 MB_4410 ## chr1_762469_763020 0.016393443 0.00000000 0.000000000 0.00000000 0.01785714 ## MB_4413 MB_4416 MB_4417 MB_4421 MB_4426 ## chr1_762469_763020 0.004587156 0.01578947 0.000000000 0.00000000 0.03680982 ## MB_4431 MB_4434 MB_4442 MB_4444 MB_4455 ## chr1_762469_763020 NA 0.013698630 0.008823529 0.00000000 0.0000000 ## MB_4458 MB_4464 MB_4465 MB_4474 MB_4477 ## chr1_762469_763020 0.000000000 0.009852217 0.026315789 0.00000000 0.00000000 ## MB_4482 MB_4483 MB_4484 MB_4487 MB_4492 ## chr1_762469_763020 0.005390836 0.000000000 0.008130081 0.003344482 0.000000000 ## MB_4495 MB_4511 MB_4521 MB_4528 MB_4529 ## chr1_762469_763020 0.008888889 NA 0.000000000 0.00000000 0.005681818 ## MB_4531 MB_4541 MB_4548 MB_4556 MB_4557 ## chr1_762469_763020 0.00000000 0.00000000 0.011235955 0.01851852 0.000000000 ## MB_4558 MB_4564 MB_4578 MB_4591 MB_4593 ## chr1_762469_763020 0.013636364 0.052631579 0.000000000 0.005154639 0.01428571 ## MB_4598 MB_4599 MB_4601 MB_4602 MB_4603 ## chr1_762469_763020 0.024509804 0.003236246 0.008230453 0.000000000 0.000000000 ## MB_4607 MB_4613 MB_4616 MB_4618 MB_4621 ## chr1_762469_763020 0.01187648 0.000000000 0.002624672 0.000000000 0.000000000 ## MB_4622 MB_4623 MB_4626 MB_4627 MB_4630 ## chr1_762469_763020 0.029411765 0.00000000 0.03937008 0.010526316 0.025641026 ## MB_4633 MB_4634 MB_4635 MB_4639 MB_4640 ## chr1_762469_763020 0.008230453 0.000000000 0.000000000 0.00000000 0.007407407 ## MB_4641 MB_4642 MB_4643 MB_4644 MB_4648 ## chr1_762469_763020 0.004149378 0.000000000 0.015772871 0.00000000 0.00000000 ## MB_4649 MB_4651 MB_4653 MB_4654 MB_4655 ## chr1_762469_763020 0.00000000 0.01562500 0.008298755 0.01777778 0.01600000 ## MB_4661 MB_4663 MB_4665 MB_4666 MB_4669 ## chr1_762469_763020 0.005882353 0.000000000 0.01481481 0.01388889 0.017167382 ## MB_4670 MB_4671 MB_4672 MB_4673 MB_4674 ## chr1_762469_763020 0.000000000 0.007843137 0.00000000 0.01212121 0.003115265 ## MB_4675 MB_4679 MB_4681 MB_4682 MB_4685 ## chr1_762469_763020 0.01886792 0.00877193 0.000000000 0.00000000 0.03597122 ## MB_4686 MB_4688 MB_4691 MB_4692 MB_4694 ## chr1_762469_763020 0.009049774 0.02197802 0.005076142 0.012195122 0.000000000 ## MB_4696 MB_4697 MB_4698 MB_4701 MB_4702 ## chr1_762469_763020 0.00000000 0.00000000 0.00000000 0.01626016 0.021126761 ## MB_4704 MB_4705 MB_4706 MB_4708 MB_4709 ## chr1_762469_763020 0.000000000 0.010638298 0.01416431 0.02976190 0.010452962 ## MB_4710 MB_4711 MB_4712 MB_4714 MB_4715 ## chr1_762469_763020 0.010101010 0.014285714 0.008620690 0.012000000 0.028248588 ## MB_4716 MB_4717 MB_4719 MB_4722 MB_4723 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.008333333 0.016129032 ## MB_4724 MB_4725 MB_4729 MB_4730 MB_4731 ## chr1_762469_763020 0.005847953 0.02127660 0.013245033 0.008403361 0.000000000 ## MB_4732 MB_4733 MB_4735 MB_4737 MB_4738 ## chr1_762469_763020 0.018181818 0.005376344 0.023323615 0.011111111 0.02631579 ## MB_4739 MB_4741 MB_4742 MB_4743 MB_4744 ## chr1_762469_763020 0.010101010 0.009433962 0.010989011 0.014285714 0.000000000 ## MB_4745 MB_4746 MB_4749 MB_4752 MB_4757 ## chr1_762469_763020 0.004310345 0.000000000 0.00000000 0.000000000 0.005617978 ## MB_4758 MB_4762 MB_4763 MB_4764 MB_4767 ## chr1_762469_763020 0.000000000 0.015625000 0.008583691 0.037234043 0.00000000 ## MB_4769 MB_4770 MB_4771 MB_4778 MB_4779 ## chr1_762469_763020 0.02482270 0.003344482 0.013986014 0.00000000 0.006024096 ## MB_4782 MB_4784 MB_4785 MB_4787 MB_4790 ## chr1_762469_763020 0.007092199 0.008264463 0.00000000 0.020547945 0.004830918 ## MB_4791 MB_4793 MB_4794 MB_4796 MB_4797 ## chr1_762469_763020 0.02000000 0.000000000 0.02739726 0.01030928 0.000000000 ## MB_4798 MB_4800 MB_4801 MB_4802 MB_4805 ## chr1_762469_763020 0.010000000 0.000000000 0.02536232 0.007092199 0.029411765 ## MB_4806 MB_4809 MB_4814 MB_4816 MB_4818 ## chr1_762469_763020 0.000000000 0.02884615 0.006289308 0.020833333 0.011904762 ## MB_4820 MB_4825 MB_4827 MB_4828 MB_4829 ## chr1_762469_763020 0.01287554 0.00000000 0.003546099 0.008849558 0.00000000 ## MB_4832 MB_4834 MB_4836 MB_4838 MB_4839 ## chr1_762469_763020 0.037974684 0.000000000 0.008849558 0.011764706 0.00000000 ## MB_4843 MB_4849 MB_4851 MB_4853 MB_4855 ## chr1_762469_763020 0.011173184 0.01980198 0.00000000 0.009852217 0.016666667 ## MB_4858 MB_4859 MB_4862 MB_4865 MB_4866 ## chr1_762469_763020 0.008695652 0.004329004 0.028571429 0.010989011 0.010869565 ## MB_4867 MB_4869 MB_4871 MB_4872 MB_4873 ## chr1_762469_763020 0.01067616 0.00862069 0.007125891 0.000000000 0.006514658 ## MB_4876 MB_4878 MB_4879 MB_4880 MB_4881 ## chr1_762469_763020 0.021126761 0.01764706 0.05769231 0.02702703 0.000000000 ## MB_4883 MB_4886 MB_4887 MB_4888 MB_4893 ## chr1_762469_763020 0.012307692 0.01149425 0.007662835 0.011494253 0.00800000 ## MB_4894 MB_4896 MB_4897 MB_4898 MB_4899 ## chr1_762469_763020 0.009950249 0.000000000 0.007692308 0.04705882 0.000000000 ## MB_4900 MB_4904 MB_4907 MB_4908 MB_4911 ## chr1_762469_763020 0.013513514 0.01648352 0.006993007 0.00000000 0.000000000 ## MB_4912 MB_4925 MB_4928 MB_4929 MB_4930 ## chr1_762469_763020 0.00000000 0.01197605 0.00000000 0.006024096 0.02439024 ## MB_4931 MB_4933 MB_4934 MB_4935 MB_4937 ## chr1_762469_763020 0.0267857143 0.01081081 0.008928571 0.02097902 0.01840491 ## MB_4941 MB_4942 MB_4944 MB_4945 MB_4949 ## chr1_762469_763020 0.010752688 0.02116402 0.007812500 0.003333333 0.005882353 ## MB_4950 MB_4952 MB_4956 MB_4957 MB_4959 ## chr1_762469_763020 0.00000000 0.013333333 0.000000000 0.01333333 0.00000000 ## MB_4961 MB_4962 MB_4965 MB_4966 MB_4967 ## chr1_762469_763020 0.005405405 0.000000000 0.009852217 0.009756098 0.036144578 ## MB_4968 MB_4969 MB_4970 MB_4976 MB_4977 ## chr1_762469_763020 0.000000000 0.0058823529 0.025000000 0.00000000 0.00000000 ## MB_4981 MB_4986 MB_4987 MB_4991 MB_4992 ## chr1_762469_763020 0.01190476 0.012048193 0.008849558 0.000000000 0.000000000 ## MB_4993 MB_4994 MB_4996 MB_4998 MB_4999 ## chr1_762469_763020 0.011560694 0.012396694 0.009009009 0.005000000 0.006289308 ## MB_5001 MB_5004 MB_5008 MB_5011 MB_5013 ## chr1_762469_763020 0.012987013 0.02272727 0.000000000 0.000000000 0.00000000 ## MB_5014 MB_5015 MB_5018 MB_5019 MB_5022 ## chr1_762469_763020 0.004854369 0.00000000 0.014285714 0.000000000 0.00000000 ## MB_5027 MB_5028 MB_5033 MB_5039 MB_5040 ## chr1_762469_763020 0.002832861 0.000000000 0.016000000 0.000000000 0.011764706 ## MB_5041 MB_5043 MB_5044 MB_5045 MB_5049 ## chr1_762469_763020 0.005376344 0.00000000 0.000000000 0.00000000 0.00000000 ## MB_5050 MB_5052 MB_5053 MB_5054 MB_5057 ## chr1_762469_763020 0.014035088 0.02395210 0.00000000 0.013986014 0.01098901 ## MB_5059 MB_5060 MB_5061 MB_5062 MB_5063 ## chr1_762469_763020 0.000000000 0.01075269 0.00000000 0.013157895 0.020833333 ## MB_5064 MB_5066 MB_5068 MB_5070 MB_5072 ## chr1_762469_763020 0.008333333 0.01449275 0.00000000 0.008333333 0.00000000 ## MB_5073 MB_5074 MB_5078 MB_5079 MB_5081 ## chr1_762469_763020 0.005865103 0.02439024 0.02702703 0.009090909 0.009852217 ## MB_5084 MB_5086 MB_5088 MB_5092 MB_5098 ## chr1_762469_763020 0.00304878 0.00000000 0.000000000 0.01648352 0.004950495 ## MB_5100 MB_5101 MB_5102 MB_5105 MB_5107 ## chr1_762469_763020 0.000000000 0.000000000 0.028409091 0.004651163 0.01507538 ## MB_5110 MB_5114 MB_5115 MB_5116 MB_5118 ## chr1_762469_763020 0.005988024 0.01562500 0.000000000 0.013937282 0.003215434 ## MB_5120 MB_5121 MB_5122 MB_5123 MB_5124 ## chr1_762469_763020 0.008474576 0.000000000 0.021739130 0.013513514 0.00000000 ## MB_5126 MB_5127 MB_5134 MB_5135 MB_5138 ## chr1_762469_763020 0.000000000 0.051020408 0.000000000 0.000000000 0.000000000 ## MB_5139 MB_5144 MB_5145 MB_5147 MB_5150 ## chr1_762469_763020 0.000000000 0.00000000 0.01574803 0.000000000 0.00000000 ## MB_5152 MB_5157 MB_5161 MB_5164 MB_5167 ## chr1_762469_763020 0.00000000 0.00000000 0.00000000 0.000000000 0.04477612 ## MB_5169 MB_5171 MB_5172 MB_5174 MB_5175 ## chr1_762469_763020 0.026548673 0.00000000 NA 0.000000000 0.00000000 ## MB_5176 MB_5182 MB_5184 MB_5186 MB_5188 ## chr1_762469_763020 0.00000000 0.011111111 0.02564103 0.011406844 0.04147465 ## MB_5190 MB_5191 MB_5193 MB_5197 MB_5200 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.0441176471 NA ## MB_5205 MB_5208 MB_5209 MB_5211 MB_5212 ## chr1_762469_763020 NA 0.00000000 0.00000000 0.023809524 0.007874016 ## MB_5214 MB_5215 MB_5218 MB_5221 MB_5222 ## chr1_762469_763020 0.005763689 0.022727273 0.051282051 0.00000000 0.04177546 ## MB_5223 MB_5224 MB_5225 MB_5226 MB_5227 ## chr1_762469_763020 0.035335689 0.009900990 0.0000000 0.00000000 0.00000000 ## MB_5230 MB_5232 MB_5233 MB_5235 MB_5238 ## chr1_762469_763020 0.007874016 0.003802281 0.00000000 0.00000000 0.000000000 ## MB_5239 MB_5243 MB_5244 MB_5251 MB_5256 ## chr1_762469_763020 0.000000000 0.04166667 0.00000000 0.000000000 0.02453988 ## MB_5259 MB_5261 MB_5264 MB_5266 MB_5270 ## chr1_762469_763020 0.00000000 0.00000000 0.01388889 0.008771930 NA ## MB_5271 MB_5272 MB_5273 MB_5275 MB_5277 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.009049774 0.006250000 ## MB_5278 MB_5279 MB_5280 MB_5281 MB_5284 ## chr1_762469_763020 0.007142857 0.00000000 0.01562500 0.000000000 0.000000000 ## MB_5286 MB_5287 MB_5288 MB_5292 MB_5293 ## chr1_762469_763020 0.000000000 0.000000000 0.00000000 0.00000000 0.00000000 ## MB_5298 MB_5306 MB_5311 MB_5312 MB_5313 ## chr1_762469_763020 0.01242236 0.000000000 0.000000000 0.022304833 0.00000000 ## MB_5315 MB_5322 MB_5327 MB_5329 MB_5331 ## chr1_762469_763020 0.004048583 0.00000000 0.045714286 0.009950249 0.000000000 ## MB_5334 MB_5335 MB_5338 MB_5339 MB_5341 ## chr1_762469_763020 0.028169014 0.00000000 0.00000000 0.000000000 0.00000000 ## MB_5345 MB_5348 MB_5350 MB_5351 MB_5358 ## chr1_762469_763020 0.000000000 0.0000000 0.00000000 0.000000000 0.009433962 ## MB_5360 MB_5361 MB_5364 MB_5366 MB_5381 ## chr1_762469_763020 NA 0.01562500 0.01827676 0.029069767 0.006578947 ## MB_5396 MB_5399 MB_5402 MB_5410 MB_5425 ## chr1_762469_763020 0.01142857 0.000000000 0.00000000 0.000000000 0.006410256 ## MB_5427 MB_5428 MB_5433 MB_5439 MB_5440 ## chr1_762469_763020 0.000000000 0.000000000 0.00000000 0.01003344 0.000000000 ## MB_5442 MB_5491 MB_5493 MB_5495 MB_5498 ## chr1_762469_763020 NA 0.00000000 0.01204819 0.031250000 0.000000000 ## MB_5513 MB_5519 MB_5530 MB_5533 MB_5543 ## chr1_762469_763020 0.002777778 0.02298851 0.02985075 0.00000000 0.000000000 ## MB_5558 MB_5559 MB_5563 MB_5567 MB_5580 ## chr1_762469_763020 0.000000000 0.038461538 0.009090909 0.00000000 0.00000000 ## MB_5582 MB_5584 MB_5588 MB_5592 MB_5593 ## chr1_762469_763020 0.005586592 0.00000000 0.00000000 0.00913242 0.014814815 ## MB_5596 MB_5603 MB_5605 MB_5614 MB_5620 ## chr1_762469_763020 0.01666667 0.01315789 0.04705882 0.01273885 0.011299435 ## MB_5634 MB_5640 MB_5641 MB_5642 MB_5646 ## chr1_762469_763020 0.009900990 0.01398601 0.007092199 0.01775148 0.016393443 ## MB_5651 MB_5656 MB_6007 MB_6008 MB_6010 ## chr1_762469_763020 0.000000000 0.009615385 0.000000000 0.00000000 0.000000000 ## MB_6011 MB_6012 MB_6018 MB_6019 MB_6023 ## chr1_762469_763020 0.02054795 0.000000000 0.03846154 0.008695652 0.010752688 ## MB_6024 MB_6025 MB_6026 MB_6030 MB_6036 ## chr1_762469_763020 0.013274336 0.00000000 0.014705882 0.019607843 0.036585366 ## MB_6039 MB_6042 MB_6044 MB_6046 MB_6047 ## chr1_762469_763020 0.006024096 0.02142857 0.000000000 0.02898551 0.00952381 ## MB_6048 MB_6049 MB_6050 MB_6052 MB_6053 ## chr1_762469_763020 0.00952381 NA 0.000000000 0.000000000 0.00000000 ## MB_6055 MB_6058 MB_6059 MB_6060 MB_6062 ## chr1_762469_763020 0.000000000 0.00000000 0.00000000 0.01818182 0.03007519 ## MB_6063 MB_6065 MB_6068 MB_6069 MB_6071 ## chr1_762469_763020 0.013245033 0.008426966 0.00000000 NA 0.02702703 ## MB_6075 MB_6077 MB_6079 MB_6080 MB_6082 ## chr1_762469_763020 0.00000000 0.00000000 0.009433962 0.005714286 0.01910828 ## MB_6083 MB_6085 MB_6090 MB_6092 MB_6097 ## chr1_762469_763020 0.006578947 0.01117318 0.01257862 0.000000000 0.016194332 ## MB_6098 MB_6100 MB_6101 MB_6103 MB_6105 ## chr1_762469_763020 0.00000000 0.00000000 0.009803922 0.008032129 0.00000000 ## MB_6107 MB_6108 MB_6113 MB_6114 MB_6116 ## chr1_762469_763020 0.000000000 0.028409091 0.000000000 0.00000000 0.01183432 ## MB_6118 MB_6122 MB_6124 MB_6125 MB_6131 ## chr1_762469_763020 0.011173184 0.00000000 0.005291005 0.018867925 0.016000000 ## MB_6133 MB_6135 MB_6138 MB_6141 MB_6143 ## chr1_762469_763020 0.01027397 0.000000000 0.000000000 0.007462687 0.016000000 ## MB_6144 MB_6145 MB_6146 MB_6147 MB_6149 ## chr1_762469_763020 0.009950249 0.004975124 0.000000000 0.006191950 0.00000000 ## MB_6150 MB_6152 MB_6154 MB_6156 MB_6157 ## chr1_762469_763020 0.01212121 0.04022989 0.00000000 0.00000000 0.00000000 ## MB_6160 MB_6163 MB_6164 MB_6167 MB_6168 ## chr1_762469_763020 0.02531646 0.01435407 0.007407407 0.01197605 0.019230769 ## MB_6169 MB_6171 MB_6178 MB_6179 MB_6181 ## chr1_762469_763020 0.009090909 0.01282051 0.013245033 0.005586592 0.007407407 ## MB_6184 MB_6185 MB_6187 MB_6188 MB_6192 ## chr1_762469_763020 0.00000000 0.00000000 0.00000000 0.000000000 0.03389831 ## MB_6194 MB_6195 MB_6201 MB_6204 MB_6207 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.030769231 0.019417476 ## MB_6208 MB_6211 MB_6212 MB_6213 MB_6214 ## chr1_762469_763020 0.00000000 0.00000000 0.000000000 0.000000000 0.00000000 ## MB_6218 MB_6223 MB_6224 MB_6225 MB_6226 ## chr1_762469_763020 0.000000000 0.03409091 0.000000000 0.024193548 0.01149425 ## MB_6228 MB_6229 MB_6230 MB_6231 MB_6232 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.000000000 0.04166667 ## MB_6233 MB_6234 MB_6237 MB_6238 MB_6239 ## chr1_762469_763020 0.00000000 0.000000000 NA 0.03378378 0.00000000 ## MB_6242 MB_6245 MB_6246 MB_6248 MB_6251 ## chr1_762469_763020 0.000000000 NA 0.004081633 0.00000000 0.01666667 ## MB_6253 MB_6254 MB_6256 MB_6257 MB_6259 ## chr1_762469_763020 0.02127660 0.010256410 0.000000000 0.000000000 0.00000000 ## MB_6261 MB_6263 MB_6269 MB_6271 MB_6272 ## chr1_762469_763020 0.000000000 0.015000000 0.00000000 0.00000000 0.000000000 ## MB_6274 MB_6275 MB_6281 MB_6283 MB_6284 ## chr1_762469_763020 0.000000000 0.000000000 0.01941748 0.025157233 0.009259259 ## MB_6286 MB_6287 MB_6288 MB_6289 MB_6291 ## chr1_762469_763020 NA 0.00000000 0.00000000 NA 0.020833333 ## MB_6293 MB_6294 MB_6297 MB_6300 MB_6302 ## chr1_762469_763020 0.069892473 0.026785714 0.030674847 0.000000000 0.000000000 ## MB_6305 MB_6306 MB_6308 MB_6312 MB_6314 ## chr1_762469_763020 0.000000000 0.000000000 0.00000000 0.057692308 0.000000000 ## MB_6317 MB_6318 MB_6319 MB_6322 MB_6328 ## chr1_762469_763020 0.000000000 NA 0.00000000 0.005649718 0.01574803 ## MB_6329 MB_6330 MB_6334 MB_6336 MB_6337 ## chr1_762469_763020 0.000000000 0.01481481 0.00000000 0.00000000 0.000000000 ## MB_6346 MB_6358 MB_6359 MB_6360 MB_6363 ## chr1_762469_763020 0.041666667 0.025000000 0.021276596 0.004484305 0.020833333 ## MB_7000 MB_7002 MB_7003 MB_7004 MB_7005 ## chr1_762469_763020 0.018181818 0.000000000 0.00000000 0.00877193 0.02112676 ## MB_7006 MB_7007 MB_7008 MB_7009 MB_7010 ## chr1_762469_763020 0.000000000 0.011764706 0.03030303 0.009900990 0.006172840 ## MB_7012 MB_7014 MB_7015 MB_7016 MB_7017 ## chr1_762469_763020 0.015037594 0.018867925 0.009708738 0.000000000 0.000000000 ## MB_7018 MB_7019 MB_7020 MB_7022 MB_7023 ## chr1_762469_763020 0.00000000 0.004716981 0.000000000 NA 0.000000000 ## MB_7026 MB_7028 MB_7029 MB_7030 MB_7031 ## chr1_762469_763020 0.01703578 0.027777778 0.000000000 0.000000000 0.000000000 ## MB_7032 MB_7034 MB_7035 MB_7036 MB_7037 ## chr1_762469_763020 0.034188034 0.00000000 0.000000000 0.000000000 0.000000000 ## MB_7038 MB_7039 MB_7040 MB_7041 MB_7043 ## chr1_762469_763020 0.000000000 0.010638298 0.02857143 0.00000000 0.000000000 ## MB_7046 MB_7048 MB_7049 MB_7050 MB_7051 ## chr1_762469_763020 0.000000000 0.006872852 0.010638298 0.005291005 0.02298851 ## MB_7052 MB_7053 MB_7054 MB_7055 MB_7056 ## chr1_762469_763020 0.03448276 0.006410256 0.000000000 0.006134969 0.009803922 ## MB_7057 MB_7058 MB_7060 MB_7061 MB_7062 ## chr1_762469_763020 0.01507538 0.036363636 0.00000000 0.000000000 0.02189781 ## MB_7065 MB_7066 MB_7067 MB_7068 MB_7070 ## chr1_762469_763020 0.010309278 0.04320988 0.00000000 0.01351351 0.000000000 ## MB_7071 MB_7072 MB_7073 MB_7074 MB_7075 ## chr1_762469_763020 0.008849558 0.000000000 0.016666667 0.008928571 0.01481481 ## MB_7076 MB_7077 MB_7078 MB_7079 MB_7080 ## chr1_762469_763020 0.006211180 0.006802721 0.000000000 0.000000000 0.011494253 ## MB_7083 MB_7084 MB_7085 MB_7086 MB_7087 ## chr1_762469_763020 0.000000000 0.000000000 0.006134969 0.00000000 0.000000000 ## MB_7088 MB_7089 MB_7090 MB_7091 MB_7092 ## chr1_762469_763020 0.01190476 0.04020101 0.000000000 0.026881720 0.012987013 ## MB_7093 MB_7095 MB_7096 MB_7097 MB_7099 ## chr1_762469_763020 0.007874016 0.025641026 0.000000000 0.000000000 0.00000000 ## MB_7100 MB_7102 MB_7104 MB_7107 MB_7109 ## chr1_762469_763020 0.000000000 0.000000000 0.006134969 0.00000000 0.000000000 ## MB_7113 MB_7115 MB_7116 MB_7118 MB_7119 ## chr1_762469_763020 0.010309278 0.000000000 NA 0.000000000 0.000000000 ## MB_7120 MB_7122 MB_7129 MB_7131 MB_7132 ## chr1_762469_763020 0.000000000 0.00000000 0.00000000 NA 0.00729927 ## MB_7137 MB_7138 MB_7141 MB_7142 MB_7144 ## chr1_762469_763020 0.02000000 0.03738318 0.000000000 0.028037383 0.02985075 ## MB_7145 MB_7151 MB_7153 MB_7154 MB_7157 ## chr1_762469_763020 0.021551724 0.00000000 0.00000000 0.010309278 0.000000000 ## MB_7158 MB_7159 MB_7160 MB_7161 MB_7162 ## chr1_762469_763020 0.02739726 0.00000000 0.012820513 0.01136364 0.000000000 ## MB_7164 MB_7167 MB_7170 MB_7171 MB_7172 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.01408451 NA ## MB_7173 MB_7174 MB_7182 MB_7186 MB_7187 ## chr1_762469_763020 NA 0.032085561 0.000000000 0.02898551 0.000000000 ## MB_7189 MB_7192 MB_7197 MB_7198 MB_7199 ## chr1_762469_763020 0.000000000 0.032967033 0.00000000 0.000000000 0.008064516 ## MB_7200 MB_7205 MB_7208 MB_7214 MB_7217 ## chr1_762469_763020 0.000000000 0.000000000 0.000000000 0.000000000 0.006410256 ## MB_7218 MB_7221 MB_7223 MB_7225 MB_7227 ## chr1_762469_763020 0.009523810 0.00000000 0.000000000 0.00000000 0.050000000 ## MB_7228 MB_7229 MB_7232 MB_7233 MB_7236 ## chr1_762469_763020 0.000000000 0.000000000 0.01351351 0.000000000 0.00000000 ## MB_7237 MB_7241 MB_7243 MB_7244 MB_7245 ## chr1_762469_763020 0.017857143 0.000000000 0.000000000 0.000000000 0.00000000 ## MB_7249 MB_7250 MB_7251 MB_7252 MB_7253 ## chr1_762469_763020 0.000000000 0.00000000 0.000000000 0.017937220 0.000000000 ## MB_7254 MB_7256 MB_7261 MB_7262 MB_7263 ## chr1_762469_763020 0.01149425 0.000000000 0.000000000 0.000000000 0.00000000 ## MB_7265 MB_7268 MB_7271 MB_7273 MB_7275 ## chr1_762469_763020 NA 0.000000000 0.000000000 0.00000000 0.00000000 ## MB_7278 MB_7279 MB_7281 MB_7283 MB_7285 ## chr1_762469_763020 0.00000000 0.000000000 0.00000000 0.01829268 NA ## MB_7288 MB_7289 MB_7291 MB_7292 MB_7293 ## chr1_762469_763020 0.000000000 0.000000000 0.00000000 0.00000000 0.006849315 ## MB_7296 MB_7298 ## chr1_762469_763020 NA 0.000000000 ## [ reached getOption(&quot;max.print&quot;) -- omitted 5 rows ] dim(all_mat_raw) ## [1] 201082 1782 4.4 Clustering of normalized methylation of ER+ tumors ER_positive_mat &lt;- all_norm_meth %&gt;% select(chrom:end, any_of(ER_positive_samples)) %&gt;% intervs_to_mat() ER_positive_mat_raw &lt;- all_mat_raw[, ER_positive_samples] Filter loci that have low methylation (average of under 0.1): means &lt;- rowMeans(all_mat_raw, na.rm=TRUE) means_ER_positive &lt;- rowMeans(ER_positive_mat_raw, na.rm=TRUE) meth_thresh &lt;- 0.1 options(repr.plot.width = 4, repr.plot.height = 4) tibble(m = means_ER_positive) %&gt;% ggplot(aes(x=m)) + geom_density() + geom_vline(xintercept=meth_thresh) + theme_bw() ER_positive_mat_s &lt;- ER_positive_mat[means_ER_positive &gt;= meth_thresh, ] nrow(ER_positive_mat_s) ## [1] 171026 We sample 50k loci and calculate a correlation matrix of their methylation values in ER+ samples: set.seed(17) ER_positive_mat_s &lt;- ER_positive_mat_s[sample(1:nrow(ER_positive_mat_s), 5e4), ] cm &lt;- tgs_cor(t(ER_positive_mat_s), pairwise.complete.obs=TRUE) %cache_rds% here(&quot;data/ER_positive_loci_cm_samp.rds&quot;) We remove rows and columns without at least one correlation value above 0.25: cm1 &lt;- cm diag(cm1) &lt;- NA cor_maxs &lt;- matrixStats::rowMaxs(abs(cm1), na.rm=TRUE) f &lt;- cor_maxs &gt;= 0.25 cm_f &lt;- cm[f, f] dim(cm_f) ## [1] 45299 45299 We cluster the correlation matrix using hclust: hc_meth &lt;- as.dist(1-cm_f) %&gt;% fastcluster::hclust(method = &quot;ward.D2&quot;) %cache_rds% here(&quot;data/ER_positive_loci_cm_hclust.rds&quot;) Reorder the dendrogram according to raw average methylation: hc_meth &lt;- vegan:::reorder.hclust(hc_meth, rowMeans(ER_positive_mat_raw[rownames(cm_f), ], na.rm=TRUE)) %cache_rds% here(&quot;data/ER_positive_loci_cm_hclust_reordered.rds&quot;) We start by cutting the the tree with a large number of clusters (14) which we will then aim to merge. k &lt;- 14 4.4.0.1 Extended Data Figure 4a options(repr.plot.width = 8, repr.plot.height = 8) plot_meth_mat_cm(cm_f, k=k, width = 1000, height = 1000, hc_meth=hc_meth, downscale = TRUE, zlim = c(-0.3, 0.3), colors = c(&quot;black&quot;, &quot;darkred&quot;, &quot;white&quot;, &quot;darkblue&quot;, &quot;cyan&quot;)) ## downscaling matrix ## downscale k: 22 ## plotting We can see that there is a large group of correlated loci at the top right (9-14), another group in the middle (5), and another one at the bottom left (1-2). In addition, we have another 2 small clusters (3 and 7) which are anti-correlated to each other. The other clusters (4,6,8) look weak in their intra correalation. We term the first large group &quot;clock&quot;, the second &quot;ML&quot; and the last &quot;MG&quot; due to reasons that would be disscused at clock and Epigenomic-instability notebooks. ct &lt;- cutree_order(hc_meth, k=k) ct_new &lt;- case_when( ct %in% 9:14 ~ &quot;clock&quot;, ct == 5 ~ &quot;ML&quot;, ct %in% 1:2 ~ &quot;MG&quot;, ct == 3 ~ &quot;other1&quot;, ct == 7 ~ &quot;other2&quot;, TRUE ~ &quot;no_cor&quot;) names(ct_new) &lt;- names(ct) clust_df &lt;- as.matrix(ct_new) %&gt;% mat_to_intervs() %&gt;% rename(clust = V1) %cache_df% here(&quot;data/ER_positive_loci_clust.tsv&quot;) %&gt;% as_tibble() clust_df %&gt;% count(clust) ## # A tibble: 6 x 2 ## clust n ## 1 clock 21657 ## 2 MG 4102 ## 3 ML 2448 ## 4 no_cor 13120 ## 5 other1 821 ## 6 other2 3151 We will generate a score for each tumor based on the mean methylation of each group: feats_mat &lt;- tgs_matrix_tapply(all_norm_meth %&gt;% intervs_to_mat() %&gt;% .[names(ct_new), ] %&gt;% t(), ct_new, mean, na.rm=TRUE) %&gt;% t() We add the TME features for comparison: tme_df &lt;- fread(here(&quot;data/TME_features.tsv&quot;)) %&gt;% as_tibble() feats_mat &lt;- cbind(feats_mat, tme_df %&gt;% select(samp, caf, immune, caf.meth, immune.meth) %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;samp&quot;)) feats_df &lt;- feats_mat %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% select(-other1, -other2, -no_cor) %&gt;% left_join(samp_data %&gt;% select(samp, ER=ER1), by = &quot;samp&quot;) %&gt;% select(samp, ER, everything()) %cache_df% here(&quot;data/epigenomic_features.tsv&quot;) %&gt;% as_tibble() head(feats_df) ## # A tibble: 6 x 9 ## samp ER clock MG ML caf immune ## 1 MB_0006 ER+ 0.020284548 -0.09092389 -0.006315781 -0.2441946 -0.1114837 ## 2 MB_0028 ER+ 0.134212088 -0.02794677 -0.011634957 -1.7266095 -0.9358944 ## 3 MB_0046 ER+ 0.017717551 0.01210391 -0.103759329 -0.6545081 -1.0023582 ## 4 MB_0050 ER+ 0.003517646 -0.05415309 -0.046344401 1.7038169 0.1281640 ## 5 MB_0053 ER+ -0.029721111 0.01603443 0.075428738 -0.8152407 0.2103729 ## 6 MB_0054 ER+ 0.067999324 0.04493482 -0.001099083 -0.5608747 0.9292829 ## caf.meth immune.meth ## 1 0.2950609 0.4722494 ## 2 0.4851022 0.6191494 ## 3 0.4210078 0.6308352 ## 4 0.2336145 0.4808316 ## 5 0.4603347 0.5915159 ## 6 0.4790603 0.6093489 We save the the cluster association of each locus: loci_clust &lt;- as.matrix(ct_new) %&gt;% mat_to_intervs() %&gt;% rename(clust = V1) %cache_df% here(&quot;data/ER_positive_loci_clust_df.tsv&quot;) %&gt;% as_tibble() For the 3 large meta-clusters (clock, MG, ML) we calcualte the raw (before TME normalization) average methylation in each sample: loci_f &lt;- loci_clust %&gt;% filter(clust %in% c(&quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;)) %&gt;% intervs_to_mat() feats_mat_raw &lt;- tgs_matrix_tapply(all_mat_raw[rownames(loci_f), ] %&gt;% t(), loci_f[, 1], mean, na.rm=TRUE) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) feats_df_raw &lt;- tme_df %&gt;% left_join(feats_mat_raw, by = &quot;samp&quot;) %&gt;% add_ER() %&gt;% select(samp, ER, everything()) %fcache_df% here(&quot;data/epigenomic_features_raw_meth.tsv&quot;) %&gt;% as_tibble() head(feats_df_raw) ## # A tibble: 6 x 9 ## samp ER caf immune caf.meth immune.meth clock MG ## 1 MB_0006 ER+ -0.2441946 -0.1114837 0.2950609 0.4722494 0.7843678 0.2557624 ## 2 MB_0028 ER+ -1.7266095 -0.9358944 0.4851022 0.6191494 0.8746526 0.3684660 ## 3 MB_0046 ER+ -0.6545081 -1.0023582 0.4210078 0.6308352 0.7931583 0.3512826 ## 4 MB_0050 ER+ 1.7038169 0.1281640 0.2336145 0.4808316 0.8128158 0.1990629 ## 5 MB_0053 ER+ -0.8152407 0.2103729 0.4603347 0.5915159 0.7309033 0.3691415 ## 6 MB_0054 ER+ -0.5608747 0.9292829 0.4790603 0.6093489 0.8237875 0.3819997 ## ML ## 1 0.7020038 ## 2 0.7049314 ## 3 0.5910172 ## 4 0.6801434 ## 5 0.7798542 ## 6 0.6909709 4.5 Project clustering on ER- correlation matrix ER_negative_mat &lt;- all_norm_meth %&gt;% select(chrom:end, any_of(ER_negative_samples)) %&gt;% intervs_to_mat() ER_negative_mat_f &lt;- ER_negative_mat[rownames(cm_f), ] dim(ER_negative_mat_f) ## [1] 45299 310 cm_f_neg &lt;- tgs_cor(t(ER_negative_mat_f), pairwise.complete.obs=TRUE) %cache_rds% here(&quot;data/ER_negative_loci_cm_samp.rds&quot;) 4.5.0.1 Extended Data Figure 4b options(repr.plot.width = 8, repr.plot.height = 8) plot_meth_mat_cm(cm_f_neg, k=k, width = 1000, height = 1000, hc_meth=hc_meth, downscale = TRUE, zlim = c(-0.3, 0.3), colors = c(&quot;black&quot;, &quot;darkred&quot;, &quot;white&quot;, &quot;darkblue&quot;, &quot;cyan&quot;)) ## downscaling matrix ## downscale k: 22 ## plotting We can see that the clock, MG and ML are preserved also in ER- tumors. 4.6 Classify loci in the genome to epigenomic features See Loss-clock and Epignomic-instability notebooks for further characterization of the epigenomic scores. We would now continue to look at the broad genomic picture and try to classify loci in the genome based on their correlation with the scores. # calculate the correlation between normalized methylation and the epigenomic features epi_features_loci_cors &lt;- function(all_norm_meth, feats_df, samples){ samples &lt;- intersect(samples, feats_df$samp) samples &lt;- intersect(samples, colnames(all_norm_meth)[-(1:3)]) mat &lt;- all_norm_meth %&gt;% select(chrom:end, any_of(samples)) %&gt;% intervs_to_mat() feats_mat &lt;- feats_df %&gt;% select(-ER) %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;samp&quot;) %&gt;% as.matrix() loci_cors &lt;- tgs_cor(t(mat[, samples]), feats_mat[samples, ], pairwise.complete.obs = TRUE) loci_cors &lt;- loci_cors %&gt;% mat_to_intervs() return(loci_cors) } loci_cors &lt;- bind_rows( epi_features_loci_cors(all_norm_meth, feats_df, ER_positive_samples) %&gt;% mutate(ER = &quot;ER+&quot;), epi_features_loci_cors(all_norm_meth, feats_df, ER_negative_samples) %&gt;% mutate(ER = &quot;ER-&quot;), epi_features_loci_cors(all_norm_meth, feats_df, normal_samples) %&gt;% mutate(ER = &quot;normal&quot;) ) %&gt;% select(chrom:end, ER, everything()) %fcache_df% here(&quot;data/features_loci_cors.tsv&quot;) %&gt;% as_tibble() Looking at all the correaltions we see that there are loci who are not correlated to any of the featurers: options(repr.plot.width = 7, repr.plot.height = 7) loci_cors %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=MG, y=ML, color=clock)) + geom_point(size=0.0001) + theme_bw() + theme(aspect.ratio=1) + scale_color_viridis_c() loci_cors %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=ML, y=clock, color=MG)) + geom_point(size=0.0001) + theme_bw() + theme(aspect.ratio=1) + scale_color_viridis_c() We use PCA (pricinpal component analysis) on the features for visualization of the feature space loci_cors %&gt;% distinct(chrom, start, end) %&gt;% nrow() ## [1] 201082 pca &lt;- loci_cors %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% select(-ER, -immune, -caf) %&gt;% intervs_to_mat() %&gt;% t() %&gt;% prcomp() df &lt;- pca$rotation %&gt;% mat_to_intervs() %&gt;% left_join(loci_cors %&gt;% filter(ER == &quot;ER+&quot;), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) %&gt;% as_tibble() 4.6.0.1 Figure 2a options(repr.plot.width = 15, repr.plot.height = 5) remove_axis &lt;- function(x) theme( aspect.ratio = 1, strip.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks = element_blank(), axis.text = element_blank() ) point_size = 1e-10 viridis_opt &lt;- &quot;E&quot; limits &lt;- c(-0.25, 0.8) p_clock_proj &lt;- df %&gt;% ggplot(aes(x=PC1, y=PC2, color=clock)) + geom_point(size=point_size) + remove_axis() + scale_color_viridis_c(option = viridis_opt, limits = limits) p_MG_proj &lt;- df %&gt;% ggplot(aes(x=PC1, y=PC2, color=MG)) + geom_point(size=point_size) + remove_axis() + scale_color_viridis_c(option = viridis_opt, limits = limits) p_ML_proj &lt;- df %&gt;% ggplot(aes(x=PC1, y=PC2, color=ML)) + geom_point(size=point_size) + remove_axis() + scale_color_viridis_c(option = viridis_opt, limits = limits) p_immune_proj &lt;- df %&gt;% ggplot(aes(x=PC1, y=PC2, color=immune)) + geom_point(size=point_size) + remove_axis() + scale_color_viridis_c(option = viridis_opt, limits = limits) p_caf_proj &lt;- df %&gt;% ggplot(aes(x=PC1, y=PC2, color=caf)) + geom_point(size=point_size) + remove_axis() + scale_color_viridis_c(option = viridis_opt, limits = limits) (p_clock_proj + p_MG_proj + p_ML_proj) (p_immune_proj + p_caf_proj + plot_spacer()) 4.7 Average methylation of the features We will now move to look at the average methylation distribution of the scores. We will do that computing the average methylation (in ER+/ER-/normal) of loci that are highly correlated to them (above 0.6 for clock and above 0.5 for MG and ML). loci_annot &lt;- loci_cors %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% select(-ER) %&gt;% left_join(get_loci_annot(), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) %cache_df% here(&quot;data/loci_annot_epigenomic_features.tsv&quot;) %&gt;% as_tibble() head(loci_annot) ## # A tibble: 6 x 18 ## chrom start end clock MG ML caf ## 1 chr1 762469 763020 0.001575984 -0.01428874 -0.01551105 0.012110476 ## 2 chr1 762676 763227 -0.129625330 0.33612856 0.03607766 -0.006588455 ## 3 chr1 860619 861170 -0.050509334 0.29208240 0.14625292 -0.008582681 ## 4 chr1 895465 896016 0.068537024 0.34194079 0.04775239 0.007077953 ## 5 chr1 901375 901926 0.092230378 0.05256030 0.07306855 0.004076673 ## 6 chr1 948345 948896 0.019768875 0.02448860 0.03588616 -0.003594507 ## immune caf.meth immune.meth cg_cont tor tss_d k27me3 ## 1 -0.0038356268 -0.01015590 0.01583110 0.10130379 64.78630 158 0.9678000 ## 2 -0.0051811514 0.27247376 0.13967267 0.12012641 64.80790 -48 0.9832893 ## 3 0.0122705825 0.21490060 0.09494949 0.12763213 74.13830 -226 0.9983592 ## 4 0.0037199954 0.25625416 0.17188417 0.09146498 78.45700 -226 0.9882345 ## 5 0.0119557122 0.01421310 -0.01829405 0.05323296 79.12555 -226 0.9923163 ## 6 0.0001512059 0.01424724 0.02610006 0.03862698 82.83044 -226 0.8459000 ## k4me1_luminal k4me1_myo1 k4me1_myo2 k4me1_hmec ## 1 0.5759000 0.8639 0.6325000 0.8790000 ## 2 0.5759000 0.8639 0.7695000 0.8871000 ## 3 0.9742000 0.9781 0.9804800 0.9547000 ## 4 0.9742000 0.9603 0.9639000 0.9397000 ## 5 0.9995784 0.9781 0.9962854 0.9994769 ## 6 0.9940496 0.9704 0.9578000 0.9647000 See exons-TME notebook for the generation of this file. loci_annot_exons &lt;- fread(here(&quot;data/exon_annot_epigenomic_features.tsv&quot;)) %&gt;% as_tibble() 4.8 Plot distribution over samples of the correlated loci We calculate the average methylation of each sample in loci that pass the threshold of every score: df_MG &lt;- colMeans(all_mat_raw[loci_annot %&gt;% filter(MG &gt;= 0.5) %&gt;% intervs_to_mat() %&gt;% rownames(), ], na.rm=TRUE) %&gt;% enframe(&quot;samp&quot;, &quot;MG&quot;) df_ML &lt;- colMeans(all_mat_raw[loci_annot %&gt;% filter(ML &gt;= 0.5) %&gt;% intervs_to_mat() %&gt;% rownames(), ], na.rm=TRUE) %&gt;% enframe(&quot;samp&quot;, &quot;ML&quot;) df_clock &lt;- colMeans(all_mat_raw[loci_annot %&gt;% filter(clock &gt;= 0.5) %&gt;% intervs_to_mat() %&gt;% rownames(), ], na.rm=TRUE) %&gt;% enframe(&quot;samp&quot;, &quot;clock&quot;) df_sum &lt;- df_clock %&gt;% left_join(df_MG, by = &quot;samp&quot;) %&gt;% left_join(df_ML, by = &quot;samp&quot;) %&gt;% add_ER() %&gt;% filter(!is.na(ER)) We can now plot the distribution of scores over samples: 4.8.0.1 Figure 1i options(repr.plot.width = 4, repr.plot.height = 4) p_avg_clock &lt;- df_sum %&gt;% ggplot(aes(x=clock, color=ER)) + geom_density() + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + ylab(&quot;Density&quot;) + xlab(&quot;Clock avg. methylation&quot;) + coord_cartesian(xlim=c(0.25, 1)) p_avg_clock + theme_bw() + theme(aspect.ratio = 0.9) 4.8.0.2 Figure 2b options(repr.plot.width = 4, repr.plot.height = 4) p_avg_MG &lt;- df_sum %&gt;% ggplot(aes(x=MG, color=ER)) + geom_density() + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + ylab(&quot;Density&quot;) + xlab(&quot;MG avg. methylation&quot;) + coord_cartesian(xlim=c(0, 0.6)) p_avg_MG + theme_bw() + theme(aspect.ratio = 0.9) options(repr.plot.width = 4, repr.plot.height = 4) p_avg_ML &lt;- df_sum %&gt;% ggplot(aes(x=ML, color=ER)) + geom_density() + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + ylab(&quot;Density&quot;) + xlab(&quot;ML avg. methylation&quot;) + coord_cartesian(xlim=c(0.4, 1)) p_avg_ML + theme_bw() + theme(aspect.ratio = 0.9) Calculate p-values: df_sum %&gt;% gather(&quot;feat&quot;, &quot;meth&quot;, -samp, -ER) %&gt;% group_by(feat) %&gt;% summarise( p_pos_norm = ks.test(meth[ER == &quot;ER+&quot;], meth[ER == &quot;normal&quot;])$p.value, p_neg_norm = ks.test(meth[ER == &quot;ER-&quot;], meth[ER == &quot;normal&quot;])$p.value) ## # A tibble: 3 x 3 ## feat p_pos_norm p_neg_norm ## 1 clock 0 0 ## 2 MG 0 0 ## 3 ML 0 0 4.9 Plot loci classification Next, we classify loci to &quot;Promoters&quot;, &quot;Enhancers&quot; or &quot;Background&quot; (non promoter/enhancer), and stratify by CpG content. df_loci_class &lt;- loci_annot %&gt;% left_join(promoter_intervs %&gt;% distinct(chrom, start, end) %&gt;% mutate(type = &quot;Promoters&quot;), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) k4me1_names &lt;- grep(&quot;k4me1&quot;, colnames(loci_annot), value=TRUE) df_loci_class &lt;- df_loci_class %&gt;% mutate(type = case_when( type == &quot;Promoters&quot; ~ &quot;Promoters&quot;, matrixStats::rowAnys((df_loci_class[, k4me1_names] &gt; 0.97), na.rm = TRUE) ~ &quot;Enhancers&quot;, TRUE ~ &quot;Background&quot; ) ) %&gt;% bind_rows(loci_annot_exons %&gt;% mutate(type = &quot;Exons&quot;)) %&gt;% mutate(cg_cont = cut(cg_cont, c(0,0.04,0.08,1), include.lowest=TRUE, labels=c(&quot;Low&quot;, &quot;Mid&quot;, &quot;High&quot;))) %&gt;% as_tibble() df_loci_layer &lt;- df_loci_class %&gt;% left_join(get_all_summary_meth(), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) %&gt;% mutate(normal_type = cut(normal, breaks = c(0, 0.2, 0.9, 1), labels = c(&quot;0-0.2&quot;, &quot;0.2-0.9&quot;, &quot;0.9-1&quot;), include.lowest=TRUE)) cor_thresh &lt;- 0.25 df_loci_layer &lt;- df_loci_layer %&gt;% mutate(layer = case_when(clock &gt;= cor_thresh ~ &quot;clock&quot;, MG &gt;= cor_thresh ~ &quot;MG&quot;, ML &gt;= cor_thresh ~ &quot;ML&quot;, TRUE ~ &quot;other&quot;), layer = factor(layer, levels = c(&quot;other&quot;, &quot;clock&quot;, &quot;ML&quot;, &quot;MG&quot;))) df_loci_layer %&gt;% count(type, layer) %&gt;% as.data.frame() ## type layer n ## 1 Background other 54248 ## 2 Background clock 74369 ## 3 Background ML 11758 ## 4 Background MG 7044 ## 5 Enhancers other 16628 ## 6 Enhancers clock 5642 ## 7 Enhancers ML 5299 ## 8 Enhancers MG 10401 ## 9 Exons other 17923 ## 10 Exons clock 5146 ## 11 Exons ML 1944 ## 12 Exons MG 4499 ## 13 Promoters other 11539 ## 14 Promoters clock 780 ## 15 Promoters ML 379 ## 16 Promoters MG 2995 df_loci_layer %&gt;% filter(type == &quot;Enhancers&quot;, cg_cont %in% c(&quot;Mid&quot;, &quot;High&quot;)) %&gt;% count(layer) %&gt;% mutate(p = n / sum(n)) %&gt;% as.data.frame() ## layer n p ## 1 other 7076 0.41197019 ## 2 clock 1260 0.07335817 ## 3 ML 1117 0.06503260 ## 4 MG 7723 0.44963903 df_loci_layer %&gt;% filter(type == &quot;Enhancers&quot;) %&gt;% count(normal_type, layer) %&gt;% group_by(normal_type) %&gt;% mutate(p = n / sum(n)) %&gt;% as.data.frame() ## normal_type layer n p ## 1 0-0.2 other 7141 0.471228718 ## 2 0-0.2 clock 573 0.037811799 ## 3 0-0.2 ML 184 0.012142009 ## 4 0-0.2 MG 7256 0.478817474 ## 5 0.2-0.9 other 7208 0.393965894 ## 6 0.2-0.9 clock 3933 0.214965020 ## 7 0.2-0.9 ML 4021 0.219774814 ## 8 0.2-0.9 MG 3134 0.171294272 ## 9 0.9-1 other 2279 0.504203540 ## 10 0.9-1 clock 1136 0.251327434 ## 11 0.9-1 ML 1094 0.242035398 ## 12 0.9-1 MG 11 0.002433628 4.9.0.1 Figure 2c options(repr.plot.width = 4, repr.plot.height = 6) df &lt;- df_loci_layer %&gt;% filter(type == &quot;Enhancers&quot;) %&gt;% count(normal_type, layer) %&gt;% group_by(normal_type) %&gt;% mutate(p = n / sum(n)) p_enh_layer_perc &lt;- df %&gt;% filter(layer != &quot;other&quot;) %&gt;% ggplot(aes(x=normal_type, y=p, fill=layer)) + geom_col() + scale_fill_manual(name = &quot;&quot;, values = c(&quot;ML&quot; = &quot;darkblue&quot;, &quot;MG&quot; = &quot;darkred&quot;, &quot;clock&quot; = &quot;darkgreen&quot;)) + scale_y_continuous(limits = c(0,1), labels=scales::percent) + vertical_labs() + xlab(&quot;Methylation in normal&quot;) + ylab(&quot;% of enhancers&quot;) p_enh_layer_perc + theme_bw() + vertical_labs() 4.9.0.2 Extended Data Figure 6c options(repr.plot.width = 10, repr.plot.height = 10) df &lt;- df_loci_class %&gt;% filter(!is.na(cg_cont)) %&gt;% mutate(cg_cont = case_when(cg_cont == &quot;Low&quot; ~ &quot;Low&quot;, cg_cont %in% c(&quot;Mid&quot;, &quot;High&quot;) ~ &quot;Mid/High&quot;)) %&gt;% mutate( cg_cont = paste(cg_cont, &quot;CpG cont.&quot;), cg_cont = factor(cg_cont, levels=c(&quot;Low CpG cont.&quot;, &quot;Mid/High CpG cont.&quot;)), type = factor(type, levels=c(&quot;Promoters&quot;, &quot;Enhancers&quot;, &quot;Background&quot;, &quot;Exons&quot;))) %&gt;% select(chrom, start, end, type, cg_cont, clock, MG, ML) %&gt;% gather(&quot;class&quot;, &quot;cor&quot;, -(chrom:end), -cg_cont, -type) p_cor_density &lt;- df %&gt;% ggplot(aes(x=cor, color=class)) + geom_density(size=0.5) + scale_color_manual(name = &quot;&quot;, values = c(&quot;ML&quot; = &quot;darkblue&quot;, &quot;MG&quot; = &quot;darkred&quot;, &quot;clock&quot; = &quot;darkgreen&quot;)) + guides(color=FALSE) + ylab(&quot;Density&quot;) + xlab(&quot;Correlation to epigenomic score&quot;) + facet_grid(type~cg_cont, scales=&quot;free_y&quot;) + theme(aspect.ratio=0.5) + geom_vline(xintercept = cor_thresh, linetype = &quot;dashed&quot;, color=&quot;darkgray&quot;) + geom_text(data = df %&gt;% count(type, cg_cont) %&gt;% mutate(label = paste0(&quot;n=&quot;, scales::comma(n))), inherit.aes = FALSE, aes(label=label), x = 0.5, y = 4) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_cor_density + theme_bw() + theme(aspect.ratio=0.7) 4.10 Project all epigenomic features using UMAP set.seed(17) raw_feats &lt;- fread(here(&quot;data/epigenomic_features_raw_meth.tsv&quot;)) um &lt;- raw_feats %&gt;% mutate(ML = -ML, clock = -clock, immune.meth = -immune.meth, caf.meth = -caf.meth) %&gt;% mutate(caf = caf / 20, immune = immune / 20) %&gt;% select(caf, immune, clock, MG, ML) %&gt;% as.matrix() %&gt;% umap::umap() mut_df &lt;- fread(here(&quot;data/mutations.tsv&quot;)) %&gt;% as_tibble() p53_df &lt;- mut_df %&gt;% left_join(samp_data %&gt;% select(samp, ER = ER1), by = &quot;samp&quot;) %&gt;% filter(gene == &quot;TP53&quot;) %&gt;% mutate(p53= forcats::fct_recode(mutation, &quot;WT&quot; = &quot;NO MUT&quot;, &quot;TP53+&quot; = &quot;MUT+&quot;, &quot;TP53-&quot; = &quot;MUT-&quot;)) %&gt;% select(samp, p53) ## Warning: Unknown levels in `f`: MUT+ pik3ca_df &lt;- mut_df %&gt;% left_join(samp_data %&gt;% select(samp, ER = ER1), by = &quot;samp&quot;) %&gt;% filter(gene == &quot;PIK3CA&quot;) %&gt;% mutate(pik3ca = forcats::fct_recode(mutation, &quot;WT&quot; = &quot;NO MUT&quot;, &quot;PIK3CA+&quot; = &quot;MUT+&quot;, &quot;PIK3CA-&quot; = &quot;MUT-&quot;)) %&gt;% select(samp, pik3ca) feats_proj &lt;- raw_feats %&gt;% mutate(ML = -ML, clock = -clock, immune.meth = -immune.meth, caf.meth = -caf.meth) %&gt;% mutate(x = um$layout[, 1], y = um$layout[, 2]) %&gt;% left_join(samp_data %&gt;% select(samp, iC10, stage, grade, PAM50, gi = giScore_width, MathScore, epi_burden = log10_global_epm), by = &quot;samp&quot;) %&gt;% mutate(iC10 = factor(iC10, levels = names(annot_colors$iC10))) %&gt;% mutate(stage = factor(stage, levels = names(annot_colors$stage))) %&gt;% mutate(grade = factor(grade, levels = names(annot_colors$grade))) %&gt;% mutate(PAM50 = factor(PAM50, levels = names(annot_colors$PAM50))) %&gt;% left_join(p53_df, by = &quot;samp&quot;) %&gt;% mutate(p53 = forcats::fct_explicit_na(p53)) %&gt;% left_join(pik3ca_df, by = &quot;samp&quot;) %&gt;% mutate(pik3ca = forcats::fct_explicit_na(pik3ca)) %&gt;% mutate(grade = ifelse(ER == &quot;normal&quot;, &quot;ADJNORMAL&quot;, grade)) %&gt;% mutate(stage = ifelse(ER == &quot;normal&quot;, &quot;ADJNORMAL&quot;, stage)) 4.10.0.1 Figure 4a. options(repr.plot.width = 20, repr.plot.height = 4) plotlist &lt;- list() plotlist$ER &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = ER)) + scale_color_manual(values = annot_colors$ER1) plotlist$iC10 &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = iC10)) + scale_color_manual(values = annot_colors$iC10) plotlist$PAM50 &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = PAM50)) + scale_color_manual(values = annot_colors$PAM50) plotlist$grade &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = grade)) + scale_color_manual(values = annot_colors$grade) plotlist$stage &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = stage)) + scale_color_manual(values = annot_colors$stage) for (feat in c(&quot;immune&quot;, &quot;caf&quot;, &quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;, &quot;gi&quot;, &quot;MathScore&quot;, &quot;epi_burden&quot;)) { df &lt;- feats_proj df[[feat]] &lt;- clip_vals(df[[feat]], quantile(df[[feat]], 0.05, na.rm = TRUE), quantile(df[[feat]], 0.95, na.rm = TRUE)) plotlist[[feat]] &lt;- df %&gt;% ggplot(aes_string(x = &quot;x&quot;, y = &quot;y&quot;, color = feat)) + scale_colour_distiller(palette = &quot;RdYlBu&quot;) } plotlist$p53 &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = p53)) + scale_color_manual(values = c(&quot;TP53+&quot; = &quot;darkred&quot;, &quot;TP53-&quot; = &quot;darkred&quot;, &quot;WT&quot; = &quot;darkgray&quot;, &quot;(Missing)&quot; = &quot;darkgray&quot;)) plotlist$pik3ca &lt;- feats_proj %&gt;% ggplot(aes(x = x, y = y, color = pik3ca)) + scale_color_manual(values = c(&quot;PIK3CA-&quot; = &quot;darkred&quot;, &quot;PIK3CA+&quot; = &quot;darkblue&quot;, &quot;WT&quot; = &quot;darkgray&quot;, &quot;(Missing)&quot; = &quot;darkgray&quot;)) plotlist1 &lt;- map(plotlist, ~ .x + xlab(&quot;&quot;) + ylab(&quot;&quot;) + theme( aspect.ratio = 1, strip.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks = element_blank(), axis.text = element_blank() )) p &lt;- plot_grid(plotlist = map(plotlist1, ~ .x + geom_point(size = 0.8))) plots_ppt1 &lt;- map2( plotlist[c(&quot;immune&quot;, &quot;caf&quot;, &quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;)], c(&quot;Immune&quot;, &quot;CAF&quot;, &quot;Clock&quot;, &quot;MG&quot;, &quot;ML&quot;), ~ .x + geom_point(size = 0.05) + guides(color = &quot;none&quot;) + ggtitle(.y) ) plots_ppt2 &lt;- map2( plotlist[c(&quot;ER&quot;, &quot;grade&quot;, &quot;stage&quot;, &quot;pik3ca&quot;, &quot;p53&quot;)], c(&quot;ER&quot;, &quot;Grade&quot;, &quot;Stage&quot;, &quot;PIK3CA&quot;, &quot;TP53&quot;), ~ .x + geom_point(size = 0.05) + guides(color = &quot;none&quot;) + ggtitle(.y) ) plot_grid(plotlist = map(plots_ppt1, ~ .x + theme_bw() + theme(aspect.ratio = 1, strip.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks = element_blank(), axis.text = element_blank()) + xlab(&quot;&quot;) + ylab(&quot;&quot;) + geom_point(size = 0.8)), nrow=1) plot_grid(plotlist = map(plots_ppt2, ~ .x + theme_bw() + theme(aspect.ratio = 1, strip.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.ticks = element_blank(), axis.text = element_blank()) + xlab(&quot;&quot;) + ylab(&quot;&quot;) + geom_point(size = 0.8)), nrow=1) 4.11 Compare epigenomic scores to clinical annotations all_feats &lt;- fread(here(&quot;data/epigenomic_features.tsv&quot;)) %&gt;% mutate(ML = -ML, clock = -clock, immune.meth = -immune.meth, caf.meth = -caf.meth) %&gt;% as_tibble() feats_tidy &lt;- all_feats %&gt;% select(-caf, -immune) %&gt;% rename(caf = caf.meth, immune = immune.meth) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) 4.11.0.1 Figure 4c, Extended Data Figure 10b options(repr.plot.width = 7, repr.plot.height = 10) p_mut &lt;- plot_score_feats_boxp(samp_data %&gt;% select(samp, clin_feat = MathScore), &quot;Mutational load (MATH score) &quot;, feats_tidy, nbins = 5) p_gi &lt;- plot_score_feats_boxp(samp_data %&gt;% select(samp, clin_feat = giScore_width), &quot;Chromosomal Instability (CIN)&quot;, feats_tidy, nbins = 5) p_mut + p_gi ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. p.values feats_tidy %&gt;% left_join(samp_data %&gt;% select(samp, clin_feat = MathScore)) %&gt;% group_by(ER, feat) %&gt;% na.omit() %&gt;% do({broom::tidy(cor.test(.$score, .$clin_feat, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;))}) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% filter(p.value &lt; 0.05) %&gt;% arrange(p.value) %&gt;% mutate(signif = case_when(p.value &lt; 0.0001 ~ &quot;****&quot;, p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;)) ## Joining, by = &quot;samp&quot; ## Warning in cor.test.default(.$score, .$clin_feat, method = &quot;spearman&quot;, use = ## &quot;pairwise.complete.obs&quot;): Cannot compute exact p-value with ties ## Warning in cor.test.default(.$score, .$clin_feat, method = &quot;spearman&quot;, use = ## &quot;pairwise.complete.obs&quot;): Cannot compute exact p-value with ties ## Warning in cor.test.default(.$score, .$clin_feat, method = &quot;spearman&quot;, use = ## &quot;pairwise.complete.obs&quot;): Cannot compute exact p-value with ties ## Warning in cor.test.default(.$score, .$clin_feat, method = &quot;spearman&quot;, use = ## &quot;pairwise.complete.obs&quot;): Cannot compute exact p-value with ties ## Warning in cor.test.default(.$score, .$clin_feat, method = &quot;spearman&quot;, use = ## &quot;pairwise.complete.obs&quot;): Cannot compute exact p-value with ties ## # A tibble: 5 x 8 ## # groups: ER, feat ## ER feat estimate statistic p.value method ## 1 ER+ caf -0.1344037 203009259 0.00001594158 Spearman&#39;s rank correlation rho ## 2 ER+ MG 0.1246595 156648143 0.00006338479 Spearman&#39;s rank correlation rho ## 3 ER+ ML 0.1224722 157039572 0.00008525637 Spearman&#39;s rank correlation rho ## 4 ER- caf -0.2064473 3657784 0.00077389932 Spearman&#39;s rank correlation rho ## 5 ER- immune -0.1645390 3530724 0.00755496383 Spearman&#39;s rank correlation rho ## alternative signif ## 1 two.sided **** ## 2 two.sided **** ## 3 two.sided **** ## 4 two.sided *** ## 5 two.sided ** feats_tidy %&gt;% left_join(samp_data %&gt;% select(samp, clin_feat = giScore_width)) %&gt;% group_by(ER, feat) %&gt;% na.omit() %&gt;% do({broom::tidy(cor.test(.$score, .$clin_feat, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;))}) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% filter(p.value &lt; 0.05) %&gt;% arrange(p.value) %&gt;% mutate(signif = case_when(p.value &lt; 0.0001 ~ &quot;****&quot;, p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;)) ## Joining, by = &quot;samp&quot; ## # A tibble: 7 x 8 ## # groups: ER, feat ## ER feat estimate statistic p.value method ## 1 ER+ caf -0.2858945 238304890 7.387265e-21 Spearman&#39;s rank correlation rho ## 2 ER+ ML 0.2837975 132728278 1.497974e-20 Spearman&#39;s rank correlation rho ## 3 ER+ MG 0.2689927 135471936 1.636804e-18 Spearman&#39;s rank correlation rho ## 4 ER- caf -0.2551031 3805302 3.005832e-05 Spearman&#39;s rank correlation rho ## 5 ER- ML 0.1784401 2490858 3.734964e-03 Spearman&#39;s rank correlation rho ## 6 ER- MG -0.1256257 3412744 4.183906e-02 Spearman&#39;s rank correlation rho ## alternative signif ## 1 two.sided **** ## 2 two.sided **** ## 3 two.sided **** ## 4 two.sided **** ## 5 two.sided ** ## 6 two.sided * ## # ... with 1 more rows feats_tidy %&gt;% left_join(samp_data %&gt;% select(samp, clin_feat = giScore_width), by = &quot;samp&quot;) %&gt;% count(ER, feat) ## # A tibble: 15 x 3 ## ER feat n ## 1 ER- caf 310 ## 2 ER- clock 310 ## 3 ER- immune 310 ## 4 ER- MG 310 ## 5 ER- ML 310 ## 6 ER+ caf 1108 ## # ... with 9 more rows 4.12 Distribution of the scores in iC10 integrative clusters feats_tidy &lt;- all_feats %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -samp, -ER) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;))) df_iC10 &lt;- samp_data %&gt;% select(samp, iC10) %&gt;% mutate(iC10 = factor(iC10, levels = names(annot_colors$iC10))) %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) %&gt;% filter(ER != &quot;normal&quot;, !is.na(feat)) df_iC10_count &lt;- df_iC10 %&gt;% group_by(feat) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:5 / 5, na.rm = TRUE), include.lowest = TRUE, labels = as.character(1:5))) %&gt;% count(iC10, feat, score) %&gt;% group_by(feat, score) %&gt;% mutate(p = n / sum(n)) 4.12.0.1 Extended Data Figure 10a options(repr.plot.width = 5, repr.plot.height = 10) p_iC10_count &lt;- df_iC10_count %&gt;% mutate(feat = factor(feat, levels = c(&quot;caf&quot;, &quot;immune&quot;, &quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;))) %&gt;% filter(!is.na(feat)) %&gt;% ggplot(aes(fill = iC10, y = p, x = score, label = n)) + geom_col(width = 1, color = &quot;black&quot;) + scale_fill_manual(values = annot_colors$iC10) + geom_text(family = &quot;Arial&quot;, size = 1, position = position_stack(vjust = 0.5)) + guides(color = &quot;none&quot;) + facet_grid(feat ~ .) + ylab(&quot;% of samples&quot;) + xlab(&quot;Score&quot;) + scale_y_continuous(labels = scales::percent) + theme(aspect.ratio = 0.6, axis.text.x = element_blank(), axis.ticks.x = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), panel.border = element_blank()) p_iC10_count p_ic10 &lt;- df_iC10 %&gt;% ggplot(aes(x = iC10, y = score, fill = iC10)) + geom_hline(yintercept = 0, color = &quot;darkgray&quot;) + geom_boxplot(lwd = 0.2, outlier.size = 0.2) + scale_fill_manual(values = annot_colors$iC10, guide = &quot;none&quot;) + facet_grid(feat ~ ., scales = &quot;free_y&quot;) + ylab(&quot;&quot;) + xlab(&quot;iC10&quot;) + theme(aspect.ratio = 0.5) p_ic10 4.13 Epipolymorphism of the epigenomic layers loci_epi_mean &lt;- fread(here(&quot;data/loci_epipoly_mean.tsv&quot;)) %&gt;% as_tibble() gvtrack.create(&quot;d_exon&quot;, &quot;intervs.global.exon&quot;, &quot;distance&quot;) gvtrack.create(&quot;d_intron&quot;, &quot;intervs.global.introns&quot;, &quot;distance&quot;) gvtrack.create(&quot;d_promoter&quot;, promoter_intervs, &quot;distance&quot;) loci_annot &lt;- gextract.left_join(c(&quot;d_promoter&quot;, &quot;d_exon&quot;, &quot;d_intron&quot;), intervals = loci_annot %&gt;% distinct(chrom, start, end), iterator = loci_annot %&gt;% distinct(chrom, start, end)) %&gt;% as_tibble() %&gt;% right_join(loci_annot, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) loci_annot &lt;- loci_annot %&gt;% mutate(type = case_when( d_promoter == 0 ~ &quot;promoter&quot;, d_exon == 0 ~ &quot;exon&quot;, d_intron == 0 ~ &quot;intron&quot;, TRUE ~ &quot;inter-genic&quot; )) plot_epipoly_strip &lt;- function(df, df_bg, ER, k=15){ p_bg &lt;- df_bg %&gt;% filter(ER == !!ER) %&gt;% arrange(pat_meth) %&gt;% filter(!is.na(epipoly)) %&gt;% group_by(type) %&gt;% mutate(med = zoo::rollmedian(epipoly, k = k, na.pad = TRUE)) %&gt;% ggplot(aes(x = pat_meth, y = epipoly)) + geom_point(size = 0.001, color=&quot;gray&quot;, alpha=0.5) + geom_line(inherit.aes = FALSE, data = tibble(m = seq(0, 1, by = 0.001)) %&gt;% mutate(epipoly = 2 * m * (1 - m)), linetype = &quot;dashed&quot;, aes(x = m, y = epipoly)) + geom_line(inherit.aes = FALSE, data = tibble(m = seq(0, 1, by = 0.001)) %&gt;% mutate(epipoly = 1 - ((1 - 2 * m + 2 * m * m)^5)), linetype = &quot;dashed&quot;, aes(x = m, y = epipoly)) + xlab(&quot;Avg. methylation&quot;) + ylab(&quot;Epi-polymorphism&quot;) df &lt;- df %&gt;% filter(ER == !!ER) %&gt;% arrange(pat_meth) %&gt;% filter(!is.na(epipoly)) %&gt;% group_by(type) %&gt;% mutate(med = zoo::rollmedian(epipoly, k = k, na.pad = TRUE)) p &lt;- p_bg + geom_point(data = df, size = 0.001, color=&quot;darkred&quot;, alpha=0.5) + geom_line(inherit.aes = FALSE, aes(x = pat_meth, y = med), lwd = 0.6) + geom_line(data = df, inherit.aes = FALSE, aes(x = pat_meth, y = med), color = &quot;red&quot;, lwd = 0.6) + theme(aspect.ratio = 1) p + facet_grid(.~type) } 4.13.0.1 Extended Data Figure 7a options(repr.plot.width = 15, repr.plot.height = 5) df &lt;- loci_epi_mean %&gt;% inner_join(loci_annot %&gt;% filter(MG &gt;= 0.5)) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) df_bg &lt;- loci_epi_mean %&gt;% anti_join(loci_annot %&gt;% filter(MG &gt;= 0.5)) %&gt;% left_join(loci_annot) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) p_epipoly_MG &lt;- plot_epipoly_strip(df, df_bg, &quot;ER+&quot;, k=101) + ggtitle(&quot;MG&quot;) p_epipoly_MG ## Warning: Removed 100 row(s) containing missing values (geom_path). ## Warning: Removed 100 row(s) containing missing values (geom_path). options(repr.plot.width = 15, repr.plot.height = 5) df &lt;- loci_epi_mean %&gt;% inner_join(loci_annot %&gt;% filter(ML &gt;= 0.5)) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) df_bg &lt;- loci_epi_mean %&gt;% anti_join(loci_annot %&gt;% filter(ML &gt;= 0.5)) %&gt;% left_join(loci_annot) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) p_epipoly_ML &lt;- plot_epipoly_strip(df, df_bg, &quot;ER+&quot;, k=101) + ggtitle(&quot;ML&quot;) p_epipoly_ML ## Warning: Removed 100 row(s) containing missing values (geom_path). ## Warning: Removed 109 row(s) containing missing values (geom_path). 4.14 Comparison of the epigenomic scores with existing epigenomic age metrics 4.14.1 phenoAge Compare the epigenomic scores with phenoAge score from Steve Horvath's lab (PMID: 29676998) cpg_450k &lt;- gintervals.load(&quot;intervs.450k_27k.cpgs&quot;) %&gt;% as_tibble() pheno_age &lt;- fread(here(&quot;data/phenoAge.tsv&quot;)) %&gt;% select(id = CpG) %&gt;% left_join(cpg_450k, by = &quot;id&quot;) %&gt;% slice(-1) %&gt;% select(chrom, start, end, id) %&gt;% as_tibble() pheno_age_mb &lt;- fread(here(&quot;data/pheno_age_score.tsv&quot;)) %&gt;% as_tibble() Unfortunately, the METABRIC data doesn't cover all of phenoAge CpGs, but we have sufficient CpGs for correlating with the epigenomic scores: options(repr.plot.width = 7, repr.plot.height = 7) n_cpgs_pheno &lt;- colSums(!is.na(pheno_age_mb %&gt;% intervs_to_mat())) %&gt;% enframe(&quot;samp&quot;, &quot;n_cpgs&quot;) n_cpgs_pheno %&gt;% ggplot(aes(x=n_cpgs, y = 1-..y..)) + stat_ecdf() + xlab(&quot;# of CpGs&quot;) + ylab(&quot;Fraction of samples&quot;) + theme_bw() + theme(aspect.ratio = 1) options(repr.plot.width = 7, repr.plot.height = 7) n_samples_pheno &lt;- rowSums(!is.na(pheno_age_mb %&gt;% intervs_to_mat())) %&gt;% enframe(&quot;cpg&quot;, &quot;n_samples&quot;) n_samples_pheno %&gt;% ggplot(aes(x=n_samples, y = 1-..y..)) + stat_ecdf() + xlab(&quot;# of samples&quot;) + ylab(&quot;fraction of CpGs&quot;) + theme_bw() + theme(aspect.ratio = 1) + scale_x_log10() ## Warning: Transformation introduced infinite values in continuous x-axis ## Warning: Removed 324 rows containing non-finite values (stat_ecdf). pheno_age_df &lt;- pheno_age_mb %&gt;% intervs_to_mat() %&gt;% colMeans(na.rm = TRUE) %&gt;% enframe(&quot;samp&quot;, &quot;pheno_age_score&quot;) %&gt;% left_join(n_cpgs_pheno) %&gt;% filter(n_cpgs &gt;= 50) ## Joining, by = &quot;samp&quot; options(repr.plot.width = 15, repr.plot.height = 8) df &lt;- all_feats %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, clock:immune.meth) %&gt;% left_join(pheno_age_df) ## Joining, by = &quot;samp&quot; p_pheno_age &lt;- df %&gt;% ggplot(aes(x=score, y=pheno_age_score, color=ER)) + geom_point(size=0.5) + facet_grid(ER~feat, scales=&quot;free&quot;) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) p_pheno_age + theme_bw() + theme(aspect.ratio=1) ## Warning: Removed 5649 rows containing missing values (geom_point). df %&gt;% group_by(feat) %&gt;% summarise(cor = cor(pheno_age_score, score, use=&quot;pairwise.complete.obs&quot;)) %&gt;% arrange(cor) %&gt;% as.data.frame() ## feat cor ## 1 caf.meth -0.45571500 ## 2 ML -0.28793733 ## 3 immune.meth -0.24872108 ## 4 caf -0.18080950 ## 5 clock -0.06886096 ## 6 immune 0.10135506 ## 7 MG 0.56060188 4.14.1.1 Ext Data Figure 5e options(repr.plot.width = 15, repr.plot.height = 5) p_pheno_age_clock &lt;- df %&gt;% filter(feat == &quot;clock&quot;) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;))) %&gt;% ggplot(aes(x=score, y=pheno_age_score, color=ER)) + geom_point(size=0.1) + facet_grid(.~ER) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + ylab(&quot;PhenoAge&quot;) + xlab(&quot;Clock&quot;) p_pheno_age_clock + theme_bw() + theme(aspect.ratio=1) ## Warning: Removed 807 rows containing missing values (geom_point). 4.14.1.2 Ext Data Figure 5f options(repr.plot.width = 15, repr.plot.height = 5) df &lt;- pheno_age_df %&gt;% left_join(samp_data %&gt;% select(samp, age)) %&gt;% add_ER() ## Joining, by = &quot;samp&quot; df %&gt;% summarise(cor = cor(age, pheno_age_score, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)) ## # A tibble: 1 x 1 ## cor ## 1 0.06263803 p_age_pheno &lt;- df %&gt;% filter(!is.na(ER)) %&gt;% ggplot(aes(x=age, y=pheno_age_score, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + facet_grid(.~ER) + xlab(&quot;Biological age&quot;) + ylab(&quot;phenoAge&quot;) p_age_pheno + theme_bw() + theme(aspect.ratio = 1) ## Warning: Removed 33 rows containing missing values (geom_point). feats_mat &lt;- all_feats %&gt;% select(-ER) %&gt;% column_to_rownames(&quot;samp&quot;) %&gt;% as.matrix() pheno_mat &lt;- intervs_to_mat(pheno_age_mb) samples &lt;- intersect(colnames(pheno_mat), rownames(feats_mat)) cor_pheno &lt;- tgs_cor(feats_mat[samples, ], t(pheno_mat[, samples]), pairwise.complete.obs=TRUE) %&gt;% t() %&gt;% mat_to_intervs() %&gt;% as_tibble() 4.14.1.3 Ext Data Figure 5d options(repr.plot.width = 4, repr.plot.height = 4) cor_thresh &lt;- 0.25 cor_pheno &lt;- cor_pheno %&gt;% mutate(type = case_when(clock &gt;= cor_thresh ~ &quot;clock&quot;, MG &gt;= cor_thresh ~ &quot;MG&quot;, ML &gt;= cor_thresh ~ &quot;ML&quot;, is.na(MG) | is.na(ML) | is.na(clock) ~ &quot;missing&quot;, TRUE ~ &quot;other&quot;)) p_pheno_cpgs &lt;- cor_pheno %&gt;% count(type) %&gt;% ggplot(aes(x=reorder(type, n), y=n)) + geom_col() + xlab(&quot;CpG type&quot;) + ylab(&quot;phenoAge CpGs&quot;) + vertical_labs() p_pheno_cpgs gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 5190360 277.2 13921326 743.5 13921326 743.5 ## Vcells 10668643577 81395.3 15420004920 117645.4 13689732018 104444.4 "],["loss-clock.html", "5 Loss clock 5.1 Introduction 5.2 Initialize 5.3 Plot methylation distribution of the clock 5.4 Annotate &quot;clock&quot; score 5.5 Plot chromosomal traces of clock score 5.6 Correlation of gene expression to clock 5.7 Plot score in different TOR regimes 5.8 Plot High-Low clock tumors vs TOR 5.9 Plot correlation of loci to clock methylation 5.10 Plot distribution of methylation of clock in normal samples 5.11 Compare clock layer to biological age", " 5 Loss clock 5.1 Introduction We continue to characterize the highly correlated group of CpGs (see Epigenomic-scores notebook) we termed loss clock. 5.2 Initialize source(here::here(&quot;scripts/init.R&quot;)) 5.3 Plot methylation distribution of the clock df_sum &lt;- fread(here(&quot;data/epigenomic_features_raw_meth.tsv&quot;)) %&gt;% filter(!is.na(ER)) %&gt;% as_tibble() 5.3.0.1 Figure 1i options(repr.plot.width = 4, repr.plot.height = 4) p_avg_clock &lt;- df_sum %&gt;% ggplot(aes(x=clock, color=ER)) + geom_density() + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + ylab(&quot;Density&quot;) + xlab(&quot;Clock avg. methylation&quot;) + coord_cartesian(xlim=c(0.4, 1)) p_avg_clock + theme_bw() + theme(aspect.ratio = 0.9) ks.test(df_sum[df_sum$ER == &quot;ER+&quot;, ]$clock, df_sum[df_sum$ER == &quot;normal&quot;, ]$clock) ## ## Two-sample Kolmogorov-Smirnov test ## ## data: df_sum[df_sum$ER == &quot;ER+&quot;, ]$clock and df_sum[df_sum$ER == &quot;normal&quot;, ]$clock ## D = 0.73803, p-value &lt; 2.2e-16 ## alternative hypothesis: two-sided ks.test(df_sum[df_sum$ER == &quot;ER-&quot;, ]$clock, df_sum[df_sum$ER == &quot;normal&quot;, ]$clock) ## ## Two-sample Kolmogorov-Smirnov test ## ## data: df_sum[df_sum$ER == &quot;ER-&quot;, ]$clock and df_sum[df_sum$ER == &quot;normal&quot;, ]$clock ## D = 0.68317, p-value &lt; 2.2e-16 ## alternative hypothesis: two-sided 5.4 Annotate &quot;clock&quot; score 5.4.1 Loci annotation loci_annot &lt;- fread(here(&quot;data/loci_annot_epigenomic_features.tsv&quot;)) %&gt;% as_tibble() cor_thresh &lt;- 0.6 5.4.1.1 Figure 1k options(repr.plot.width = 4, repr.plot.height = 4) p_tss_d &lt;- loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% ggplot(aes(x=abs(tss_d), color=type, linetype = type)) + geom_density() + xlab(&quot;Distance from TSS&quot;) + ylab(&quot;Density&quot;) + scale_color_manual(name = &quot;&quot;, values=c(clock = &quot;red&quot;, other = &quot;gray&quot;)) + scale_x_log10(label=scales::scientific) + scale_linetype_manual(name = &quot;&quot;, values=c(clock = &quot;solid&quot;, other = &quot;dashed&quot;)) + theme(aspect.ratio = 0.8) p_tss_d + theme_bw() + theme(aspect.ratio = 0.8) ## Warning: Transformation introduced infinite values in continuous x-axis ## Warning: Removed 21 rows containing non-finite values (stat_density). loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% summarise(pval = ks.test(abs(tss_d)[type == &quot;clock&quot;], abs(tss_d)[type == &quot;other&quot;])$p.value) ## Warning in ks.test(abs(tss_d)[type == &quot;clock&quot;], abs(tss_d)[type == &quot;other&quot;]): p- ## value will be approximate in the presence of ties ## # A tibble: 1 x 1 ## pval ## 1 0 5.4.1.2 Figure 1l options(repr.plot.width = 4, repr.plot.height = 4) p_tor &lt;- loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% ggplot(aes(x=-tor, color=type, linetype = type)) + geom_density() + xlab(&quot;Time of replication&quot;) + ylab(&quot;Density&quot;) + scale_color_manual(name = &quot;&quot;, values=c(clock = &quot;red&quot;, other = &quot;gray&quot;)) + scale_x_continuous(breaks = c(-80, 0), labels = c(&quot;Early&quot;, &quot;Late&quot;)) + scale_linetype_manual(name = &quot;&quot;, values=c(clock = &quot;solid&quot;, other = &quot;dashed&quot;)) + theme(aspect.ratio = 0.8) p_tor + theme_bw() + theme(aspect.ratio = 0.8) ## Warning: Removed 28 rows containing non-finite values (stat_density). loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% summarise(pval = ks.test(-tor[type == &quot;clock&quot;], -tor[type == &quot;other&quot;])$p.value) ## Warning in ks.test(-tor[type == &quot;clock&quot;], -tor[type == &quot;other&quot;]): p-value will ## be approximate in the presence of ties ## # A tibble: 1 x 1 ## pval ## 1 0 5.4.1.3 Extended Data Figure 4d options(repr.plot.width = 4, repr.plot.height = 4) p_cg_cont_d &lt;- loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% ggplot(aes(x=cg_cont, color=type, linetype = type)) + geom_density() + xlab(&quot;CpG content (500bp)&quot;) + ylab(&quot;Density&quot;) + scale_color_manual(name = &quot;&quot;, values=c(clock = &quot;red&quot;, other = &quot;gray&quot;)) + scale_linetype_manual(name = &quot;&quot;, values=c(clock = &quot;solid&quot;, other = &quot;dashed&quot;)) + theme(aspect.ratio = 0.8) p_cg_cont_d + theme_bw() + theme(aspect.ratio = 0.8) ## Warning: Removed 8 rows containing non-finite values (stat_density). loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% summarise(pval = ks.test(cg_cont[type == &quot;clock&quot;], cg_cont[type == &quot;other&quot;])$p.value) ## Warning in ks.test(cg_cont[type == &quot;clock&quot;], cg_cont[type == &quot;other&quot;]): p-value ## will be approximate in the presence of ties ## # A tibble: 1 x 1 ## pval ## 1 0 5.4.1.4 Extended Data Figure 4c options(repr.plot.width = 4, repr.plot.height = 4) k4me1_names &lt;- grep(&quot;k4me1&quot;, colnames(loci_annot)) clock_loci_annot &lt;- loci_annot %&gt;% mutate(type = ifelse(clock &gt;= cor_thresh, &quot;clock&quot;, &quot;other&quot;)) %&gt;% mutate( enh = matrixStats::rowAnys((loci_annot[, k4me1_names] &gt; 0.97), na.rm = TRUE), polycomb = k27me3 &gt; 0.97 ) %&gt;% mutate(context = case_when(polycomb ~ &quot;K27me3 peaks&quot;, enh ~ &quot;K4me1 peaks&quot;, TRUE ~ &quot;Background&quot;)) p_enh_polycomb &lt;- clock_loci_annot %&gt;% count(type, context) %&gt;% group_by(type) %&gt;% mutate(frac = n / sum(n)) %&gt;% ggplot(aes(x = context, y = frac, fill = type)) + geom_col(position = &quot;dodge&quot;) + scale_fill_manual(&quot;&quot;, values = c(other = &quot;gray&quot;, clock = &quot;red&quot;)) + scale_y_continuous(label = function(x) scales::percent(x, accuracy = 1)) + ylab(&quot;Percent of sites&quot;) + xlab(&quot;&quot;) + guides(fill = FALSE) + vertical_labs() + theme(aspect.ratio = 0.8) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_enh_polycomb + theme_bw() + theme(aspect.ratio = 0.8) chisq.test(clock_loci_annot$type, clock_loci_annot$context) ## ## Pearson&#39;s Chi-squared test ## ## data: clock_loci_annot$type and clock_loci_annot$context ## X-squared = 4794, df = 2, p-value &lt; 2.2e-16 5.4.2 Clinical annotation feats &lt;- fread(here(&quot;data/epigenomic_features.tsv&quot;)) %&gt;% mutate(ML = -ML, clock = -clock, immune.meth = -immune.meth, caf.meth = -caf.meth) %&gt;% as_tibble() nbins &lt;- 5 df &lt;- feats %&gt;% mutate( clock = cut(clock, quantile(clock, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins)) %&gt;% left_join(samp_data %&gt;% select(samp, stage, grade), by = &quot;samp&quot;) %&gt;% mutate(stage = ifelse(stage %in% c(0, &quot;DCIS&quot;, 1), &quot;0-1&quot;, stage)) %&gt;% mutate(stage = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, stage)) %&gt;% mutate(grade = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, grade)) df_pval &lt;- df %&gt;% filter(ER %in% c(&quot;ER+&quot;, &quot;ER-&quot;)) %&gt;% gather(&quot;feat&quot;, &quot;bin&quot;, -samp, -ER, -stage, -grade) %&gt;% filter(feat == &quot;clock&quot;) %&gt;% group_by(ER, feat) %&gt;% summarise(grade_pval = chisq.test(bin, grade)$p.value, stage_pval = chisq.test(bin, stage)$p.value) ## Warning: attributes are not identical across measure variables; ## they will be dropped ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect as.data.frame(df_pval) ## ER feat grade_pval stage_pval ## 1 ER- clock 0.6348596 0.07094066 ## 2 ER+ clock 0.1471181 0.57227178 df_pval %&gt;% filter(grade_pval &lt;= 0.05) ## # A tibble: 0 x 4 ## # groups: ER ## [1] ER feat grade_pval stage_pval ## &lt;0 rows&gt; (or 0-length row.names) df_pval %&gt;% filter(stage_pval &lt;= 0.05) ## # A tibble: 0 x 4 ## # groups: ER ## [1] ER feat grade_pval stage_pval ## &lt;0 rows&gt; (or 0-length row.names) options(repr.plot.width = 6, repr.plot.height = 4) p_stage_clock &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% filter(!is.na(stage)) %&gt;% count(stage, clock) %&gt;% group_by(clock) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=clock, y=p, fill=stage)) + geom_col() + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_stage_clock + theme_bw() 5.4.2.1 Figure 1j options(repr.plot.width = 6, repr.plot.height = 4) p_grade_clock_positive &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, clock) %&gt;% group_by(clock) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=clock, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_clock_negative &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, clock) %&gt;% group_by(clock) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=clock, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_clock_positive + theme_bw() p_grade_clock_negative + theme_bw() 5.5 Plot chromosomal traces of clock score We separate the samples to tumors with high and low clock score (top and bottom 30%). We then look at average methylation in bins of 10K along the chromosome. We smooth the methylation traces with rolling average of 50 bins. 5.5.0.1 Figure 1m options(repr.plot.width = 14, repr.plot.height = 5) p_trace &lt;- plot_tor_clock_chrom_track(&quot;chr1&quot;, &quot;ER+&quot;, iterator=1e4) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## Warning: Removed 147 row(s) containing missing values (geom_path). p_trace$p + coord_cartesian(ylim = c(0.25, 0.77)) ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. 5.5.0.2 Extended Data Figure 4f options(repr.plot.width = 14, repr.plot.height = 5) p_trace_chr10 &lt;- plot_tor_clock_chrom_track(&quot;chr10&quot;, &quot;ER+&quot;, iterator=1e4) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## Warning: Removed 147 row(s) containing missing values (geom_path). p_trace_chr10$p + coord_cartesian(ylim = c(0.1, 0.77)) ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. 5.6 Correlation of gene expression to clock We calculate the correlation of all the genes to the clock score. feat_gene_cors &lt;- get_expression_features_cors() 5.6.0.1 Extended Data Figure 5a options(repr.plot.width = 4, repr.plot.height = 7) top_genes &lt;- feat_gene_cors %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% arrange(-clock) %&gt;% slice(1:25) p_top_genes &lt;- top_genes %&gt;% ggplot(aes(x = reorder(name, clock), y = clock, fill = ER)) + geom_col() + scale_fill_manual(&quot;&quot;, values = annot_colors$ER1) + guides(fill = &quot;none&quot;) + ylim(0, 0.5) + xlab(&quot;&quot;) + ylab(&quot;ER+&quot;) + coord_flip() + ggtitle(&quot;Correlation of\\nexpression with\\nclock score&quot;) + theme(plot.title = element_text(hjust = 0.5)) p_top_genes + theme_bw() + theme(plot.title = element_text(hjust = 0.5)) 5.6.0.2 Extended Data Figure 5b gene_feat_df &lt;- get_gene_features_df(c(&quot;MAGEC2&quot;, &quot;PAGE5&quot;)) %&gt;% filter(!is.na(clock)) options(repr.plot.width = 7, repr.plot.height = 4) p_mage_page &lt;- gene_feat_df %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% ggplot(aes(x=clock, y=expr, color=ER)) + geom_point(size=0.2) + xlab(&quot;Clock&quot;) + scale_color_manual(values=annot_colors$ER1) + ylab(&quot;Gene expression&quot;) + facet_wrap(ER~name, scales=&quot;free_y&quot;, nrow=1) + theme(aspect.ratio = 1) + guides(color=&quot;none&quot;) p_mage_page + theme_bw() + theme(aspect.ratio = 1) 5.7 Plot score in different TOR regimes all_mat_raw &lt;- get_all_meth() %&gt;% intervs_to_mat() tor_strata &lt;- loci_annot %&gt;% mutate(tor_strata = cut(tor, breaks = main_config$genomic_regions$tor_low_mid_high, labels=c(&quot;late&quot;, &quot;intermediate&quot;, &quot;early&quot;))) %&gt;% pull(tor_strata) %&gt;% forcats::fct_explicit_na() samp_meth_tor &lt;- tgs_matrix_tapply(t(all_mat_raw), tor_strata, mean, na.rm=TRUE) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% add_ER() %cache_df% here(&quot;data/samp_meth_tor.tsv&quot;) %&gt;% as_tibble() 5.7.0.1 Extended Data Figure 4e options(repr.plot.width = 9, repr.plot.height = 4) p_early_late &lt;- samp_meth_tor %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x=early, y=late, color=ER)) + geom_abline(linetype = &quot;dashed&quot;) + geom_point(size=0.1) + xlim(0.1, 0.9) + ylim(0.1, 0.9) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio = 1) p_mid_early &lt;- samp_meth_tor %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x=early, y=intermediate, color=ER)) + geom_abline(linetype = &quot;dashed&quot;) + geom_point(size=0.1) + xlim(0.1, 0.9) + ylim(0.1, 0.9) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio = 1) samp_meth_tor %&gt;% filter(ER != &quot;normal&quot;) %&gt;% summarise(cor_early_late = cor(early, late, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;), cor_early_mid = cor(early, intermediate, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)) ## # A tibble: 1 x 2 ## cor_early_late cor_early_mid ## 1 0.5723737 0.7680809 (p_early_late + theme_bw() + theme(aspect.ratio = 1) ) + (p_mid_early + theme_bw() + theme(aspect.ratio = 1) ) 5.8 Plot High-Low clock tumors vs TOR 5.8.0.1 Extended Data Figure 4g options(repr.plot.width = 4, repr.plot.height = 4) df &lt;- get_tor_clock_chrom_trace(&quot;chr1&quot;, &quot;ER+&quot;, 1e5) %&gt;% filter(high_loss_n &gt;= 50, low_loss_n &gt;= 50) %&gt;% filter(!is.na(tor), !is.na(high_loss), !is.na(low_loss)) cor(-df$tor, df$high_loss - df$low_loss, method = &quot;spearman&quot;) ## [1] -0.6187326 p_tor_high_low &lt;- df %&gt;% ggplot(aes(x = -tor, y = high_loss - low_loss)) + geom_point(size=0.05, alpha=0.5) + theme(aspect.ratio = 1) + ylim(-0.4, 0.025) + xlab(&quot;Time of replication\\n(Early -&gt; Late)&quot;) + ylab(&quot;High Clock - Low Clock&quot;) p_tor_high_low + theme_bw() + theme(aspect.ratio = 1) 5.9 Plot correlation of loci to clock methylation 5.9.0.1 Extended Data Figure 4h options(repr.plot.width = 8, repr.plot.height = 4) p_loci_cor &lt;- loci_annot %&gt;% left_join(get_all_summary_meth()) %&gt;% mutate(normal_meth = cut(normal, c(0,0.3,0.7,1), include.lowest=TRUE)) %&gt;% ggplot(aes(x=clock)) + geom_density() + facet_grid(.~normal_meth) + ylab(&quot;Density&quot;) + xlab(&quot;Correlation of loci to clock methylation&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) p_loci_cor + theme_bw() 5.10 Plot distribution of methylation of clock in normal samples normal_mat &lt;- get_all_meth() %&gt;% select(chrom:end, any_of(normal_samples)) %&gt;% intervs_to_mat() loci_annot_f &lt;- loci_annot %&gt;% filter(cg_cont &lt;= 0.02) %&gt;% mutate(tor = cut(tor, breaks=main_config$genomic_regions$tor_low_mid_high, labels=c(&quot;late&quot;, &quot;mid&quot;, &quot;early&quot;), include.lowest=TRUE)) %&gt;% mutate(tor = forcats::fct_explicit_na(tor)) %&gt;% intervs_to_mat() normal_clock &lt;- tgs_matrix_tapply(t(normal_mat[rownames(loci_annot_f), ]), loci_annot_f[, &quot;tor&quot;], mean, na.rm=TRUE) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% as_tibble() nrow(loci_annot_f) ## [1] 36420 5.10.0.1 Extended Data Figure 5b options(repr.plot.width = 4, repr.plot.height = 4) df &lt;- normal_clock %&gt;% gather(&quot;tor&quot;, &quot;meth&quot;, -samp) %&gt;% mutate(tor = factor(tor, levels = c(&quot;early&quot;, &quot;mid&quot;, &quot;late&quot;))) %&gt;% filter(!is.na(tor)) %&gt;% mutate(ER = &quot;normal&quot;) p_clock_normal &lt;- df %&gt;% ggplot(aes(x = tor, y = meth, fill = ER)) + geom_boxplot(outlier.size=0.1, lwd = 0.5) + scale_fill_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + guides(fill = FALSE) + xlab(&quot;Time of replication&quot;) + vertical_labs() + ylab(&quot;Methylation in normal samples\\n(CpG content &lt;= 2%)&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_clock_normal + theme_bw() + theme(aspect.ratio = 1) 5.11 Compare clock layer to biological age 5.11.0.1 Extended Data Figure 5c options(repr.plot.width = 12, repr.plot.height = 4) df &lt;- feats %&gt;% left_join(samp_data %&gt;% select(samp, age)) ## Joining, by = &quot;samp&quot; df %&gt;% summarise(cor = cor(age, clock, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)) ## # A tibble: 1 x 1 ## cor ## 1 0.06042711 p_age &lt;- df %&gt;% ggplot(aes(x=age, y=clock, color=ER)) + geom_point(size=0.5) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;Biological age&quot;) + ylab(&quot;Clock&quot;) + facet_grid(.~ER) p_age + theme_bw() + theme(aspect.ratio = 1) ## Warning: Removed 30 rows containing missing values (geom_point). gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4907303 262.1 8028385 428.8 8028385 428.8 ## Vcells 834169869 6364.3 1673781729 12770.0 1576695863 12029.3 "],["epigenomic-instability.html", "6 Epigenomic instability 6.1 Compare features to each other 6.2 Annotate epignomic instability scores 6.3 Cross correlation (methylation-expression) of epigenomic instability loci 6.4 Epigenomic instability in different Time of replication (TOR) regimes", " 6 Epigenomic instability source(here::here(&quot;scripts/init.R&quot;)) 6.1 Compare features to each other 6.1 We change the direction (sign) of the clock and ML in order for it to be aligned with MG score, i.e. more progressed always equals higher score. This is implemented also in get_all_features() function. feats_df_fixed &lt;- fread(here(&quot;data/epigenomic_features.tsv&quot;)) %&gt;% mutate(ML = -ML, clock = -clock) %&gt;% as_tibble() 6.1.0.1 Figure 2E options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = -0.166831861226654 p_MG_ML_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=MG, y=ML, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;ML epigenomic instability&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = -0.382303128930548 p_MG_ML_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=MG, y=ML, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;ML epigenomic instability&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_MG_ML_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_MG_ML_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) 6.1.0.2 Extended Data Figure 6A options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$clock[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = -0.162654292782067 p_MG_clock_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=MG, y=clock, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;Clock&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$clock[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = -0.28563668716636 p_MG_clock_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=MG, y=clock, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;Clock&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_MG_clock_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_MG_clock_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$clock[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = 0.353548126048103 p_ML_clock_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=ML, y=clock, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;Clock&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$clock[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = 0.64775559075671 p_ML_clock_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=ML, y=clock, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;Clock&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_ML_clock_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_ML_clock_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) 6.1.0.3 Extended Data Figure 6B options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$immune[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = 0.0256502058498626 p_MG_immune_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=MG, y=immune, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;immune&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$immune[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = -0.0505710341049502 p_MG_immune_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=MG, y=immune, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;immune&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_MG_immune_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_MG_immune_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$immune[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = 0.0182424884995677 p_ML_immune_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=ML, y=immune, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;immune&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$immune[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = -0.0483692724136299 p_ML_immune_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=ML, y=immune, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;immune&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_ML_immune_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_ML_immune_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$caf[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = 0.0201120969323973 p_MG_caf_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=MG, y=caf, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;caf&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$MG[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$caf[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = -0.00276791172007093 p_MG_caf_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=MG, y=caf, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;MG epigenomic instability&quot;) + ylab(&quot;caf&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_MG_caf_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_MG_caf_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) options(repr.plot.width = 8, repr.plot.height = 4) rho_pos &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER+&quot;], feats_df_fixed$caf[feats_df_fixed$ER == &quot;ER+&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER+ = {rho_pos}&quot;)) ## rho ER+ = 0.0336682666159654 p_ML_caf_scatter_ER_positive &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% ggplot(aes(x=ML, y=caf, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;caf&quot;) + guides(color=FALSE) + ggtitle(&quot;ER+&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. rho_neg &lt;- cor(feats_df_fixed$ML[feats_df_fixed$ER == &quot;ER-&quot;], feats_df_fixed$caf[feats_df_fixed$ER == &quot;ER-&quot;], use=&quot;pairwise.complete.obs&quot;, method=&quot;spearman&quot;) message(glue(&quot;rho ER- = {rho_neg}&quot;)) ## rho ER- = 0.0020186843607852 p_ML_caf_scatter_ER_negative &lt;- feats_df_fixed %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% ggplot(aes(x=ML, y=caf, color=ER)) + geom_point(size=0.1) + scale_color_manual(values = annot_colors$ER1) + theme(aspect.ratio = 1) + xlab(&quot;ML epigenomic instability&quot;) + ylab(&quot;caf&quot;) + guides(color=FALSE) + ggtitle(&quot;ER-&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. (p_ML_caf_scatter_ER_positive + theme_bw() + theme(aspect.ratio = 1)) + (p_ML_caf_scatter_ER_negative + theme_bw() + theme(aspect.ratio = 1)) 6.2 Annotate epignomic instability scores feats &lt;- get_all_features() nbins &lt;- 5 df &lt;- feats %&gt;% mutate( clock = cut(clock, quantile(clock, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), immune = cut(immune, quantile(immune, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), caf = cut(caf, quantile(caf, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), immune.meth = cut(immune.meth, quantile(immune.meth, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), caf.meth = cut(caf.meth, quantile(caf.meth, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), MG = cut(MG, quantile(MG, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins), ML = cut(ML, quantile(ML, 0:nbins/nbins, na.rm=TRUE), include.lowest=TRUE, labels=1:nbins)) %&gt;% left_join(samp_data %&gt;% select(samp, stage, grade), by = &quot;samp&quot;) %&gt;% mutate(stage = ifelse(stage %in% c(0, &quot;DCIS&quot;, 1), &quot;0-1&quot;, stage)) %&gt;% mutate(stage = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, stage)) %&gt;% mutate(grade = ifelse(ER == &quot;normal&quot;, &quot;N&quot;, grade)) df_pval &lt;- df %&gt;% filter(ER %in% c(&quot;ER+&quot;, &quot;ER-&quot;)) %&gt;% gather(&quot;feat&quot;, &quot;bin&quot;, -samp, -ER, -stage, -grade) %&gt;% group_by(ER, feat) %&gt;% summarise(grade_pval = chisq.test(bin, grade)$p.value, stage_pval = chisq.test(bin, stage)$p.value) %&gt;% mutate(signif_grade = case_when(grade_pval &lt; 0.0001 ~ &quot;****&quot;, grade_pval &lt; 0.001 ~ &quot;***&quot;, grade_pval &lt; 0.01 ~ &quot;**&quot;, grade_pval &lt; 0.05 ~ &quot;*&quot;), signif_stage = case_when(stage_pval &lt; 0.0001 ~ &quot;****&quot;, stage_pval &lt; 0.001 ~ &quot;***&quot;, stage_pval &lt; 0.01 ~ &quot;**&quot;, stage_pval &lt; 0.05 ~ &quot;*&quot;)) ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, grade): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect ## Warning in chisq.test(bin, stage): Chi-squared approximation may be incorrect as.data.frame(df_pval) ## ER feat grade_pval stage_pval signif_grade signif_stage ## 1 ER- caf 2.264293e-04 0.001946125 *** ** ## 2 ER- caf.meth 3.081915e-03 0.209690818 ** &lt;NA&gt; ## 3 ER- clock 6.348596e-01 0.070940655 &lt;NA&gt; &lt;NA&gt; ## 4 ER- immune 3.712915e-01 0.580276177 &lt;NA&gt; &lt;NA&gt; ## 5 ER- immune.meth 3.051790e-01 0.102242249 &lt;NA&gt; &lt;NA&gt; ## 6 ER- MG 5.763868e-01 0.042991948 &lt;NA&gt; * ## 7 ER- ML 6.479486e-01 0.873719290 &lt;NA&gt; &lt;NA&gt; ## 8 ER+ caf 6.512545e-05 0.060334718 **** &lt;NA&gt; ## 9 ER+ caf.meth 1.267372e-05 0.070515621 **** &lt;NA&gt; ## 10 ER+ clock 1.471181e-01 0.572271776 &lt;NA&gt; &lt;NA&gt; ## 11 ER+ immune 6.363196e-04 0.457202009 *** &lt;NA&gt; ## 12 ER+ immune.meth 5.579626e-03 0.293001516 ** &lt;NA&gt; ## 13 ER+ MG 1.588818e-06 0.099708353 **** &lt;NA&gt; ## 14 ER+ ML 5.428637e-10 0.230225194 **** &lt;NA&gt; df_pval %&gt;% filter(grade_pval &lt;= 0.05) ## # A tibble: 8 x 6 ## # groups: ER ## ER feat grade_pval stage_pval signif_grade signif_stage ## 1 ER- caf 0.00022642925 0.001946125 *** ** ## 2 ER- caf.meth 0.00308191469 0.209690818 ** &lt;NA&gt; ## 3 ER+ caf 0.00006512545 0.060334718 **** &lt;NA&gt; ## 4 ER+ caf.meth 0.00001267372 0.070515621 **** &lt;NA&gt; ## 5 ER+ immune 0.00063631960 0.457202009 *** &lt;NA&gt; ## 6 ER+ immune.meth 0.00557962596 0.293001516 ** &lt;NA&gt; ## # ... with 2 more rows df_pval %&gt;% filter(stage_pval &lt;= 0.05) ## # A tibble: 2 x 6 ## # groups: ER ## ER feat grade_pval stage_pval signif_grade signif_stage ## 1 ER- caf 0.0002264293 0.001946125 *** ** ## 2 ER- MG 0.5763867809 0.042991948 &lt;NA&gt; * 6.2.0.1 Extended Data Figure 6D options(repr.plot.width = 6, repr.plot.height = 4) p_stage_MG &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% filter(!is.na(stage)) %&gt;% count(stage, MG) %&gt;% group_by(MG) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=MG, y=p, fill=stage)) + geom_col() + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_stage_ML &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% filter(!is.na(stage)) %&gt;% count(stage, ML) %&gt;% group_by(ML) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=ML, y=p, fill=stage)) + geom_col() + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_stage_MG + theme_bw() p_stage_ML + theme_bw() Same for ER-: options(repr.plot.width = 6, repr.plot.height = 4) p_grade_MG_neg &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, MG) %&gt;% group_by(MG) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=MG, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_ML_neg &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, ML) %&gt;% group_by(ML) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=ML, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_MG_neg + theme_bw() p_grade_ML_neg + theme_bw() options(repr.plot.width = 6, repr.plot.height = 4) p_stage_MG_neg &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% filter(!is.na(stage)) %&gt;% count(stage, MG) %&gt;% group_by(MG) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=MG, y=p, fill=stage)) + geom_col() + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_stage_ML_neg &lt;- df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% mutate(stage = factor(stage, levels = c(&quot;N&quot;, &quot;0-1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) %&gt;% filter(!is.na(stage)) %&gt;% count(stage, ML) %&gt;% group_by(ML) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=ML, y=p, fill=stage)) + geom_col() + scale_fill_manual(name = &quot;Stage&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;0-1&quot; = &quot;black&quot;, &quot;2&quot; = &quot;blue&quot;, &quot;3&quot; = &quot;red&quot;, &quot;4&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_stage_MG_neg + theme_bw() p_stage_ML_neg + theme_bw() 6.2.0.2 Figure 2D options(repr.plot.width = 6, repr.plot.height = 4) p_grade_MG &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, MG) %&gt;% group_by(MG) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=MG, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_ML &lt;- df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% mutate(grade = factor(grade, levels = c(&quot;N&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) %&gt;% filter(!is.na(grade)) %&gt;% count(grade, ML) %&gt;% group_by(ML) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=ML, y=p, fill=grade)) + geom_col() + scale_fill_manual(name = &quot;Grade&quot;, values = c(&quot;N&quot; = &quot;gray&quot;, &quot;1&quot; = &quot;darkblue&quot;, &quot;2&quot; = &quot;red&quot;, &quot;3&quot; = &quot;orange&quot;)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;% of samples&quot;) p_grade_MG + theme_bw() p_grade_ML + theme_bw() 6.2.1 Integrative clusters 6.2.1.1 Extended Data Figure 7C options(repr.plot.width = 8, repr.plot.height = 6) df &lt;- feats %&gt;% left_join(samp_data %&gt;% select(samp, iC10)) %&gt;% filter(!is.na(iC10)) %&gt;% mutate(iC10 = factor(iC10, levels = names(annot_colors$iC10))) %&gt;% select(samp, ER, MG, ML, iC10) %&gt;% gather(&quot;clust&quot;, &quot;score&quot;, -ER, -iC10, -samp) ## Joining, by = &quot;samp&quot; p_iC10 &lt;- df %&gt;% ggplot(aes(x = iC10, y = score, fill = iC10)) + geom_boxplot(lwd = 0.2, outlier.size = 0.2) + facet_grid(clust ~ .) + guides(fill = FALSE) + scale_fill_manual(values = annot_colors$iC10) + ylab(&quot;&quot;) + theme(aspect.ratio = 0.5) + vertical_labs() ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p_iC10 + theme_bw() + theme(aspect.ratio = 0.5) + vertical_labs() + ggpubr::stat_compare_means(method = &quot;kruskal&quot;) df %&gt;% distinct(samp, iC10) %&gt;% count(iC10) ## # A tibble: 12 x 2 ## iC10 n ## 1 ADJNORMAL 92 ## 2 1 98 ## 3 2 54 ## 4 3 214 ## 5 4ER+ 172 ## 6 4ER- 50 ## # ... with 6 more rows 6.3 Cross correlation (methylation-expression) of epigenomic instability loci Create a matrix with methylation of loci that are part of MG or ML epigenmic instability and cross correlate it with gene expression in ER+: all_norm_meth &lt;- fread(here(&quot;data/all_norm_meth.tsv&quot;)) %&gt;% as_tibble() ER_positive_mat &lt;- all_norm_meth %&gt;% select(chrom:end, any_of(ER_positive_samples)) %&gt;% intervs_to_mat() loci_annot &lt;- fread(here(&quot;data/loci_annot_epigenomic_features.tsv&quot;)) %&gt;% as_tibble() cor_thresh &lt;- 0.3 coords &lt;- loci_annot %&gt;% filter(abs(MG) &gt;= cor_thresh | abs(ML) &gt;= cor_thresh &amp; abs(clock) &lt; cor_thresh) %&gt;% select(chrom:end) %&gt;% intervs_to_mat() %&gt;% rownames() meth_mat &lt;- ER_positive_mat[coords, ] expr_m &lt;- fread(here(&quot;data/expression_matrix.csv&quot;)) %&gt;% select(-any_of(c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;name3.chr&quot;))) expr_mat &lt;- expr_m %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;name&quot;) f &lt;- rowSums(!is.na(expr_mat)) &gt; 0 expr_mat &lt;- expr_mat[f, ] em_cross &lt;- em_cross_cor(meth_mat, expr_mat, meth_cor_thresh = 0.25, expr_cor_thresh = 0.25) %cache_rds% here(&quot;data/MG_ML_em_cross_cor.rds&quot;) em_cross_clust &lt;- cluster_em_cross_cor(em_cross, k_meth = 32, k_expr = 32) %cache_rds% here(&quot;data/MG_ML_em_cross_cor_clust.rds&quot;) 6.3.0.1 Figure 2F options(repr.plot.width = 8, repr.plot.height = 13) plot_em_cross_cor(em_cross_clust) ## plotting em cross Annotating the methylation clusters we can see which are MG and which are ML options(repr.plot.width = 10, repr.plot.height = 7) cutree_order(em_cross_clust$hc_meth, k=32) %&gt;% mat_to_intervs() %&gt;% set_names(c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;clust&quot;)) %&gt;% left_join(loci_annot %&gt;% select(chrom, start, end,clock, MG, ML)) %&gt;% mutate(feat = case_when( clock &gt;= cor_thresh ~ &quot;clock&quot;, MG &gt;= cor_thresh ~ &quot;MG&quot;, ML &gt;= cor_thresh ~ &quot;ML&quot;, TRUE ~ &quot;other&quot;)) %&gt;% count(clust, feat) %&gt;% as_tibble() %&gt;% group_by(clust) %&gt;% mutate(p = n / sum(n)) %&gt;% ggplot(aes(x=factor(clust), y=n, fill=feat)) + geom_col() + theme_bw() ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) options(repr.plot.width = 8, repr.plot.height = 13) plot_em_cross_cor(em_cross_clust, k_meth = 3, k_exp = 32) ## plotting em cross em_cross_clust$expr_clust %&gt;% arrange(clust) %&gt;% fwrite(here(&quot;data/MG_ML_em_cross_gene_clust_id.tsv&quot;), sep=&quot;\\t&quot;) Plot for each expression cluster the name of the gene with highest correlation to any locus. top_genes &lt;- em_cross_clust$em_cross %&gt;% gather_matrix(&quot;name&quot;, &quot;locus&quot;, &quot;cor&quot;) %&gt;% left_join(em_cross_clust$expr_clust) %&gt;% arrange(clust, cor) %&gt;% group_by(clust) %&gt;% slice(1) %&gt;% ungroup() %&gt;% left_join(em_cross_clust$expr_clust %&gt;% count(clust) %&gt;% mutate(p = cumsum(n / sum(n)), pos = p - (p - lag(p, default = 0)) / 2) %&gt;% select(clust, pos)) %cache_df% here(&quot;data/MG_ML_em_cross_top_genes.tsv&quot;) p_gene_names &lt;- ggplot(top_genes, aes(x = 1, y = pos, label = name)) + geom_text() + theme_void(base_size = 3, base_family = &quot;Arial&quot;) Plot barplots of MG gene expression correlations gene_annots &lt;- get_gene_annots() ## Joining, by = &quot;type&quot; feat_gene_cors &lt;- get_expression_features_cors() gene_annots_cors &lt;- feat_gene_cors %&gt;% left_join(gene_annots, by = &quot;name&quot;) %&gt;% filter(ER == &quot;ER+&quot;, MG &gt;= 0.15) %&gt;% distinct() 6.3.0.2 Figure 2G options(repr.plot.width = 8, repr.plot.height = 8) p_cc &lt;- gene_annots_cors %&gt;% filter(type == &quot;Cell Cycle&quot;) %&gt;% ggplot(aes(x = reorder(name, MG), y = MG)) + geom_col(fill = &quot;#008B45FF&quot;) + xlab(&quot;&quot;) + ylab(&quot;Correlation to MG&quot;) + vertical_labs() + ggtitle(&quot;Cell Cycle&quot;) + ylim(0, 0.5) + theme(axis.text.x = element_text(size = 4, family = &quot;Arial&quot;)) + theme(plot.title = element_text(hjust = 0.5), panel.grid.major.x = element_blank()) p_emb &lt;- gene_annots_cors %&gt;% filter(type == &quot;Embryonic TF&quot;) %&gt;% ggplot(aes(x = reorder(name, MG), y = MG)) + geom_col(fill = &quot;#3B4992FF&quot;) + xlab(&quot;&quot;) + ylab(&quot;Correlation to MG&quot;) + vertical_labs() + ggtitle(&quot;Embryonic TF&quot;) + ylim(0, 0.5) + theme(axis.text.x = element_text(size = 4, family = &quot;Arial&quot;), plot.title = element_text(hjust = 0.5), panel.grid.major.x = element_blank()) p_other &lt;- gene_annots_cors %&gt;% filter(type == &quot;Other&quot;) %&gt;% ggplot(aes(x = reorder(name, MG), y = MG)) + geom_col(fill = &quot;black&quot;) + xlab(&quot;&quot;) + ylab(&quot;Correlation to MG&quot;) + vertical_labs() + ggtitle(&quot;Other&quot;) + ylim(0, 0.5) + theme(axis.text.x = element_text(size = 4, family = &quot;Arial&quot;), plot.title = element_text(hjust = 0.5), panel.grid.major.x = element_blank()) p_cc p_emb p_other 6.4 Epigenomic instability in different Time of replication (TOR) regimes loci_annot &lt;- fread(here(&quot;data/loci_annot_epigenomic_features.tsv&quot;)) %&gt;% as_tibble() loci_clust &lt;- fread(here(&quot;data/ER_positive_loci_clust_df.tsv&quot;)) %&gt;% as_tibble() loci_clust &lt;- loci_clust %&gt;% left_join(loci_annot) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) loci_clust_MG &lt;- loci_clust %&gt;% filter(clust == &quot;MG&quot;) loci_clust_ML &lt;- loci_clust %&gt;% filter(clust == &quot;ML&quot;) all_mat_raw &lt;- get_all_meth() %&gt;% intervs_to_mat() tor_strata &lt;- loci_clust_MG %&gt;% mutate(tor_strata = cut(tor, breaks = main_config$genomic_regions$tor_low_mid_high, labels=c(&quot;late&quot;, &quot;intermediate&quot;, &quot;early&quot;))) %&gt;% pull(tor_strata) %&gt;% forcats::fct_explicit_na() intervs &lt;- loci_clust_MG %&gt;% intervs_to_mat() %&gt;% rownames() samp_meth_tor_MG &lt;- tgs_matrix_tapply(t(all_mat_raw[intervs, ]), tor_strata, mean, na.rm=TRUE) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% add_ER() %&gt;% as_tibble() 6.4.0.1 Extended Data Figure 7B options(repr.plot.width = 4, repr.plot.height = 4) p_early_late &lt;- samp_meth_tor_MG %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x=early, y=late, color=ER)) + geom_abline(linetype = &quot;dashed&quot;) + geom_point(size=0.5) + xlim(0, 0.8) + ylim(0, 0.8) + xlab(&quot;MG loci: early replicating&quot;) + ylab(&quot;MG loci: late replicating&quot;) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio = 1) samp_meth_tor_MG %&gt;% filter(ER != &quot;normal&quot;) %&gt;% summarise(cor_early_late = cor(early, late, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;), cor_early_mid = cor(early, intermediate, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)) ## # A tibble: 1 x 2 ## cor_early_late cor_early_mid ## 1 0.8602804 0.9382058 p_early_late + theme_bw() + theme(aspect.ratio = 1) tor_strata &lt;- loci_clust_ML %&gt;% mutate(tor_strata = cut(tor, breaks = main_config$genomic_regions$tor_low_mid_high, labels=c(&quot;late&quot;, &quot;intermediate&quot;, &quot;early&quot;))) %&gt;% pull(tor_strata) %&gt;% forcats::fct_explicit_na() intervs &lt;- loci_clust_ML %&gt;% intervs_to_mat() %&gt;% rownames() samp_meth_tor_ML &lt;- tgs_matrix_tapply(t(all_mat_raw[intervs, ]), tor_strata, mean, na.rm=TRUE) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;samp&quot;) %&gt;% add_ER() %&gt;% as_tibble() options(repr.plot.width = 4, repr.plot.height = 4) p_early_late_ML &lt;- samp_meth_tor_ML %&gt;% filter(ER != &quot;normal&quot;) %&gt;% ggplot(aes(x=early, y=late, color=ER)) + geom_abline(linetype = &quot;dashed&quot;) + geom_point(size=0.5) + xlim(0, 0.8) + ylim(0, 0.8) + xlab(&quot;ML loci: early replicating&quot;) + ylab(&quot;ML loci: late replicating&quot;) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio = 1) samp_meth_tor_ML %&gt;% filter(ER != &quot;normal&quot;) %&gt;% summarise(cor_early_late = cor(early, late, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;), cor_early_mid = cor(early, intermediate, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)) ## # A tibble: 1 x 2 ## cor_early_late cor_early_mid ## 1 0.8201663 0.9276362 p_early_late_ML + theme_bw() + theme(aspect.ratio = 1) ## Warning: Removed 32 rows containing missing values (geom_point). gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4690952 250.6 8042191 429.5 8042191 429.5 ## Vcells 1417529451 10814.9 2192953529 16731.0 1803628477 13760.6 "],["cna.html", "7 CNA", " 7 CNA source(here::here(&quot;scripts/init.R&quot;)) cna_df &lt;- get_gene_cna_df() %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(type = forcats::fct_explicit_na(type)) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -(samp:ER)) %&gt;% as_tibble() cna_df_count &lt;- cna_df %&gt;% group_by(feat, ER) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:5 / 5, na.rm = TRUE), include.lowest = TRUE, labels = as.character(1:5))) %&gt;% filter(!is.na(cna)) %&gt;% count(name, ER, feat, cna, score) %&gt;% group_by(name, ER, feat, score) %&gt;% mutate(p = n / sum(n)) %&gt;% ungroup() cna_pvals &lt;- calc_features_cna_pvals(feats = c(&quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;)) %&gt;% filter(ER != &quot;all&quot;) %&gt;% group_by(ER) %&gt;% mutate(qval_loss = p.adjust(pval_loss), qval_gain = p.adjust(pval_gain)) %&gt;% ungroup() signif_cna_loss &lt;- cna_pvals %&gt;% filter(type %in% &quot;TSG&quot;, qval_loss &lt;= 0.01, p_loss &gt;= 0.05) %&gt;% mutate(name1 = glue(&quot;{name} ({ER})&quot;)) %&gt;% ungroup() signif_cna_loss ## # A tibble: 24 x 16 ## name ER type feat pval_loss pval_gain n_loss n_gain n_neut n ## 1 APC ER+ TSG ML 1.063609e-06 0.64586372 100 95 803 998 ## 2 ARID1A ER+ TSG MG 1.428949e-08 0.56284763 247 5 746 998 ## 3 ATM ER+ TSG MG 3.426603e-12 0.52459023 436 12 550 998 ## 4 BRCA1 ER+ TSG MG 5.445255e-06 0.01060561 246 101 651 998 ## 5 BRCA1 ER+ TSG ML 4.613741e-07 0.85667669 246 101 651 998 ## 6 BRCA2 ER+ TSG MG 4.375058e-10 0.22370787 287 29 682 998 ## p_loss p_gain p_neut qval_loss qval_gain name1 ## 1 0.1002004 0.09519038 0.8046092 3.041921e-04 1 APC (ER+) ## 2 0.2474950 0.00501002 0.7474950 4.215400e-06 1 ARID1A (ER+) ## 3 0.4368737 0.01202405 0.5511022 1.031407e-09 1 ATM (ER+) ## 4 0.2464930 0.10120240 0.6523046 1.541007e-03 1 BRCA1 (ER+) ## 5 0.2464930 0.10120240 0.6523046 1.328757e-04 1 BRCA1 (ER+) ## 6 0.2875752 0.02905812 0.6833667 1.303767e-07 1 BRCA2 (ER+) ## # ... with 18 more rows signif_cna_gain &lt;- cna_pvals %&gt;% filter(type %in% &quot;ONC&quot;, qval_gain &lt;= 0.01, p_gain &gt;= 0.05) %&gt;% mutate(name1 = glue(&quot;{name} ({ER})&quot;)) %&gt;% ungroup() signif_cna_gain ## # A tibble: 8 x 16 ## name ER type feat pval_loss pval_gain n_loss n_gain n_neut n ## 1 CCND1 ER+ ONC MG 0.3150388889 4.476648e-11 40 293 665 998 ## 2 CCND1 ER+ ONC ML 0.4951036089 2.999444e-05 40 293 665 998 ## 3 ESR1 ER+ ONC ML 0.0006269846 1.792865e-05 236 74 688 998 ## 4 FGFR1 ER+ ONC MG 0.5059516735 1.633273e-09 164 256 578 998 ## 5 MYC ER+ ONC MG 0.3669024091 7.977468e-09 27 403 568 998 ## 6 MYC ER+ ONC ML 0.1339700251 2.848759e-08 27 403 568 998 ## p_loss p_gain p_neut qval_loss qval_gain name1 ## 1 0.04008016 0.2935872 0.6663327 1.0000000 1.369854e-08 CCND1 (ER+) ## 2 0.04008016 0.2935872 0.6663327 1.0000000 8.818367e-03 CCND1 (ER+) ## 3 0.23647295 0.0741483 0.6893788 0.1529842 5.288952e-03 ESR1 (ER+) ## 4 0.16432866 0.2565130 0.5791583 1.0000000 4.965150e-07 FGFR1 (ER+) ## 5 0.02705411 0.4038076 0.5691383 1.0000000 2.417173e-06 MYC (ER+) ## 6 0.02705411 0.4038076 0.5691383 1.0000000 8.603252e-06 MYC (ER+) ## # ... with 2 more rows 7.0.0.1 Extended Data Figure 10C options(repr.plot.width = 5, repr.plot.height = 7) df &lt;- cna_df_count %&gt;% mutate(name1 = glue(&quot;{name} ({ER})&quot;)) %&gt;% filter(name1 %in% signif_cna_loss$name1) %&gt;% group_by(feat, ER, name) %&gt;% mutate(n_tot = sum(n)) %&gt;% select(-p) %&gt;% spread(score, n) %&gt;% filter(cna == &quot;LOSSLOH&quot;) %&gt;% mutate(r = log2(`5` / `1`)) %&gt;% ungroup() p_loss &lt;- df %&gt;% filter(feat %in% c(&quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;)) %&gt;% left_join(signif_cna_loss %&gt;% select(name, ER, feat, qval_loss)) %&gt;% mutate(label = ifelse(qval_loss &lt;= 0.01, &quot;*&quot;, &quot;&quot;)) %&gt;% # filter(ER == &#39;ER+&#39;) %&gt;% select(name, ER, feat, r, label) %&gt;% ggplot(aes(x = feat, y = reorder(name, r), fill = r)) + geom_tile() + scale_fill_gradient2(name = &quot;log2\\n(top 20% /\\nbottom 20%)&quot;, low = &quot;darkblue&quot;, mid = &quot;white&quot;, high = &quot;darkred&quot;, midpoint = 0, breaks=c(-2,-1,0,1,2)) + ylab(&quot;&quot;) + xlab(&quot;&quot;) + geom_text(aes(label = label)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) ## Joining, by = c(&quot;feat&quot;, &quot;ER&quot;, &quot;name&quot;) p_loss + theme_bw() ## Warning: Removed 33 rows containing missing values (geom_text). options(repr.plot.width = 5, repr.plot.height = 7) df_gain &lt;- cna_df_count %&gt;% mutate(name1 = glue(&quot;{name} ({ER})&quot;)) %&gt;% filter(name1 %in% signif_cna_gain$name1) %&gt;% group_by(feat, ER, name) %&gt;% mutate(n_tot = sum(n)) %&gt;% select(-p) %&gt;% spread(score, n) %&gt;% filter(cna == &quot;GAINAMPL&quot;) %&gt;% mutate(r = log2(`5` / `1`)) %&gt;% ungroup() p_gain &lt;- df_gain %&gt;% filter(feat %in% c(&quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;)) %&gt;% left_join(signif_cna_gain %&gt;% select(name, ER, feat, qval_gain)) %&gt;% mutate(label = ifelse(qval_gain &lt;= 0.01, &quot;*&quot;, &quot;&quot;)) %&gt;% select(name, ER, feat, r, label) %&gt;% ggplot(aes(x = feat, y = reorder(name, r), fill = r)) + geom_tile() + scale_fill_gradient2(name = &quot;log2\\n(top 20% /\\nbottom 20%)&quot;, low = &quot;darkblue&quot;, mid = &quot;white&quot;, high = &quot;darkred&quot;, midpoint = 0, breaks=c(-2,-1,0,1,2)) + ylab(&quot;&quot;) + xlab(&quot;&quot;) + geom_text(aes(label = label)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) ## Joining, by = c(&quot;feat&quot;, &quot;ER&quot;, &quot;name&quot;) p_gain + theme_bw() ## Warning: Removed 10 rows containing missing values (geom_text). gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4241171 226.6 7549862 403.3 7549862 403.3 ## Vcells 22908169 174.8 53036147 404.7 53036125 404.7 "],["mutations.html", "8 Mutations", " 8 Mutations source(here::here(&quot;scripts/init.R&quot;)) mut_df &lt;- get_mut_df() dim(mut_df) ## [1] 283689 4 mut_df%&gt;% distinct(samp) %&gt;% nrow() ## [1] 1659 We compare the distribution of the epigenomic scores with and without mutation for a panel of 171 genes. We do it separatly for activating (+) and inactivating (-) mutations. calc_features_mutation_pvals &lt;- function(min_n = 10) { feats_tidy &lt;- get_all_features() %&gt;% select(-caf, -immune) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) mut_df &lt;- get_mut_df() df &lt;- mut_df %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) pvals_minus &lt;- df %&gt;% group_by(gene, ER, feat) %&gt;% filter(sum(!is.na(score[mutation == &quot;MUT-&quot;])) &gt;= min_n) %&gt;% summarise(pval = wilcox.test(score[mutation == &quot;MUT-&quot;], score[mutation %in% c(&quot;NO MUT&quot;, &quot;MUT+&quot;)])$p.value) %&gt;% ungroup() %&gt;% mutate(type = &quot;MUT-&quot;) pvals_plus &lt;- df %&gt;% group_by(gene, ER, feat) %&gt;% filter(sum(!is.na(score[mutation == &quot;MUT+&quot;])) &gt;= min_n) %&gt;% summarise(pval = wilcox.test(score[mutation == &quot;MUT+&quot;], score[mutation %in% c(&quot;NO MUT&quot;, &quot;MUT-&quot;)])$p.value) %&gt;% ungroup() %&gt;% mutate(type = &quot;MUT+&quot;) pvals &lt;- bind_rows(pvals_minus, pvals_plus) %&gt;% group_by(ER) %&gt;% mutate(qval = p.adjust(pval)) return(pvals) } %cache_df% &quot;data/features_mutations_pvals.tsv&quot; pvals &lt;- calc_features_mutation_pvals() signif_genes &lt;- pvals %&gt;% filter(qval &lt;= 0.01) %&gt;% pull(gene) %&gt;% unique() pvals %&gt;% filter(qval &lt;= 0.01) %&gt;% arrange(gene) %&gt;% mutate(signif = case_when(qval &lt; 0.0001 ~ &quot;****&quot;, qval &lt; 0.001 ~ &quot;***&quot;, qval &lt; 0.01 ~ &quot;**&quot;, qval &lt; 0.05 ~ &quot;*&quot;)) ## # A tibble: 6 x 7 ## # groups: ER ## gene ER feat pval type qval signif ## 1 CBFB ER+ ML 1.859177e-06 MUT- 2.658623e-04 *** ## 2 CDH1 ER+ MG 1.250775e-07 MUT- 1.801116e-05 **** ## 3 GATA3 ER+ ML 3.488426e-05 MUT- 4.918680e-03 ** ## 4 PIK3CA ER- MG 6.510399e-07 MUT+ 1.302080e-05 **** ## 5 TP53 ER+ immune.meth 4.098744e-06 MUT- 5.820217e-04 *** ## 6 TP53 ER+ ML 4.633858e-20 MUT- 6.719094e-18 **** We plot the distribution of scores and mutations for the genes that were significant. 8.0.0.1 Figure 4B options(repr.plot.width = 10, repr.plot.height = 10) feats_tidy &lt;- get_all_features() %&gt;% select(-caf, -immune) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) mut_df_count &lt;- get_mut_df() %&gt;% left_join(feats_tidy) %&gt;% mutate(mutation = factor(mutation, levels = c(&quot;NO MUT&quot;, &quot;MUT-&quot;, &quot;MUT+&quot;, &quot;NOR&quot;))) %&gt;% filter(ER != &quot;normal&quot;, mutation != &quot;&quot;) %&gt;% group_by(feat, ER) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:5 / 5, na.rm = TRUE), include.lowest = TRUE, labels = as.character(1:5))) %&gt;% count(gene, ER, feat, mutation, score) %&gt;% group_by(gene, ER, feat, score) %&gt;% mutate(p = n / sum(n)) %&gt;% ungroup() ## Joining, by = &quot;samp&quot; p &lt;- mut_df_count %&gt;% filter((gene == &quot;PIK3CA&quot; &amp; ER == &quot;ER-&quot;) | (gene != &quot;PIK3CA&quot; &amp; ER == &quot;ER+&quot;), gene %in% signif_genes) %&gt;% mutate(feat = factor(feat, c(&quot;caf.meth&quot;, &quot;immune.meth&quot;, &quot;clock&quot;, &quot;MG&quot;, &quot;ML&quot;))) %&gt;% mutate(gene = paste0(gene, &quot; (&quot;, ER, &quot;)&quot;)) %&gt;% ggplot(aes(fill = mutation, y = p, x = score, color = mutation, label = n)) + geom_col(width = 1, color = &quot;black&quot;) + scale_color_manual(values = c(&quot;MUT+&quot; = &quot;white&quot;, &quot;MUT-&quot; = &quot;white&quot;, &quot;NO MUT&quot; = &quot;black&quot;)) + scale_fill_manual(values = annot_colors$mutation) + geom_text(family = &quot;Arial&quot;, size = 1.5, position = position_stack(vjust = 0.5)) + guides(color = &quot;none&quot;) + facet_grid(feat ~ gene) + ylab(&quot;% of samples&quot;) + xlab(&quot;Score&quot;) + scale_y_continuous(labels = scales::percent) + theme( aspect.ratio = 0.7, axis.text.x = element_blank(), axis.ticks.x = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), panel.border = element_blank() ) p We can test which associations hold even after adding PAM50 as a confounder: calc_features_mutation_pvals_PAM50 &lt;- function(min_n = 10) { feats_tidy &lt;- get_all_features() %&gt;% select(-caf, -immune) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) mut_df &lt;- get_mut_df() df &lt;- mut_df %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) df &lt;- df %&gt;% left_join(samp_data %&gt;% select(samp, PAM50)) pvals_minus &lt;- df %&gt;% group_by(gene, ER, PAM50, feat) %&gt;% filter(sum(!is.na(score[mutation == &quot;MUT-&quot;])) &gt;= min_n) %&gt;% summarise(pval = wilcox.test(score[mutation == &quot;MUT-&quot;], score[mutation %in% c(&quot;NO MUT&quot;, &quot;MUT+&quot;)])$p.value) %&gt;% ungroup() %&gt;% mutate(type = &quot;MUT-&quot;) pvals_plus &lt;- df %&gt;% group_by(gene, ER, PAM50, feat) %&gt;% filter(sum(!is.na(score[mutation == &quot;MUT+&quot;])) &gt;= min_n) %&gt;% summarise(pval = wilcox.test(score[mutation == &quot;MUT+&quot;], score[mutation %in% c(&quot;NO MUT&quot;, &quot;MUT-&quot;)])$p.value) %&gt;% ungroup() %&gt;% mutate(type = &quot;MUT+&quot;) pvals &lt;- bind_rows(pvals_minus, pvals_plus) %&gt;% group_by(ER, PAM50) %&gt;% mutate(qval = p.adjust(pval)) return(pvals) } %cache_df% &quot;data/features_mutations_pvals_PAM50.tsv&quot; pvals_pam50 &lt;- calc_features_mutation_pvals_PAM50() ## Joining, by = &quot;samp&quot; signif_genes_pam50 &lt;- pvals_pam50 %&gt;% filter(qval &lt;= 0.01) %&gt;% pull(gene) %&gt;% unique() pvals_pam50 %&gt;% filter(qval &lt;= 0.01) %&gt;% arrange(gene) ## # A tibble: 5 x 7 ## # groups: ER, PAM50 ## gene ER PAM50 feat pval type qval ## 1 CDH1 ER+ LUMA MG 0.0000063740045 MUT- 0.00050354636 ## 2 GATA3 ER+ LUMA ML 0.0000465714399 MUT- 0.00363257231 ## 3 PIK3CA ER+ LUMA ML 0.0000004288503 MUT+ 0.00003430802 ## 4 TP53 ER+ LUMA ML 0.0000823223268 MUT- 0.00633881916 ## 5 TP53 ER+ LUMB ML 0.0000016139331 MUT- 0.00008069666 gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4262458 227.7 7549761 403.3 7549761 403.3 ## Vcells 13663688 104.3 45292323 345.6 43948331 335.3 "],["survival.html", "9 Survival", " 9 Survival source(here::here(&quot;scripts/init.R&quot;)) feats_tidy &lt;- get_all_features() %&gt;% select(-immune, -caf) %&gt;% rename(Immune = immune.meth, CAF = caf.meth, Clock = clock) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) %&gt;% mutate(feat = factor(feat, levels = c(&quot;CAF&quot;, &quot;Immune&quot;, &quot;Clock&quot;, &quot;MG&quot;, &quot;ML&quot;))) surv_df &lt;- survival %&gt;% select(-ER) %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% group_by(ER, feat) %&gt;% filter(sum(!is.na(score)) &gt;= 1) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:3 / 3, na.rm = TRUE), labels = c(&quot;low&quot;, &quot;mid&quot;, &quot;high&quot;), include.lowest = TRUE)) %&gt;% ungroup() %&gt;% filter(score != &quot;mid&quot;) %&gt;% mutate(score = factor(score, levels = c(&quot;low&quot;, &quot;high&quot;))) surv_df %&gt;% count(feat, ER, score) ## # A tibble: 20 x 4 ## feat ER score n ## 1 CAF ER- low 104 ## 2 CAF ER- high 103 ## 3 CAF ER+ low 370 ## 4 CAF ER+ high 369 ## 5 Immune ER- low 104 ## 6 Immune ER- high 103 ## # ... with 14 more rows surv_df %&gt;% count(feat, ER) ## # A tibble: 10 x 3 ## feat ER n ## 1 CAF ER- 207 ## 2 CAF ER+ 739 ## 3 Immune ER- 207 ## 4 Immune ER+ 739 ## 5 Clock ER- 207 ## 6 Clock ER+ 739 ## # ... with 4 more rows 9.0.0.1 Figure 4D options(repr.plot.width = 12, repr.plot.height = 3) p_surv_pos &lt;- surv_df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% plot_km(&quot;score&quot;, facet.by = &quot;feat&quot;, ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, censor.size = 3, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE, size=0.2) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 10 ## Warning: `as.tibble()` was deprecated in tibble 2.0.0. ## Please use `as_tibble()` instead. ## The signature and semantics have changed, see `?as_tibble`. ## Warning: `select_()` was deprecated in dplyr 0.7.0. ## Please use `select()` instead. p_surv_neg &lt;- surv_df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% plot_km(&quot;score&quot;, facet.by = &quot;feat&quot;, ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE, size=0.2) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 10 p_surv_pos + theme_bw() + theme(aspect.ratio=1) p_surv_neg + theme_bw() + theme(aspect.ratio=1) surv_df %&gt;% group_by(feat, ER, score) %&gt;% summarise(n_death = sum(y &lt; 5 &amp; death == 1), n_surv = sum(y &gt;= 5), n = n_surv + n_death, surv = n_surv / n, surv_p = scales::percent(surv)) %&gt;% as.data.frame ## feat ER score n_death n_surv n surv surv_p ## 1 CAF ER- low 45 51 96 0.5312500 53% ## 2 CAF ER- high 35 63 98 0.6428571 64% ## 3 CAF ER+ low 61 277 338 0.8195266 82% ## 4 CAF ER+ high 39 302 341 0.8856305 89% ## 5 Immune ER- low 47 47 94 0.5000000 50% ## 6 Immune ER- high 25 71 96 0.7395833 74% ## 7 Immune ER+ low 49 289 338 0.8550296 86% ## 8 Immune ER+ high 47 293 340 0.8617647 86% ## 9 Clock ER- low 38 60 98 0.6122449 61% ## 10 Clock ER- high 34 61 95 0.6421053 64% ## 11 Clock ER+ low 51 290 341 0.8504399 85% ## 12 Clock ER+ high 35 298 333 0.8948949 89% ## 13 MG ER- low 36 64 100 0.6400000 64% ## 14 MG ER- high 41 51 92 0.5543478 55% ## 15 MG ER+ low 31 308 339 0.9085546 91% ## 16 MG ER+ high 57 281 338 0.8313609 83% ## 17 ML ER- low 41 56 97 0.5773196 58% ## 18 ML ER- high 32 61 93 0.6559140 66% ## 19 ML ER+ low 35 309 344 0.8982558 90% ## 20 ML ER+ high 64 267 331 0.8066465 81% df &lt;- surv_df %&gt;% filter(ER == &quot;ER+&quot;, feat == &quot;MG&quot;) survival::survdiff(survival::Surv(df$y, df$death) ~ score, data = as.data.frame(df)) ## Call: ## survival::survdiff(formula = survival::Surv(df$y, df$death) ~ ## score, data = as.data.frame(df)) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## score=low 370 95 123 6.55 14.1 ## score=high 369 136 108 7.51 14.1 ## ## Chisq= 14.1 on 1 degrees of freedom, p= 0.0002 df &lt;- surv_df %&gt;% filter(ER == &quot;ER-&quot;, feat == &quot;MG&quot;) survival::survdiff(survival::Surv(df$y, df$death) ~ score, data = as.data.frame(df)) ## Call: ## survival::survdiff(formula = survival::Surv(df$y, df$death) ~ ## score, data = as.data.frame(df)) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## score=low 104 44 51.1 0.977 2.12 ## score=high 103 51 43.9 1.136 2.12 ## ## Chisq= 2.1 on 1 degrees of freedom, p= 0.1 df &lt;- surv_df %&gt;% filter(ER == &quot;ER+&quot;, feat == &quot;MG&quot;) survival::coxph(survival::Surv(df$y, df$death) ~ score, data = as.data.frame(df)) ## Call: ## survival::coxph(formula = survival::Surv(df$y, df$death) ~ score, ## data = as.data.frame(df)) ## ## coef exp(coef) se(coef) z p ## scorehigh 0.4998 1.6484 0.1343 3.722 0.000198 ## ## Likelihood ratio test=14.14 on 1 df, p=0.0001699 ## n= 739, number of events= 231 df &lt;- surv_df %&gt;% filter(ER == &quot;ER-&quot;, feat == &quot;MG&quot;) survival::coxph(survival::Surv(df$y, df$death) ~ score, data = as.data.frame(df)) ## Call: ## survival::coxph(formula = survival::Surv(df$y, df$death) ~ score, ## data = as.data.frame(df)) ## ## coef exp(coef) se(coef) z p ## scorehigh 0.2988 1.3483 0.2060 1.451 0.147 ## ## Likelihood ratio test=2.11 on 1 df, p=0.1461 ## n= 207, number of events= 95 9.0.0.2 Extended Data Figure 10D df &lt;- survival %&gt;% select(-ER) %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% left_join(get_mut_df() %&gt;% filter(gene == &quot;TP53&quot;) %&gt;% filter(!is.na(mutation)) %&gt;% select(samp, gene, mutation)) %&gt;% filter(ER == &quot;ER+&quot;, !is.na(mutation)) ## Joining, by = &quot;samp&quot; p_surv_p53 &lt;- df %&gt;% group_by(ER, feat) %&gt;% filter(sum(!is.na(score)) &gt;= 1) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:3 / 3, na.rm = TRUE), labels = c(&quot;low&quot;, &quot;mid&quot;, &quot;high&quot;), include.lowest = TRUE)) %&gt;% ungroup() %&gt;% filter(score != &quot;mid&quot;) %&gt;% mutate(score = factor(score, levels = c(&quot;low&quot;, &quot;high&quot;))) %&gt;% plot_km(&quot;score&quot;, facet.by = c(&quot;mutation&quot;, &quot;feat&quot;), ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, censor.size = 3, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 20 p_surv_p53 + theme_bw() + theme(aspect.ratio=1) df %&gt;% distinct(samp, ER, mutation) %&gt;% count(mutation) ## # A tibble: 2 x 2 ## mutation n ## 1 MUT- 202 ## 2 NO MUT 824 9.0.1 Raw-methylation feats_tidy &lt;- get_all_features_raw() %&gt;% select(-immune, -caf) %&gt;% rename(Immune = immune.meth, CAF = caf.meth, Clock = clock) %&gt;% gather(&quot;feat&quot;, &quot;score&quot;, -ER, -samp) %&gt;% mutate(feat = factor(feat, levels = c(&quot;CAF&quot;, &quot;Immune&quot;, &quot;Clock&quot;, &quot;MG&quot;, &quot;ML&quot;))) surv_df &lt;- survival %&gt;% select(-ER) %&gt;% left_join(feats_tidy, by = &quot;samp&quot;) %&gt;% filter(ER != &quot;normal&quot;) %&gt;% group_by(ER, feat) %&gt;% filter(sum(!is.na(score)) &gt;= 1) %&gt;% mutate(score = cut(score, breaks = quantile(score, 0:3 / 3, na.rm = TRUE), labels = c(&quot;low&quot;, &quot;mid&quot;, &quot;high&quot;), include.lowest = TRUE)) %&gt;% ungroup() %&gt;% filter(score != &quot;mid&quot;) %&gt;% mutate(score = factor(score, levels = c(&quot;low&quot;, &quot;high&quot;))) surv_df %&gt;% count(feat, ER, score) ## # A tibble: 20 x 4 ## feat ER score n ## 1 CAF ER- low 104 ## 2 CAF ER- high 103 ## 3 CAF ER+ low 370 ## 4 CAF ER+ high 369 ## 5 Immune ER- low 104 ## 6 Immune ER- high 103 ## # ... with 14 more rows options(repr.plot.width = 12, repr.plot.height = 3) p_surv_pos &lt;- surv_df %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% plot_km(&quot;score&quot;, facet.by = &quot;feat&quot;, ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, censor.size = 3, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE, size=0.2) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 10 p_surv_neg &lt;- surv_df %&gt;% filter(ER == &quot;ER-&quot;) %&gt;% plot_km(&quot;score&quot;, facet.by = &quot;feat&quot;, ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE, size=0.2) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 10 p_surv_pos + theme_bw() + theme(aspect.ratio=1) p_surv_neg + theme_bw() + theme(aspect.ratio=1) options(repr.plot.width = 12, repr.plot.height = 6) surv_df_p53 &lt;- surv_df %&gt;% left_join(get_mut_df() %&gt;% filter(gene == &quot;TP53&quot;) %&gt;% filter(!is.na(mutation)) %&gt;% select(samp, gene, mutation)) %&gt;% filter(!is.na(mutation)) ## Joining, by = &quot;samp&quot; p_surv_p53 &lt;- surv_df_p53 %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% plot_km(&quot;score&quot;, facet.by = c(&quot;mutation&quot;, &quot;feat&quot;), ggtheme = theme_arial(6), time_breaks = 5, legend = &quot;none&quot;, censor.size = 3, colors = &quot;aaas&quot;, time_range = c(0, 15), nrow = 1, censor = FALSE, pval = TRUE) + theme(aspect.ratio = 1) ## Warning in (function (survsummary, times, survtable = c(&quot;cumevents&quot;, ## &quot;risk.table&quot;, : The length of legend.labs should be 20 p_surv_p53 + theme_bw() + theme(aspect.ratio=1) "],["methylation-expression-in-cis.html", "10 Methylation - Expression in cis 10.1 Cis candidates: promoters 10.2 Epipolymorphism of cis-regulated promoters 10.3 Promoter examples 10.4 Cis candidates: genomic 10.5 Epipolymorphism of cis-regulated genomic 10.6 Examples for cis regulation (non-promoters)", " 10 Methylation - Expression in cis source(here::here(&quot;scripts/init.R&quot;)) 10.0.1 Remove TME genes We start by identifying genes that are strongly correlated to TME (immune and CAF) in the expression-methylation correlation clusters. Our TME normalization cleaned most of their correlations with methylation, but it is not perfect we don't want their in cis effects to mask other more interesting expression-methylation correlations. TME_genes &lt;- { ER_pos_TME_genes &lt;- get_TME_genes(readr::read_rds(here(&quot;data/ER_positive_norm_meth.rds&quot;))$em_cross_clust) ER_neg_TME_genes &lt;- get_TME_genes(readr::read_rds(here(&quot;data/ER_negative_norm_meth.rds&quot;))$em_cross_clust) normal_TME_genes &lt;- get_TME_genes(readr::read_rds(here(&quot;data/normal_norm_meth.rds&quot;))$em_cross_clust) unique(c(ER_pos_TME_genes, ER_neg_TME_genes, normal_TME_genes)) } %cache_rds% here(&quot;data/TME_genes.rds&quot;) length(TME_genes) ## [1] 2194 expr_mat &lt;- get_gene_expression_mat() %&gt;% expr_intervs_to_mat() expr_mat_f &lt;- expr_mat[!(rownames(expr_mat) %in% TME_genes), ] 10.0.2 Load normalized methylation and separate it to promoters and non-promoters all_norm_meth &lt;- fread(here(&quot;data/all_norm_meth.tsv&quot;)) %&gt;% as_tibble() prom_meth &lt;- all_norm_meth %&gt;% inner_join(promoter_intervs %&gt;% distinct(chrom, start, end), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) non_prom_meth &lt;- all_norm_meth %&gt;% anti_join(promoter_intervs %&gt;% distinct(chrom, start, end), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) prom_intervs_f &lt;- resolve_alt_promoters(prom_meth %&gt;% select(chrom:end)) 10.1 Cis candidates: promoters We use methylayer to identify promoters that are correlated in cis to the expression of their gene: ER_positive_prom_mat &lt;- prom_meth %&gt;% select(chrom:end, any_of(ER_positive_samples)) %&gt;% intervs_to_mat() ER_negative_prom_mat &lt;- prom_meth %&gt;% select(chrom:end, any_of(ER_negative_samples)) %&gt;% intervs_to_mat() normal_prom_mat &lt;- prom_meth %&gt;% select(chrom:end, any_of(normal_samples)) %&gt;% intervs_to_mat() dim(ER_positive_prom_mat) ## [1] 15693 1108 dim(ER_negative_prom_mat) ## [1] 15693 310 dim(normal_prom_mat) ## [1] 15693 92 prom_cis_cands &lt;- bind_rows( cis_em_promoters(ER_positive_prom_mat, expr_mat_f, prom_intervs_f, min_samples=50) %&gt;% mutate(ER = &quot;ER+&quot;), cis_em_promoters(ER_negative_prom_mat, expr_mat_f, prom_intervs_f, min_samples=50) %&gt;% mutate(ER = &quot;ER-&quot;), cis_em_promoters(normal_prom_mat, expr_mat_f, prom_intervs_f, min_samples=50) %&gt;% mutate(ER = &quot;normal&quot;) ) %cache_df% here(&quot;data/promoter_cis_cands.tsv&quot;) %&gt;% as_tibble() max(prom_cis_cands$r) ## [1] 9360 df &lt;- prom_cis_cands %&gt;% filter(r == 1) %&gt;% distinct(fdr, n_fdr, ER) df_fdr &lt;- prom_cis_cands %&gt;% filter(fdr &lt; 0.05) %&gt;% group_by(ER) %&gt;% filter(fdr == max(fdr)) %&gt;% distinct(fdr, n_fdr, ER) df ## # A tibble: 3 x 3 ## fdr n_fdr ER ## 1 0.002364066 423 ER+ ## 2 0.005405405 185 ER- ## 3 0.250000000 4 normal df_fdr ## # A tibble: 2 x 3 ## # groups: ER ## fdr n_fdr ER ## 1 0.04938272 1053 ER+ ## 2 0.04910714 448 ER- glue(&quot;we identified {n_top_ER_pos} promoters in ER+ and {n_top_ER_neg} in ER- (FDR&lt;0.01; {n_fdr_ER_pos} in ER+ and {n_fdr_ER_neg} in ER- if increasing FDR to &lt;0.05)&quot;, n_top_ER_pos = df$n_fdr[df$ER == &quot;ER+&quot;], n_top_ER_neg = df$n_fdr[df$ER == &quot;ER-&quot;], n_fdr_ER_pos = df_fdr$n_fdr[df_fdr$ER == &quot;ER+&quot;], n_fdr_ER_neg = df_fdr$n_fdr[df_fdr$ER == &quot;ER-&quot;]) ## we identified 423 promoters in ER+ and 185 in ER- (FDR&lt;0.01; 1053 in ER+ and 448 in ER- if increasing FDR to &lt;0.05) 10.1.1 Plot correlation of top cis-regulated promoter candidates 10.1.1.1 Figure 3A options(repr.plot.width = 12, repr.plot.height = 3) p_top_cands &lt;- prom_cis_cands %&gt;% filter(r == 1) %&gt;% mutate(diff = abs(best - kth)) %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% arrange(cor) %&gt;% slice(1:50) %&gt;% ggplot(aes(x = reorder(name, cor), y = kth)) + geom_point(size = 0.5, color = &quot;gray&quot;) + xlab(&quot;&quot;) + ylab(&quot;Correlation&quot;) + geom_point(aes(y = cor), color = &quot;red&quot;, size = 0.5) + theme(axis.text.x = element_text(size = 5, angle = 90, hjust = 1)) p_top_cands + theme_bw() + vertical_labs() + theme(aspect.ratio = 0.13) 10.1.1.2 Figure 3B options(repr.plot.width = 4, repr.plot.height = 4) p_diff &lt;- prom_cis_cands %&gt;% mutate(diff = ifelse(r == 1, kth - cor, best - cor)) %&gt;% ggplot(aes(x = diff, y = (1 - ..y..) * nrow(prom_cis_cands))) + stat_ecdf() + scale_y_log10() + ylab(&quot;# of promoters&quot;) + xlab(&quot;Diff&quot;) + geom_vline(xintercept = 0, color = &quot;red&quot;, linetype = &quot;dashed&quot;) + theme(aspect.ratio = 1) p_diff + theme_bw() ## Warning: Transformation introduced infinite values in continuous y-axis 10.1.2 Annotation of cis-regulated promoters loci &lt;- prom_cis_cands %&gt;% group_by(chrom, start, end, name) %&gt;% summarise(type = ifelse(any(r == 1), &quot;reg&quot;, &quot;bg&quot;), .groups = &quot;drop&quot;) %&gt;% group_by(chrom, start, end) %&gt;% summarise(type = ifelse(any(type == &quot;reg&quot;), &quot;reg&quot;, &quot;bg&quot;), .groups = &quot;drop&quot;) loci_annot &lt;- loci %&gt;% select(chrom, start, end, everything()) %&gt;% annotate_loci() %cache_df% here(&quot;data/promoter_cis_cands_loci.tsv&quot;) %&gt;% as_tibble() 10.1.2.1 Extended Data Figure 8B options(repr.plot.width = 4, repr.plot.height = 4) p_cg_cont &lt;- loci_annot %&gt;% distinct(chrom, start, end, type, cg_cont) %&gt;% ggplot(aes(x = cg_cont, color = type, linetype = type)) + geom_density() + scale_color_manual(&quot;&quot;, values = c(&quot;darkgray&quot;, &quot;darkred&quot;), guide = FALSE) + scale_linetype_manual(&quot;&quot;, values = c(&quot;dashed&quot;, &quot;solid&quot;), guide = FALSE) + xlab(&quot;CpG content (500 bp)&quot;) + ylab(&quot;Density&quot;) + theme(aspect.ratio = 1) p_cg_cont ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. loci_annot %&gt;% filter(type == &quot;reg&quot;) %&gt;% mutate(cg_cont = cut(cg_cont, c(0,0.04,0.08,0.2), include.lowest=TRUE)) %&gt;% count(cg_cont) %&gt;% mutate(p = scales::percent(n / sum(n))) ## # A tibble: 3 x 3 ## cg_cont n p ## 1 [0,0.04] 79 16% ## 2 (0.04,0.08] 254 50% ## 3 (0.08,0.2] 170 34% mean_meth &lt;- loci %&gt;% left_join(get_all_summary_meth(), by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) 10.1.2.2 Extended Data Figure 8A options(repr.plot.width = 4, repr.plot.height = 4) df &lt;- mean_meth %&gt;% gather(&quot;ER&quot;, &quot;meth&quot;, -(chrom:end), -type) %&gt;% mutate(ER = factor(ER, levels = c(&quot;normal&quot;, &quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% mutate(type = forcats::fct_recode(type, &quot;Background&quot; = &quot;bg&quot;, &quot;Cis-regulated\\npromoters&quot; = &quot;reg&quot;)) p_meth &lt;- df %&gt;% ggplot(aes(x = type, y = meth, fill = ER)) + geom_boxplot(linewidth=0.1, fatten=0.5, outlier.size = 0.05) + scale_fill_manual(&quot;&quot;, values = annot_colors$ER1, guide = FALSE) + xlab(&quot;&quot;) + ylab(&quot;Methylation&quot;) + theme(aspect.ratio = 1) + vertical_labs() ## Warning: Ignoring unknown parameters: linewidth p_meth + theme_bw() + theme(aspect.ratio = 1) + vertical_labs() ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. mean_meth %&gt;% count(type) ## # A tibble: 2 x 2 ## type n ## 1 bg 8857 ## 2 reg 503 mean_meth %&gt;% gather(&quot;ER&quot;, &quot;meth&quot;, -(chrom:type) ) %&gt;% group_by(type, ER) %&gt;% summarise( m = mean(meth, na.rm=TRUE), sd = sd(meth, na.rm=TRUE), .groups = &quot;drop&quot; ) ## # A tibble: 6 x 4 ## type ER m sd ## 1 bg ER- 0.08122300 0.1712618 ## 2 bg ER+ 0.08793721 0.1776411 ## 3 bg normal 0.06807298 0.1683802 ## 4 reg ER- 0.18820936 0.2144194 ## 5 reg ER+ 0.20382981 0.2206950 ## 6 reg normal 0.15027054 0.2219690 mean_meth %&gt;% gather(&quot;ER&quot;, &quot;meth&quot;, -(chrom:type) ) %&gt;% mutate(tumor_normal = ifelse(ER == &quot;normal&quot;, &quot;normal&quot;, &quot;tumor&quot;)) %&gt;% group_by(type, tumor_normal) %&gt;% summarise( m = mean(meth, na.rm=TRUE), sd = sd(meth, na.rm=TRUE), .groups = &quot;drop&quot; ) ## # A tibble: 4 x 4 ## type tumor_normal m sd ## 1 bg normal 0.06807298 0.1683802 ## 2 bg tumor 0.08458010 0.1745080 ## 3 reg normal 0.15027054 0.2219690 ## 4 reg tumor 0.19601959 0.2176119 10.1.3 Gene expression of cis-regulated promoters mean_expr &lt;- get_mean_expression() raw_meth &lt;- get_promoter_avg_meth() top_cands &lt;- prom_cis_cands %&gt;% mutate(diff = abs(best - kth)) %&gt;% filter(r == 1) matched_meth &lt;- top_cands %&gt;% distinct(chrom, start, end, name) %&gt;% inner_join(raw_meth) %&gt;% gather(&quot;samp&quot;, &quot;meth&quot;, -(chrom:name)) %&gt;% left_join(samp_data %&gt;% select(samp, patient, ER = ER1)) %&gt;% filter(!is.na(ER)) %&gt;% select(-samp) %&gt;% spread(ER, meth) %&gt;% filter(!is.na(normal)) %&gt;% left_join(top_cands %&gt;% select(name, ER)) %&gt;% mutate(diff = ifelse(ER == &quot;ER+&quot;, `ER+` - normal, `ER-` - normal)) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = &quot;samp&quot; ## Joining, by = &quot;name&quot; matched_meth_df &lt;- matched_meth %&gt;% filter(!is.na(diff)) %&gt;% mutate(diff_grp = cut(diff, breaks = c(-1, -0.2, 0.2, 1), include.lowest = TRUE, labels = c(&quot;hypo&quot;, &quot;stable&quot;, &quot;hyper&quot;))) %&gt;% unite(&quot;name&quot;, name, ER) %&gt;% count(name, diff_grp) %&gt;% group_by(name) %&gt;% mutate(p = n / sum(n)) %&gt;% tidyr::complete(diff_grp, fill = list(p = 0)) %&gt;% filter(!is.na(diff_grp)) %&gt;% mutate(p_hypo = p[diff_grp == &quot;hypo&quot;], p_hyper = p[diff_grp == &quot;hyper&quot;], p_stable = p[diff_grp == &quot;stable&quot;]) %&gt;% ungroup() %&gt;% arrange((p_hypo - p_hyper) / (p_stable + 1)) %&gt;% mutate(name = forcats::fct_inorder(name)) cat(sprintf(&quot;# of meth genes: %s&quot;, matched_meth_df %&gt;% distinct(name) %&gt;% nrow() ) ) ## # of meth genes: 612 10.1.3.1 Figure 3C options(repr.plot.width = 10, repr.plot.height = 4) p_meth_dist &lt;- matched_meth_df %&gt;% ggplot(aes(x = name, y = p, fill = diff_grp)) + geom_col() + scale_fill_manual(&quot;&quot;, values = c(hypo = &quot;darkblue&quot;, stable = &quot;darkgray&quot;, hyper = &quot;darkred&quot;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), aspect.ratio = 0.4) + scale_y_continuous(labels = scales::percent) + ylab(&quot;% of samples&quot;) + xlab(&quot;Cis-regulated promoters&quot;) p_meth_dist + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), aspect.ratio = 0.2) expr_mat &lt;- get_gene_expression_mat() matched_expr &lt;- expr_mat %&gt;% filter(name %in% top_cands$name) %&gt;% gather(&quot;samp&quot;, &quot;expr&quot;, -(chrom:name3.chr)) %&gt;% left_join(samp_data %&gt;% select(samp, patient, ER = ER1)) %&gt;% filter(!is.na(ER)) %&gt;% select(-samp) %&gt;% spread(ER, expr) %&gt;% filter(!is.na(normal)) %&gt;% left_join(top_cands %&gt;% select(name, ER)) ## Joining, by = &quot;samp&quot; ## Joining, by = &quot;name&quot; matched_expr &lt;- matched_expr %&gt;% mutate(diff = ifelse(ER == &quot;ER+&quot;, `ER+` - normal, `ER-` - normal)) matched_expr_df &lt;- matched_expr %&gt;% filter(!is.na(diff)) %&gt;% mutate(diff_grp = cut(diff, breaks = c(-20, -1, 1, 20), include.lowest = TRUE, labels = c(&quot;repressed&quot;, &quot;stable&quot;, &quot;induced&quot;))) %&gt;% unite(&quot;name&quot;, name, ER) %&gt;% count(name, diff_grp) %&gt;% group_by(name) %&gt;% mutate(p = n / sum(n)) %&gt;% tidyr::complete(diff_grp, fill = list(p = 0)) %&gt;% filter(!is.na(diff_grp)) %&gt;% mutate(p_repressed = p[diff_grp == &quot;repressed&quot;], p_induced = p[diff_grp == &quot;induced&quot;], p_stable = p[diff_grp == &quot;stable&quot;]) %&gt;% ungroup() %&gt;% arrange((p_induced - p_repressed) / (p_stable + 1)) %&gt;% mutate(name = forcats::fct_inorder(name)) cat(sprintf(&quot;# of expr genes: %s&quot;, matched_expr_df %&gt;% distinct(name) %&gt;% nrow() ) ) ## # of expr genes: 612 10.1.3.2 Figure 3D options(repr.plot.width = 10, repr.plot.height = 4) p_expr_dist &lt;- matched_expr_df %&gt;% mutate(diff_grp = factor(diff_grp, levels = rev(c(&quot;repressed&quot;, &quot;stable&quot;, &quot;induced&quot;)))) %&gt;% ggplot(aes(x = name, y = p, fill = diff_grp)) + geom_col() + scale_fill_manual(&quot;&quot;, values = c(repressed = &quot;darkred&quot;, stable = &quot;darkgray&quot;, induced = &quot;darkblue&quot;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), aspect.ratio = 0.4) + scale_y_continuous(labels = scales::percent) + ylab(&quot;% of samples&quot;) + xlab(&quot;Cis-regulated promoters&quot;) p_expr_dist + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), aspect.ratio = 0.2) 10.1.4 Correlation between cis-regulated genes 10.1.4.1 Extended Data Figure 8C cands_expr &lt;- expr_mat %&gt;% filter(name %in% (top_cands %&gt;% filter(ER == &quot;ER+&quot;) %&gt;% pull(name))) %&gt;% select(any_of(c(&quot;name&quot;, ER_positive_samples))) %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;name&quot;) %&gt;% as.matrix() cm &lt;- tgs_cor(t(cands_expr), pairwise.complete.obs = TRUE) hc &lt;- hclust(tgs_dist(cm), method = &quot;ward.D2&quot;) options(repr.plot.width = 10, repr.plot.height = 10) p_cor &lt;- tgutil::tgplot_heatmap(cm[hc$order, hc$order]) + scale_fill_gradientn(&quot;Correlation&quot;, colors = c(&quot;darkred&quot;, &quot;white&quot;, &quot;darkblue&quot;), limits = c(-1, 1)) + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), aspect.ratio = 1) ## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if `.name_repair` is omitted as of tibble 2.0.0. ## Using compatibility `.name_repair`. p_cor dim(cm) ## [1] 423 423 options(repr.plot.width = 4, repr.plot.height = 4) cm1 &lt;- cm diag(cm1) &lt;- NA maxs &lt;- matrixStats::rowMaxs(cm1, na.rm=TRUE) sum(maxs &lt; 0.5) ## [1] 392 plot(density(maxs)) 10.2 Epipolymorphism of cis-regulated promoters prom_epipoly &lt;- get_promoter_cis_reg_epipoly() 10.2.0.1 Figure 3F options(repr.plot.width = 10, repr.plot.height = 6) p_prom_epipoly &lt;- prom_epipoly %&gt;% mutate(pat_meth = cut(pat_meth, seq(0.05, 1, 0.1), include.lowest = TRUE)) %&gt;% filter(!is.na(pat_meth)) %&gt;% filter(!is.na(epipoly), !is.na(type)) %&gt;% ggplot(aes(x = pat_meth, y = epipoly, fill = type)) + geom_boxplot(outlier.shape = NA, outlier.size = 0.05, lwd =0.1) + scale_fill_manual(values = c(bg = &quot;gray&quot;, reg = &quot;darkred&quot;), guide = FALSE) + vertical_labs() + xlab(&quot;Promoter methylation&quot;) + ylab(&quot;Epipolymorphism&quot;) + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, hide.ns = TRUE, method = &quot;wilcox.test&quot;, method.args = list(alternative = &quot;less&quot;)) + theme(aspect.ratio = 0.6) p_prom_epipoly + theme_bw() + vertical_labs() + theme(aspect.ratio = 0.6) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. 10.3 Promoter examples 10.3.1 BRCA1 brca_cors &lt;- methylayer:::gene_promoter_cors(&quot;BRCA1&quot;, ER_negative_prom_mat, expr_mat_f, prom_intervs_f) 10.3.1.1 Extended Data Figure 8E options(repr.plot.width = 4, repr.plot.height = 7) p_brca_gene_cors &lt;- brca_cors %&gt;% slice(1:25) %&gt;% ggplot(aes(x=reorder(promoter, -cor), y=cor)) + geom_col() + ylab(&quot;Correlation to BRCA1 expression in ER-&quot;) + xlab(&quot;Promoters&quot;) + coord_flip() p_brca_gene_cors + theme_bw() 10.3.1.2 Figure 3E genes &lt;- c(&quot;KRT7&quot;, &quot;CABP4&quot;, &quot;BRCA1&quot;) prom_cis_cands &lt;- fread(here(&quot;data/promoter_cis_cands.tsv&quot;)) %&gt;% as_tibble() example_cands &lt;- map_dfr(genes, ~ get_promoter_cand_interval(prom_cis_cands, .x, &quot;ER+&quot;)) ## Joining, by = c(&quot;name&quot;, &quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = &quot;full_name&quot; ## Joining, by = c(&quot;name&quot;, &quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = &quot;full_name&quot; ## Joining, by = c(&quot;name&quot;, &quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = &quot;full_name&quot; cg_meth &lt;- get_cis_promoter_examples_cg_meth(genes = genes) options(repr.plot.width = 12, repr.plot.height = 7) krt7_p &lt;- plot_cis_promoter_example(example_cands %&gt;% filter(name == &quot;KRT7&quot;), cg_meth, &quot;ER+&quot;, resolution = 5e3, plot_all_tss_lines = TRUE) ## Joining, by = c(&quot;samp&quot;, &quot;name&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family ## &#39;Arial&#39; not found in PostScript font database krt7_p options(repr.plot.width = 12, repr.plot.height = 7) brca1_p &lt;- plot_cis_promoter_example(example_cands %&gt;% filter(name == &quot;BRCA1&quot;), cg_meth, &quot;ER-&quot;, resolution = 5e3, plot_all_tss_lines = TRUE) ## Joining, by = c(&quot;samp&quot;, &quot;name&quot;) ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Warning in cor(expr, avg_m, use = &quot;pairwise.complete.obs&quot;): the standard ## deviation is zero ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. brca1_p 10.4 Cis candidates: genomic We use methylayer to identify non promoter regions that are correlated in cis to expression of any gene within their vicinity. ER_positive_genomic_mat &lt;- non_prom_meth %&gt;% select(chrom:end, any_of(ER_positive_samples)) %&gt;% intervs_to_mat() ER_negative_genomic_mat &lt;- non_prom_meth %&gt;% select(chrom:end, any_of(ER_negative_samples)) %&gt;% intervs_to_mat() normal_genomic_mat &lt;- non_prom_meth %&gt;% select(chrom:end, any_of(normal_samples)) %&gt;% intervs_to_mat() dim(ER_positive_genomic_mat) ## [1] 185389 1108 dim(ER_negative_genomic_mat) ## [1] 185389 310 dim(normal_genomic_mat) ## [1] 185389 92 gene_tss &lt;- get_gene_tss_coord() genomic_cands_ER_pos &lt;- cis_em_genomic(ER_positive_genomic_mat, expr_mat_f, gene_tss, min_samples=50, max_dist = 5e5, min_dist = 200) %&gt;% mutate(ER = &quot;ER+&quot;) %cache_df% here(&quot;data/genomic_cis_cands_ER_positive.tsv&quot;) genomic_cands_ER_neg &lt;- cis_em_genomic(ER_negative_genomic_mat, expr_mat_f, gene_tss, min_samples=50, max_dist = 5e5, min_dist = 200) %&gt;% mutate(ER = &quot;ER-&quot;) %cache_df% here(&quot;data/genomic_cis_cands_ER_negative.tsv&quot;) genomic_cands_normals &lt;- cis_em_genomic(normal_genomic_mat, expr_mat_f, gene_tss, min_samples=50, max_dist = 5e5, min_dist = 200) %&gt;% mutate(ER = &quot;normal&quot;) %cache_df% here(&quot;data/genomic_cis_cands_normal.tsv&quot;) genomic_cis_cands &lt;- bind_rows( genomic_cands_ER_pos, genomic_cands_ER_neg, genomic_cands_normals) %&gt;% as_tibble() head(genomic_cis_cands) ## # A tibble: 6 x 16 ## chrom start end type rank gene cor chrom_expr start_expr ## 1 chr1 10496 10587 obs 1 CT45A3 -0.2446525 chrX 134883487 ## 2 chr1 10588 10639 obs 1 DSCR8 -0.1658337 chr21 39493544 ## 3 chr1 134998 135215 obs 1 MAGEC2 -0.2381125 chrX 141293076 ## 4 chr1 546168 546310 obs 1 MAGEA8 -0.2542376 chrX 149009940 ## 5 chr1 565396 565791 obs 1 RAD51C -0.2153869 chr17 56769933 ## 6 chr1 567121 567237 obs 1 TIMM23 -0.2271249 chr10 51623386 ## end_expr strand_expr dist n_obs n_shuff fdr ER ## 1 134883488 1 NA 2680 92 0.03432836 ER+ ## 2 39493545 1 NA 2680 92 0.03432836 ER+ ## 3 141293077 -1 NA 2680 92 0.03432836 ER+ ## 4 149009941 1 NA 2680 92 0.03432836 ER+ ## 5 56769934 1 NA 2680 92 0.03432836 ER+ ## 6 51623387 -1 NA 2680 92 0.03432836 ER+ dim(genomic_cis_cands) ## [1] 55616700 16 dim(expr_mat_f) ## [1] 24051 2124 10.4.1 Plot % cis 10.4.1.1 Figure 3G options(repr.plot.width = 4, repr.plot.height = 4) p_cis &lt;- genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(rank == 1) %&gt;% group_by(type, ER) %&gt;% summarise(n = n(), n_na = sum(is.na(dist))) %&gt;% mutate(p = 1 - (n_na / n)) %&gt;% mutate(label = glue(&quot;{scales::comma(n_na)}/{scales::comma(n)}&quot;)) %&gt;% ggplot(aes(x = ER, y = p, fill = type, label = label)) + geom_col(width = 0.7, position = position_dodge(width = 0.8)) + scale_y_continuous(label = function(x) scales::percent(x, accuracy = 1)) + ylab(&quot;% Cis&quot;) + scale_fill_manual(values = c(shuff = &quot;darkgray&quot;, obs = &quot;darkred&quot;), guide = FALSE) + xlab(&quot;&quot;) p_cis + theme_bw() ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. 10.4.2 Plot distance to most correlated gene options(repr.plot.width = 10, repr.plot.height = 4) p_cis_decay &lt;- genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(dist), is.finite(dist)) %&gt;% filter(rank == 1) %&gt;% ggplot(aes(x = abs(dist), color = type, linetype = type)) + stat_ecdf() + scale_color_manual(&quot;&quot;, values = c(shuff = &quot;darkgray&quot;, obs = &quot;darkred&quot;), guide = FALSE) + scale_linetype_manual(&quot;&quot;, values = c(shuff = &quot;dashed&quot;, obs = &quot;solid&quot;), guide = FALSE) + scale_x_log10(labels = c(&quot;TSS&quot;, &quot;100&quot;, &quot;10K&quot;, &quot;1M&quot;, &quot;100M&quot;), breaks = c(1, 100, 1e4, 1e6, 1e8), limits = c(1, 1e9)) + scale_y_continuous(labels = scales::percent) + theme(aspect.ratio = 0.7) + xlab(&quot;Distance to gene (bp)&quot;) + ylab(&quot;% of loci&quot;) p_cis_decay + facet_wrap(~ER) + theme_bw() + theme(aspect.ratio = 0.7) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. options(repr.plot.width = 5, repr.plot.height = 4) p_cis_decay + theme_bw() + theme(aspect.ratio = 0.7) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(dist), is.finite(dist)) %&gt;% filter(rank == 1) %&gt;% group_by(ER) %&gt;% summarise(pval = ks.test(dist[type == &quot;obs&quot;], dist[type == &quot;shuff&quot;])$p.value) ## Warning in ks.test(dist[type == &quot;obs&quot;], dist[type == &quot;shuff&quot;]): p-value will be ## approximate in the presence of ties ## Warning in ks.test(dist[type == &quot;obs&quot;], dist[type == &quot;shuff&quot;]): p-value will be ## approximate in the presence of ties ## # A tibble: 2 x 2 ## ER pval ## 1 ER+ 0 ## 2 ER- 0 min_dist &lt;- 200 distances &lt;- c(5e4, 5e5, 1e6) map_dfr(distances, function(max_dist) genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(dist)) %&gt;% filter(rank == 1) %&gt;% group_by(ER, type) %&gt;% summarise(n_tot = n(), n = sum(abs(dist) &lt;= max_dist &amp; abs(dist) &gt;= min_dist)) %&gt;% mutate(p = n / n_tot) %&gt;% pivot_wider(names_from=&quot;type&quot;, values_from = c(&quot;n_tot&quot;, &quot;p&quot;, &quot;n&quot;)) %&gt;% mutate(fdr = n_shuff / n_obs, max_dist = max_dist) ) %&gt;% arrange(ER, max_dist) ## # A tibble: 6 x 9 ## # groups: ER ## ER n_tot_obs n_tot_shuff p_obs p_shuff n_obs n_shuff fdr ## 1 ER+ 15798 8786 0.11893911 0.001479627 1879 13 0.006918574 ## 2 ER+ 15798 8786 0.16964173 0.010471204 2680 92 0.034328358 ## 3 ER+ 15798 8786 0.19230282 0.022877305 3038 201 0.066161949 ## 4 ER- 11951 8936 0.07271358 0.001342883 869 12 0.013808976 ## 5 ER- 11951 8936 0.11145511 0.010295434 1332 92 0.069069069 ## 6 ER- 11951 8936 0.13906786 0.020255148 1662 181 0.108904934 ## max_dist ## 1 50000 ## 2 500000 ## 3 1000000 ## 4 50000 ## 5 500000 ## 6 1000000 genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(dist)) %&gt;% filter(rank == 1) %&gt;% group_by(ER, type) %&gt;% summarise(n_tot = n(), n = sum(abs(dist) &lt;= 5e5 &amp; abs(dist) &gt;= 5e4)) %&gt;% mutate(p = n / n_tot) %&gt;% pivot_wider(names_from=&quot;type&quot;, values_from = c(&quot;n_tot&quot;, &quot;p&quot;, &quot;n&quot;)) %&gt;% mutate(fdr = n_shuff / n_obs) ## # A tibble: 2 x 8 ## # groups: ER ## ER n_tot_obs n_tot_shuff p_obs p_shuff n_obs n_shuff fdr ## 1 ER+ 15798 8786 0.05070262 0.008991578 801 79 0.09862672 ## 2 ER- 11951 8936 0.03874153 0.008952551 463 80 0.17278618 genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(dist)) %&gt;% filter(rank == 1) %&gt;% group_by(ER, type) %&gt;% summarise(n_tot = n(), n = sum(abs(dist) &lt;= 5e5 &amp; abs(dist) &gt;= min_dist)) %&gt;% mutate(p = n / n_tot) %&gt;% pivot_wider(names_from=&quot;type&quot;, values_from = c(&quot;n_tot&quot;, &quot;p&quot;, &quot;n&quot;)) %&gt;% mutate(fdr = n_shuff / n_obs) ## # A tibble: 2 x 8 ## # groups: ER ## ER n_tot_obs n_tot_shuff p_obs p_shuff n_obs n_shuff fdr ## 1 ER+ 15798 8786 0.1696417 0.01047120 2680 92 0.03432836 ## 2 ER- 11951 8936 0.1114551 0.01029543 1332 92 0.06906907 genomic_cands &lt;- genomic_cis_cands %&gt;% filter(ER != &quot;normal&quot;) %&gt;% filter( rank == 1, type == &quot;obs&quot;, !is.na(dist), abs(dist) &gt;= 200 ) genomic_cands %&gt;% filter(abs(dist) &lt;= 5e5) %&gt;% distinct(chrom, start, end, ER) %&gt;% count(ER) ## # A tibble: 2 x 2 ## ER n ## 1 ER- 1332 ## 2 ER+ 2680 n_tot &lt;- genomic_cands %&gt;% filter(abs(dist) &lt;= 5e5) %&gt;% distinct(chrom, start, end) %&gt;% nrow() n_50k &lt;- genomic_cands %&gt;% filter(abs(dist) &lt;= 5e4) %&gt;% distinct(chrom, start, end) %&gt;% nrow() n_50k_to_500k &lt;- genomic_cands %&gt;% filter(abs(dist) &gt;= 5e4, abs(dist) &lt;= 5e5) %&gt;% distinct(chrom, start, end) %&gt;% nrow() print(glue(&quot;total number of candidates (dist &lt;= 500k): {n_tot}.\\nOut of which {scales::percent(n_50k / n_tot)} are located within 50kb of the promoter and {scales::percent(n_50k_to_500k / n_tot)} from 50kb to 500kb from the promoter&quot;)) ## total number of candidates (dist &lt;= 500k): 3482. ## Out of which 67% are located within 50kb of the promoter and 34% from 50kb to 500kb from the promoter 10.5 Epipolymorphism of cis-regulated genomic 10.5.0.1 Extended Data Figure 8D gen_epi &lt;- get_genomic_cis_reg_epipoly() options(repr.plot.width = 10, repr.plot.height = 6) p_gen_epipoly &lt;- gen_epi %&gt;% mutate(pat_meth = cut(pat_meth, seq(0.05, 1, 0.1), include.lowest = TRUE)) %&gt;% filter(!is.na(pat_meth)) %&gt;% filter(!is.na(epipoly), !is.na(type)) %&gt;% ggplot(aes(x = pat_meth, y = epipoly, fill = type)) + geom_boxplot(outlier.shape = NA, outlier.size = 0.05, lwd =0.1) + scale_fill_manual(values = c(bg = &quot;gray&quot;, reg = &quot;darkred&quot;), guide = FALSE) + vertical_labs() + xlab(&quot;Loci methylation&quot;) + ylab(&quot;Epipolymorphism&quot;) + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, hide.ns = TRUE, method = &quot;wilcox.test&quot;, method.args = list(alternative = &quot;less&quot;)) + theme(aspect.ratio = 0.6) p_gen_epipoly + theme_bw() + vertical_labs() + theme(aspect.ratio = 0.6) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. 10.6 Examples for cis regulation (non-promoters) genes &lt;- c(&quot;DNMT3A&quot;, &quot;GATA3&quot;, &quot;TBX1&quot;, &quot;FGFR4&quot;, &quot;PAX8&quot;) min_dist &lt;- 1e5 min_tss_dist &lt;- 2e3 top_cands &lt;- genomic_cis_cands %&gt;% filter(gene %in% genes, type == &quot;obs&quot;, rank == 1, !is.na(dist),abs(dist) &lt;= min_dist, abs(dist) &gt;= min_tss_dist) %&gt;% arrange(gene, cor) %&gt;% group_by(gene) %&gt;% slice(1) %&gt;% ungroup() top_cands ## # A tibble: 5 x 16 ## chrom start end type rank gene cor chrom_expr start_expr ## 1 chr2 25500066 25500185 obs 1 DNMT3A -0.4868497 chr2 25475184 ## 2 chr5 176536239 176536567 obs 1 FGFR4 -0.5220844 chr5 176513872 ## 3 chr10 8110463 8110569 obs 1 GATA3 -0.5098628 chr10 8096666 ## 4 chr2 113993163 113993302 obs 1 PAX8 -0.6831847 chr2 114036498 ## 5 chr22 19749606 19749740 obs 1 TBX1 -0.5967496 chr22 19744225 ## end_expr strand_expr dist n_obs n_shuff fdr ER ## 1 25475185 -1 -24881 2680 92 0.03432836 ER+ ## 2 176513873 1 22366 1331 92 0.06912096 ER- ## 3 8096667 1 13796 1331 92 0.06912096 ER- ## 4 114036499 -1 43196 2680 92 0.03432836 ER+ ## 5 19744226 1 5380 2680 92 0.03432836 ER+ meth_df &lt;- get_cis_genomic_examples_cg_meth(genes = genes, scope = 2e4, min_dist = min_dist, min_tss_dist = min_tss_dist) %&gt;% distinct(chrom, start, end, samp, cov, meth, ER) expr_mat &lt;- get_gene_expression_mat() %&gt;% filter(name %in% genes) %&gt;% select(-(chrom:end), -name3.chr) %&gt;% column_to_rownames(&#39;name&#39;) %&gt;% as.matrix() expr_df &lt;- expr_mat %&gt;% gather_matrix(x = &quot;samp&quot;, y = &quot;gene&quot;, val = &quot;expr&quot;) top_cands ## # A tibble: 5 x 16 ## chrom start end type rank gene cor chrom_expr start_expr ## 1 chr2 25500066 25500185 obs 1 DNMT3A -0.4868497 chr2 25475184 ## 2 chr5 176536239 176536567 obs 1 FGFR4 -0.5220844 chr5 176513872 ## 3 chr10 8110463 8110569 obs 1 GATA3 -0.5098628 chr10 8096666 ## 4 chr2 113993163 113993302 obs 1 PAX8 -0.6831847 chr2 114036498 ## 5 chr22 19749606 19749740 obs 1 TBX1 -0.5967496 chr22 19744225 ## end_expr strand_expr dist n_obs n_shuff fdr ER ## 1 25475185 -1 -24881 2680 92 0.03432836 ER+ ## 2 176513873 1 22366 1331 92 0.06912096 ER- ## 3 8096667 1 13796 1331 92 0.06912096 ER- ## 4 114036499 -1 43196 2680 92 0.03432836 ER+ ## 5 19744226 1 5380 2680 92 0.03432836 ER+ 10.6.0.1 Figure 3H genes &lt;- top_cands$gene ERs &lt;- top_cands$ER print(genes) ## [1] &quot;DNMT3A&quot; &quot;FGFR4&quot; &quot;GATA3&quot; &quot;PAX8&quot; &quot;TBX1&quot; print(ERs) ## [1] &quot;ER+&quot; &quot;ER-&quot; &quot;ER-&quot; &quot;ER+&quot; &quot;ER+&quot; cis_examples &lt;- list() for (i in 1:length(genes)){ print(genes[i]) try(cis_examples[[genes[i]]] &lt;- plot_cis_genomic_example(df = top_cands, gene = genes[i], expr_df = expr_df, meth_df = meth_df, ofn=NULL, k_smooth = 40, ER = ERs[i], scope_start = 8e3, scope_end = 1e4, add_pval = FALSE) ) print(cis_examples[[genes[i]]] ) } ## [1] &quot;DNMT3A&quot; ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## [1] &quot;FGFR4&quot; ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## [1] &quot;GATA3&quot; ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. ## [1] &quot;PAX8&quot; ## Joining, by = &quot;samp&quot; ## Error : Problem with `mutate()` column `cor`. ## ℹ `cor = cor(meth, expr, use = &quot;pairwise.complete.obs&quot;, method = &quot;spearman&quot;)`. ## ✖ both &#39;x&#39; and &#39;y&#39; must be non-empty ## NULL ## [1] &quot;TBX1&quot; ## Joining, by = &quot;samp&quot; ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4757123 254.1 8047402 429.8 8047402 429.8 ## Vcells 3046602467 23243.8 4790175246 36546.2 3990373295 30444.2 "],["x-dosage-compensation.html", "11 X dosage compensation 11.1 X analysis 11.2 autosome analysis 11.3 Checking dosage compensation on all X loci 11.4 % of X lost 11.5 Plot Expression-Methylation correlation for X", " 11 X dosage compensation source(here::here(&quot;scripts/init.R&quot;)) We start by looking at the CNA data options(repr.plot.width = 8, repr.plot.height = 4) p1 &lt;- cna %&gt;% ggplot(aes(x=cna_val)) + geom_density() + xlim(0,5) + geom_vline(xintercept=c(0,0.5, 1.5, 2.5, 3.5, 4.5), color=&quot;red&quot;) p2 &lt;- cna %&gt;% ggplot(aes(x=cna_val, color=factor(cna_round))) + geom_density() + xlim(0,5) + guides(color=FALSE) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. p1 + p2 ## Warning: Removed 12192 rows containing non-finite values (stat_density). ## Warning: Removed 12192 rows containing non-finite values (stat_density). 11.1 X analysis We then go to extract loci that are associated with xist expression xist_loci &lt;- get_xist_loci() xist_loci_meth &lt;- get_xist_loci_meth() ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) xist_meth &lt;- xist_loci_meth %&gt;% group_by(samp) %&gt;% summarise(meth = mean(meth, na.rm = TRUE)) xist_expr &lt;- get_gene_expression_mat() %&gt;% filter(name == &quot;XIST&quot;) %&gt;% gather(&quot;samp&quot;, &quot;expr&quot;, -(chrom:name3.chr)) xist_loci_expr &lt;- get_xist_loci_expr() ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) df &lt;- xist_meth %&gt;% left_join(xist_expr %&gt;% select(samp, expr)) %&gt;% left_join(samp_data %&gt;% select(samp, ER = ER1)) %&gt;% filter(!is.na(ER)) ## Joining, by = &quot;samp&quot; ## Joining, by = &quot;samp&quot; head(xist_loci) ## # A tibble: 6 x 3 ## chrom start end ## 1 chrX 9983293 9983844 ## 2 chrX 11776199 11776750 ## 3 chrX 14891025 14891576 ## 4 chrX 16964312 16964863 ## 5 chrX 17393041 17393592 ## 6 chrX 18443223 18443774 count(xist_loci, chrom) ## # A tibble: 1 x 2 ## chrom n ## 1 chrX 615 We show that Xist expression is correlated with XIST loci methylation head(df) ## # A tibble: 6 x 4 ## samp meth expr ER ## 1 MB_0006 0.3131481 8.088802 ER+ ## 2 MB_0028 0.1560928 6.482577 ER+ ## 3 MB_0030 0.3030659 NA ER+ ## 4 MB_0035 0.1877706 6.406843 ER- ## 5 MB_0040 0.2148237 NA ER+ ## 6 MB_0046 0.1631259 6.652839 ER+ 11.1.0.1 Extended Data Figure 9B options(repr.plot.width = 7, repr.plot.height = 7) df %&gt;% group_by(ER) %&gt;% summarise(cor = cor(meth, expr, use=&quot;pairwise.complete.obs&quot;)) ## # A tibble: 3 x 2 ## ER cor ## 1 ER- 0.6021123 ## 2 ER+ 0.5171663 ## 3 normal 0.4914330 p_xist_meth_cor &lt;- df %&gt;% arrange(sample(samp)) %&gt;% ggplot(aes(x = meth, y = expr, color = ER)) + geom_point(size=0.2) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlab(&quot;Methylation&quot;) + ylab(&quot;Xist expression&quot;) + annotate(&quot;text&quot;, x = 0.45, y = 6, label = sprintf(&quot;~ rho == %0.2f&quot;, cor(df$meth, df$expr, method = &quot;spearman&quot;, use = &quot;pairwise.complete.obs&quot;)), parse = TRUE, size = 2, family = &quot;Arial&quot;) p_xist_meth_cor ## Warning: Removed 263 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. Moving on to look at the methylation in different CNA regimes get_xist_cna ## function () ## { ## xist_cna &lt;- get_xist_loci() %&gt;% gintervals.neighbors1(cna %&gt;% ## mutate(end = ifelse(start == end, start + 1, end)) %&gt;% ## filter(chrom == &quot;chrX&quot;), maxneighbors = nrow(samp_data)) %&gt;% ## filter(dist == 0) %&gt;% select(chrom, start, end, samp, ## cna = cna_round) ## xist_cna &lt;- xist_cna %&gt;% mutate(cna_grp = cut(cna, breaks = c(-1, ## 0, 1, 2, 10), labels = c(&quot;0N&quot;, &quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% ## filter(cna_grp != &quot;0N&quot;) %&gt;% left_join(samp_data %&gt;% select(samp, ## ER = ER1)) ## return(xist_cna) ## } xist_cna &lt;- get_xist_cna() ## Joining, by = &quot;samp&quot; xist_cna %&gt;% count(cna) %&gt;% ggplot(aes(x=factor(cna), y=n)) + geom_col() + theme_bw() Plotting the distribution of loci 11.1.0.2 Extended Data Figure 9D options(repr.plot.width = 8, repr.plot.height = 5) df &lt;- xist_cna %&gt;% left_join(get_xist_loci_meth()) %&gt;% group_by(cna_grp, ER, chrom, start, end) %&gt;% summarise(meth = mean(meth, na.rm = TRUE)) %&gt;% filter(!is.na(ER)) %&gt;% mutate(cna_grp = factor(cna_grp, levels = c(&quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;))) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) p_boxp_meth_cna &lt;- df %&gt;% ggplot(aes(x = cna_grp, y = meth, fill = ER, group = cna_grp)) + # ggrastr::geom_boxplot_jitter(outlier.size = 0.1, outlier.jitter.width = 0.01, raster=TRUE) + geom_boxplot(linewidth=0.1, fatten=0.5, outlier.size=0.1) + scale_fill_manual(values = annot_colors$ER1, guide = FALSE) + xlab(&quot;&quot;) + ylab(&quot;Methylation in Xist\\nassociated promoters&quot;) + facet_grid(. ~ ER) + ylim(0, 1.1) + theme( panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() ) ## Warning: Ignoring unknown parameters: linewidth p_boxp_meth_cna + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;)))+ theme_bw() ## Warning: Removed 2016 rows containing non-finite values (stat_boxplot). ## Warning: Removed 2016 rows containing non-finite values (stat_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. p_boxp_meth_cna + ggpubr::stat_compare_means(comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;)))+ theme_bw() ## Warning: Removed 2016 rows containing non-finite values (stat_boxplot). ## Warning: Removed 2016 rows containing non-finite values (stat_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. df %&gt;% ungroup() %&gt;% distinct(chrom, start, end, ER, cna_grp) %&gt;% count(ER, cna_grp) ## # A tibble: 6 x 3 ## ER cna_grp n ## 1 ER+ 1N 615 ## 2 ER+ 2N 615 ## 3 ER+ &gt;=3N 615 ## 4 ER- 1N 615 ## 5 ER- 2N 615 ## 6 ER- &gt;=3N 615 xist_cna %&gt;% distinct(cna_grp, samp, ER) %&gt;% count(cna_grp, ER) ## # A tibble: 6 x 3 ## cna_grp ER n ## 1 1N ER- 181 ## 2 1N ER+ 444 ## 3 2N ER- 269 ## 4 2N ER+ 988 ## 5 &gt;=3N ER- 135 ## 6 &gt;=3N ER+ 413 We now move to show scatters of loci in different CNA regimes get_xist_meth_cna ## function () ## { ## get_xist_cna() %&gt;% inner_join(get_xist_loci_meth()) %&gt;% group_by(chrom, ## start, end, ER, cna_grp) %&gt;% summarise(meth = mean(meth, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, meth) ## } xist_meth_cna &lt;- get_xist_meth_cna() ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) head(xist_meth_cna) ## # A tibble: 6 x 7 ## chrom start end ER 1N 2N &gt;=3N ## 1 chrX 9983293 9983844 ER- 0.2078918 0.3067645 0.3205268 ## 2 chrX 9983293 9983844 ER+ 0.1944013 0.3302692 0.3235067 ## 3 chrX 11683770 11684321 ER- 0.2001634 0.2802105 0.2939960 ## 4 chrX 11683770 11684321 ER+ 0.2885676 0.3238455 0.3123392 ## 5 chrX 11776199 11776750 ER- 0.3316496 0.4977368 0.5313945 ## 6 chrX 11776199 11776750 ER+ 0.3403706 0.5048260 0.5023405 11.1.0.3 Extended Data Figure 9E p_scatter_meth_cna_2_3 &lt;- xist_meth_cna %&gt;% ggplot(aes(x = `2N`, y = `&gt;=3N`, color = ER)) + # ggrastr::geom_point_rast(size = 0.2, raster.width = 1, raster.height = 1) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(0, 0.65) + ylim(0, 0.65) #+ # annotate(&quot;text&quot;, x = 0.5, y = 0.1, label = paste(&quot;rho = &quot;, round(cor(xist_meth_cna$`2N`, xist_meth_cna$`&gt;=3N`, use = &quot;pairwise.complete.obs&quot;), digits = 3)), size = 2, family = &quot;Arial&quot;) p_scatter_meth_cna_1_2 &lt;- xist_meth_cna %&gt;% ggplot(aes(x = `1N`, y = `2N`, color = ER)) + # ggrastr::geom_point_rast(size = 0.2, raster.width = 1, raster.height = 1) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(0, 0.65) + ylim(0, 0.65) #+ # annotate(&quot;text&quot;, x = 0.5, y = 0.1, label = paste(&quot;rho = &quot;, round(cor(xist_meth_cna$`1N`, xist_meth_cna$`2N`, use = &quot;pairwise.complete.obs&quot;), digits = 3)), size = 2, family = &quot;Arial&quot;) (p_scatter_meth_cna_1_2 + theme_bw() + theme(aspect.ratio = 1)) + (p_scatter_meth_cna_2_3 + theme_bw() + theme(aspect.ratio = 1)) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. p_scatter_meth_cna_2_3 + facet_wrap(~ER) + theme_bw() + theme(aspect.ratio = 1) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. Same with expression: get_xist_expr_cna ## function () ## { ## get_xist_cna() %&gt;% inner_join(get_xist_loci_expr()) %&gt;% group_by(chrom, ## start, end, ER, cna_grp) %&gt;% summarise(expr = mean(expr, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, expr) ## } xist_expr_cna &lt;- get_xist_expr_cna() ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) head(xist_expr_cna) ## # A tibble: 6 x 7 ## chrom start end ER 1N 2N &gt;=3N ## 1 chrX 9983293 9983844 ER- 7.880753 7.976930 8.193818 ## 2 chrX 9983293 9983844 ER+ 7.770670 7.811101 8.114064 ## 3 chrX 14891025 14891576 ER- 7.175153 7.258638 7.427273 ## 4 chrX 14891025 14891576 ER+ 7.268545 7.233742 7.451081 ## 5 chrX 14891133 14891684 ER- 6.111207 6.018312 6.172959 ## 6 chrX 14891133 14891684 ER+ 5.900340 5.859142 5.912923 11.1.0.4 Extended Data Figure 9F p_scatter_expr_cna_2_3 &lt;- xist_expr_cna %&gt;% ggplot(aes(x = `2N`, y = `&gt;=3N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(5, 14) + ylim(5, 14) p_scatter_expr_cna_1_2 &lt;- xist_expr_cna %&gt;% ggplot(aes(x = `1N`, y = `2N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(5, 14) + ylim(5, 14) p_scatter_expr_cna_1_2 + p_scatter_expr_cna_2_3 ## Warning: Removed 60 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: Removed 60 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. 11.2 autosome analysis get_autosome_loci ## function () ## { ## get_promoter_avg_meth() %&gt;% select(chrom, start, end) %&gt;% ## filter(chrom != &quot;chrX&quot;, chrom != &quot;chrY&quot;) %&gt;% anti_join(get_xist_loci(), ## by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;)) ## } autosome_loci &lt;- get_autosome_loci() get_autosome_cna ## function () ## { ## { ## autosome_cna &lt;- get_autosome_loci() %&gt;% gintervals.neighbors1(cna %&gt;% ## mutate(end = ifelse(start == end, start + 1, end)) %&gt;% ## filter(chrom != &quot;chrX&quot;), maxneighbors = nrow(samp_data)) %&gt;% ## filter(dist == 0) %&gt;% select(chrom, start, end, samp, ## cna = cna_round) ## autosome_cna &lt;- autosome_cna %&gt;% mutate(cna_grp = cut(cna, ## breaks = c(-1, 0, 1, 2, 10), labels = c(&quot;0N&quot;, &quot;1N&quot;, ## &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% filter(cna_grp != &quot;0N&quot;) %&gt;% ## left_join(samp_data %&gt;% select(samp, ER = ER1)) ## autosome_cna ## } %cache_df% here(&quot;data/autosome_cna.tsv&quot;) %&gt;% as_tibble() ## } autosome_cna &lt;- get_autosome_cna() head(autosome_cna) ## # A tibble: 6 x 7 ## chrom start end samp cna cna_grp ER ## 1 chr1 762469 763020 MB_0006 2 2N ER+ ## 2 chr1 762469 763020 MB_0028 1 1N ER+ ## 3 chr1 762469 763020 MB_0035 2 2N ER- ## 4 chr1 762469 763020 MB_0046 2 2N ER+ ## 5 chr1 762469 763020 MB_0050 2 2N ER+ ## 6 chr1 762469 763020 MB_0053 1 1N ER+ get_autosome_loci_meth ## function () ## { ## get_autosome_loci() %&gt;% inner_join(get_promoter_avg_meth()) %&gt;% ## gather(&quot;samp&quot;, &quot;meth&quot;, -(chrom:end)) ## } autosome_loci_meth &lt;- get_autosome_loci_meth() ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) head(autosome_loci_meth) ## chrom start end samp meth ## 1 chr1 762469 763020 MB_0006 0.000000000 ## 2 chr1 762676 763227 MB_0006 0.021929825 ## 3 chr1 860619 861170 MB_0006 0.001870324 ## 4 chr1 895465 896016 MB_0006 0.014367816 ## 5 chr1 901375 901926 MB_0006 0.024253731 ## 6 chr1 948345 948896 MB_0006 0.000000000 Plotting the distribution of loci 11.2.0.1 Extended Data Figure 9G options(repr.plot.width = 8, repr.plot.height = 5) df &lt;- autosome_cna %&gt;% left_join(autosome_loci_meth) %&gt;% group_by(cna_grp, ER, chrom, start, end) %&gt;% summarise(meth = mean(meth, na.rm = TRUE)) %&gt;% filter(!is.na(ER)) %&gt;% mutate(cna_grp = factor(cna_grp, levels = c(&quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;))) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) p_boxp_meth_cna_autosome &lt;- df %&gt;% ggplot(aes(x = cna_grp, y = meth, fill = ER, group = cna_grp)) + # ggrastr::geom_boxplot_jitter(outlier.size = 0.1, outlier.jitter.width = 0.01, raster=TRUE) + geom_boxplot(linewidth=0.1, fatten=0.5, outlier.size = 0.1) + scale_fill_manual(values = annot_colors$ER1, guide = FALSE) + xlab(&quot;&quot;) + ylab(&quot;Methylation in autosomes&quot;) + facet_grid(. ~ ER) + ylim(0, 1.1) + theme( panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() ) ## Warning: Ignoring unknown parameters: linewidth p_boxp_meth_cna_autosome + ggpubr::stat_compare_means(comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;))) ## Warning: Removed 6 rows containing missing values (geom_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. p_boxp_meth_cna_autosome + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;))) ## Warning: Removed 6 rows containing missing values (geom_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. p_boxp_meth_cna_autosome ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. df %&gt;% ungroup() %&gt;% distinct(chrom, start, end, ER) %&gt;% count(ER) ## # A tibble: 2 x 2 ## ER n ## 1 ER+ 15207 ## 2 ER- 15207 autosome_cna %&gt;% distinct(cna_grp, samp, ER) %&gt;% count(ER, cna_grp) ## # A tibble: 6 x 3 ## ER cna_grp n ## 1 ER- &gt;=3N 296 ## 2 ER- 1N 278 ## 3 ER- 2N 293 ## 4 ER+ &gt;=3N 1077 ## 5 ER+ 1N 1060 ## 6 ER+ 2N 1085 We now move to show scatters of loci in different CNA regimes get_autosome_meth_cna ## function () ## { ## { ## auto_df &lt;- get_autosome_cna() %&gt;% inner_join(get_autosome_loci_meth()) %&gt;% ## group_by(chrom, start, end, ER, cna_grp) %&gt;% summarise(meth = mean(meth, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, ## meth) ## auto_df ## } %cache_df% here(&quot;data/autosome_meth_cna.tsv&quot;) %&gt;% as_tibble() ## } autosome_meth_cna &lt;- get_autosome_meth_cna() head(autosome_meth_cna) ## # A tibble: 6 x 7 ## chrom start end ER &gt;=3N 1N 2N ## 1 chr1 762469 763020 ER- 0.007852706 0.008341878 0.007857689 ## 2 chr1 762469 763020 ER+ 0.006506879 0.008089050 0.008125402 ## 3 chr1 762676 763227 ER- 0.028412915 0.021358769 0.026941446 ## 4 chr1 762676 763227 ER+ 0.028590166 0.070967669 0.042346185 ## 5 chr1 762851 763402 ER- 0.029766663 0.022340914 0.029069381 ## 6 chr1 762851 763402 ER+ 0.032413643 0.078736553 0.047128295 11.2.0.2 Extended Data Figure 9H options(repr.plot.width = 5, repr.plot.height = 3) p_scatter_meth_cna_2_3_autosome &lt;- autosome_meth_cna %&gt;% ggplot(aes(x = `2N`, y = `&gt;=3N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + geom_abline(color = &quot;red&quot;, linetype = &quot;dashed&quot;, intercept = 0.1) + geom_abline(color = &quot;red&quot;, linetype = &quot;dashed&quot;, intercept = -0.1) + theme(aspect.ratio = 1) p_scatter_meth_cna_1_2_autosome &lt;- autosome_meth_cna %&gt;% ggplot(aes(x = `1N`, y = `2N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + geom_abline(color = &quot;red&quot;, linetype = &quot;dashed&quot;, intercept = 0.1) + geom_abline(color = &quot;red&quot;, linetype = &quot;dashed&quot;, intercept = -0.1) + theme(aspect.ratio = 1) p_scatter_meth_cna_1_2_autosome + p_scatter_meth_cna_2_3_autosome ## Warning: Removed 5 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. Same with expression: get_autosome_expr_cna ## function () ## { ## { ## auto_df &lt;- get_autosome_cna() %&gt;% inner_join(get_autosome_loci_expr()) %&gt;% ## group_by(chrom, start, end, ER, cna_grp) %&gt;% summarise(expr = mean(expr, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, ## expr) ## auto_df ## } %cache_df% here(&quot;data/autosome_expr_cna.tsv&quot;) %&gt;% as_tibble() ## } autosome_expr_cna &lt;- get_autosome_expr_cna() head(autosome_expr_cna) ## # A tibble: 6 x 7 ## chrom start end ER &gt;=3N 1N 2N ## 1 chr1 762469 763020 ER- NA NA NA ## 2 chr1 762469 763020 ER+ NA NA NA ## 3 chr1 762851 763402 ER- NA NA NA ## 4 chr1 762851 763402 ER+ NA NA NA ## 5 chr1 860619 861170 ER- 5.598424 5.685151 5.844717 ## 6 chr1 860619 861170 ER+ 5.816428 5.804565 5.811422 p_scatter_expr_cna_2_3 &lt;- autosome_expr_cna %&gt;% ggplot(aes(x = `2N`, y = `&gt;=3N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(5, 14) + ylim(5, 14) p_scatter_expr_cna_1_2 &lt;- autosome_expr_cna %&gt;% ggplot(aes(x = `1N`, y = `2N`, color = ER)) + geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + xlim(5, 14) + ylim(5, 14) p_scatter_expr_cna_1_2 + p_scatter_expr_cna_2_3 ## Warning: Removed 5366 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. ## Warning: Removed 5369 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. Looking at the distribution of loci in 2N / &gt;=3N (averaging the samples expression per ER and CNA) get_xist_expr_cna ## function () ## { ## get_xist_cna() %&gt;% inner_join(get_xist_loci_expr()) %&gt;% group_by(chrom, ## start, end, ER, cna_grp) %&gt;% summarise(expr = mean(expr, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, expr) ## } get_autosome_expr_cna ## function () ## { ## { ## auto_df &lt;- get_autosome_cna() %&gt;% inner_join(get_autosome_loci_expr()) %&gt;% ## group_by(chrom, start, end, ER, cna_grp) %&gt;% summarise(expr = mean(expr, ## na.rm = TRUE)) %&gt;% ungroup() %&gt;% spread(cna_grp, ## expr) ## auto_df ## } %cache_df% here(&quot;data/autosome_expr_cna.tsv&quot;) %&gt;% as_tibble() ## } df_fc &lt;- get_xist_expr_cna() %&gt;% mutate(type = &quot;X&quot;) %&gt;% bind_rows(get_autosome_expr_cna() %&gt;% mutate(type = &quot;auto&quot;)) %&gt;% mutate(diff = `&gt;=3N` - `2N`, diff1 = `2N` - `1N`) %&gt;% # filter(ER == &quot;ER+&quot;) filter(ER == &quot;ER-&quot;) ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) head(df_fc) ## # A tibble: 6 x 10 ## chrom start end ER 1N 2N &gt;=3N type diff ## 1 chrX 9983293 9983844 ER- 7.880753 7.976930 8.193818 X 0.216887405 ## 2 chrX 14891025 14891576 ER- 7.175153 7.258638 7.427273 X 0.168634811 ## 3 chrX 14891133 14891684 ER- 6.111207 6.018312 6.172959 X 0.154646592 ## 4 chrX 15353625 15354176 ER- 7.884146 7.926416 8.264637 X 0.338220886 ## 5 chrX 16964312 16964863 ER- 6.916974 7.004652 7.381009 X 0.376356425 ## 6 chrX 17393041 17393592 ER- 6.256066 6.338770 6.347885 X 0.009114449 ## diff1 ## 1 0.09617691 ## 2 0.08348508 ## 3 -0.09289491 ## 4 0.04227070 ## 5 0.08767872 ## 6 0.08270411 11.2.0.3 Extended Data Figure 9I pval &lt;- ks.test(df_fc$diff[df_fc$type == &quot;X&quot;], df_fc$diff[df_fc$type == &quot;auto&quot;])$p.value message(pval) ## 2.47357689886485e-12 fc_p &lt;- df_fc %&gt;% ggplot(aes(color = type, x = diff)) + geom_density(size = 1) + theme(aspect.ratio = 1) + xlab(&quot;log expression fold change (&gt;=3N/2N)&quot;) + ylab(&quot;&quot;) + scale_color_manual(values = c(&quot;X&quot; = &quot;darkblue&quot;, &quot;auto&quot; = &quot;red&quot;)) + coord_cartesian(xlim = c(-0.5, 1)) + theme(aspect.ratio = 1) # annotate(&quot;text&quot;, x = 0.5, y = 4, label = &quot;p&lt;&lt;0.001 (KS)&quot;, size = 2, family = &quot;Arial&quot;) fc_p ## Warning: Removed 2710 rows containing non-finite values (stat_density). pval &lt;- ks.test(df_fc$diff1[df_fc$type == &quot;X&quot;], df_fc$diff1[df_fc$type == &quot;auto&quot;])$p.value message(pval) ## 0 fc_p &lt;- df_fc %&gt;% ggplot(aes(color = type, x = -diff1)) + geom_density(size = 1) + theme(aspect.ratio = 1) + xlab(&quot;log expression fold change (1N/2N)&quot;) + ylab(&quot;&quot;) + scale_color_manual(values = c(&quot;X&quot; = &quot;darkblue&quot;, &quot;auto&quot; = &quot;red&quot;)) + coord_cartesian(xlim = c(-0.5, 1)) + theme(aspect.ratio = 1) # annotate(&quot;text&quot;, x = 0.5, y = 4, label = &quot;p&lt;&lt;0.001 (KS)&quot;, size = 2, family = &quot;Arial&quot;) fc_p ## Warning: Removed 2710 rows containing non-finite values (stat_density). head(df_fc) ## # A tibble: 6 x 10 ## chrom start end ER 1N 2N &gt;=3N type diff ## 1 chrX 9983293 9983844 ER- 7.880753 7.976930 8.193818 X 0.216887405 ## 2 chrX 14891025 14891576 ER- 7.175153 7.258638 7.427273 X 0.168634811 ## 3 chrX 14891133 14891684 ER- 6.111207 6.018312 6.172959 X 0.154646592 ## 4 chrX 15353625 15354176 ER- 7.884146 7.926416 8.264637 X 0.338220886 ## 5 chrX 16964312 16964863 ER- 6.916974 7.004652 7.381009 X 0.376356425 ## 6 chrX 17393041 17393592 ER- 6.256066 6.338770 6.347885 X 0.009114449 ## diff1 ## 1 0.09617691 ## 2 0.08348508 ## 3 -0.09289491 ## 4 0.04227070 ## 5 0.08767872 ## 6 0.08270411 thresh &lt;- 0.1 autosome_cna_meth_expr &lt;- get_autosome_cna_meth_expr() dosage_cands &lt;- autosome_cna_meth_expr %&gt;% filter(`&gt;=3N` &gt;= (`2N` + thresh) ) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5) dosage_cands_1N &lt;- autosome_cna_meth_expr %&gt;% filter(`1N` &lt;= (`2N` - thresh) ) %&gt;% filter(`n_1N` &gt;= 5, `n_2N` &gt;= 5) dosage_cands_expr &lt;- dosage_cands %&gt;% select(chrom, start, end, ER, `1N` = `expr_1N`, `2N` = `expr_2N`, `&gt;=3N` = `expr_&gt;=3N`) dosage_cands_expr_1N &lt;- dosage_cands_1N %&gt;% select(chrom, start, end, ER, `1N` = `expr_1N`, `2N` = `expr_2N`) df_fc &lt;- get_xist_expr_cna() %&gt;% mutate(type = &quot;X&quot;) %&gt;% bind_rows(autosome_expr_cna %&gt;% anti_join(dosage_cands_expr) %&gt;% mutate(type = &quot;auto&quot;)) %&gt;% bind_rows(dosage_cands_expr %&gt;% mutate(type = &quot;auto-dosage&quot;)) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(ER)) %&gt;% mutate(type = factor(type, levels=c(&quot;X&quot;, &quot;auto&quot;, &quot;auto-dosage&quot;))) %&gt;% arrange(type) %&gt;% mutate(diff = `&gt;=3N` - `2N`) ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;ER&quot;, &quot;&gt;=3N&quot;, &quot;1N&quot;, &quot;2N&quot;) fc_p &lt;- df_fc %&gt;% ggplot(aes(color = type, x = diff)) + geom_density(size = 0.5) + theme(aspect.ratio = 1) + xlab(&quot;log expression fold change (&gt;=3N/2N)&quot;) + ylab(&quot;&quot;) + scale_color_manual(values = c(&quot;auto&quot; = &quot;red&quot;, &quot;auto-dosage&quot; = &quot;blue&quot;, &quot;X&quot; = &quot;gray&quot;)) + # ggsci::scale_color_npg() + coord_cartesian(xlim = c(-0.6, 1)) + theme(aspect.ratio = 1) + facet_wrap(~ER, scale=&quot;free_y&quot;, nrow=1) + guides(color = FALSE) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. df_fc %&gt;% group_by(ER) %&gt;% summarise(p_x_auto = ks.test(diff[type == &quot;X&quot;], diff[type == &quot;auto&quot;])$p.value, p_auto_dosage = ks.test(diff[type == &quot;auto-dosage&quot;], diff[type == &quot;auto&quot;])$p.value) %&gt;% print() ## # A tibble: 2 x 3 ## ER p_x_auto p_auto_dosage ## 1 ER+ 5.535245e-03 0 ## 2 ER- 1.049272e-12 0 df_fc_1N &lt;- get_xist_expr_cna() %&gt;% mutate(type = &quot;X&quot;) %&gt;% bind_rows(autosome_expr_cna %&gt;% anti_join(dosage_cands_expr_1N) %&gt;% mutate(type = &quot;auto&quot;)) %&gt;% bind_rows(dosage_cands_expr_1N %&gt;% mutate(type = &quot;auto-dosage&quot;)) %&gt;% mutate(ER = factor(ER, levels=c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% filter(!is.na(ER)) %&gt;% mutate(type = factor(type, levels=c(&quot;X&quot;, &quot;auto&quot;, &quot;auto-dosage&quot;))) %&gt;% arrange(type) %&gt;% mutate(diff = `1N` - `2N`) ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;ER&quot;, &quot;1N&quot;, &quot;2N&quot;) fc_p_1N &lt;- df_fc_1N %&gt;% ggplot(aes(color = type, x = diff)) + geom_density(size = 0.5) + theme(aspect.ratio = 1) + xlab(&quot;log expression fold change (1N/2N)&quot;) + ylab(&quot;&quot;) + scale_color_manual(values = c(&quot;auto&quot; = &quot;red&quot;, &quot;auto-dosage&quot; = &quot;blue&quot;, &quot;X&quot; = &quot;gray&quot;)) + coord_cartesian(xlim = c(-0.6, 1)) + theme(aspect.ratio = 1) + facet_wrap(~ER, scale=&quot;free_y&quot;, nrow=1) + guides(color = FALSE) ## Warning: `guides(&lt;scale&gt; = FALSE)` is deprecated. Please use `guides(&lt;scale&gt; = ## &quot;none&quot;)` instead. df_fc_1N %&gt;% group_by(ER) %&gt;% summarise(p_x_auto = ks.test(diff[type == &quot;X&quot;], diff[type == &quot;auto&quot;])$p.value, p_auto_dosage = ks.test(diff[type == &quot;auto-dosage&quot;], diff[type == &quot;auto&quot;])$p.value) %&gt;% print() ## # A tibble: 2 x 3 ## ER p_x_auto p_auto_dosage ## 1 ER+ 0 0.025082963 ## 2 ER- 0 0.006876647 fc_p ## Warning: Removed 5500 rows containing non-finite values (stat_density). fc_p_1N ## Warning: Removed 5431 rows containing non-finite values (stat_density). 11.3 Checking dosage compensation on all X loci get_xist_loci ## function () ## { ## { ## xist_expr &lt;- get_gene_expression_mat() %&gt;% filter(name == ## &quot;XIST&quot;) %&gt;% gather(&quot;samp&quot;, &quot;expr&quot;, -(chrom:name3.chr)) %&gt;% ## as_tibble() ## all_norm_meth &lt;- fread(here(&quot;data/all_norm_meth.tsv&quot;)) %&gt;% ## filter(chrom == &quot;chrX&quot;) %&gt;% as_tibble() ## ER_positive_mat &lt;- all_norm_meth %&gt;% select(chrom:end, ## any_of(ER_positive_samples)) %&gt;% intervs_to_mat() ## ER_negative_mat &lt;- all_norm_meth %&gt;% select(chrom:end, ## any_of(ER_negative_samples)) %&gt;% intervs_to_mat() ## xist_expr_vec &lt;- xist_expr %&gt;% select(samp, expr) %&gt;% ## deframe() ## samples &lt;- intersect(names(xist_expr_vec), colnames(ER_positive_mat)) ## ER_pos_cors &lt;- tgs_cor(t(ER_positive_mat[, samples]), ## as.matrix(xist_expr_vec[samples]), pairwise.complete.obs = TRUE) ## samples &lt;- intersect(names(xist_expr_vec), colnames(ER_negative_mat)) ## ER_neg_cors &lt;- tgs_cor(t(ER_negative_mat[, samples]), ## as.matrix(xist_expr_vec[samples]), pairwise.complete.obs = TRUE) ## xist_loci &lt;- cbind(ER_pos_cors, ER_neg_cors) %&gt;% mat_to_intervs() %&gt;% ## filter(V1 &gt;= 0.2 | V2 &gt;= 0.2) %&gt;% distinct(chrom, ## start, end) ## } %cache_df% here(&quot;data/xist_loci.tsv&quot;) %&gt;% as_tibble() ## } ## &lt;bytecode: 0xfcb8860&gt; all_norm_meth_x &lt;- fread(here(&quot;data/all_norm_meth.tsv&quot;)) %&gt;% filter(chrom == &quot;chrX&quot;) %&gt;% as_tibble() X_loci &lt;- all_norm_meth_x %&gt;% distinct(chrom, start, end) get_xist_cna ## function () ## { ## xist_cna &lt;- get_xist_loci() %&gt;% gintervals.neighbors1(cna %&gt;% ## mutate(end = ifelse(start == end, start + 1, end)) %&gt;% ## filter(chrom == &quot;chrX&quot;), maxneighbors = nrow(samp_data)) %&gt;% ## filter(dist == 0) %&gt;% select(chrom, start, end, samp, ## cna = cna_round) ## xist_cna &lt;- xist_cna %&gt;% mutate(cna_grp = cut(cna, breaks = c(-1, ## 0, 1, 2, 10), labels = c(&quot;0N&quot;, &quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% ## filter(cna_grp != &quot;0N&quot;) %&gt;% left_join(samp_data %&gt;% select(samp, ## ER = ER1)) ## return(xist_cna) ## } ## &lt;bytecode: 0x1612c170&gt; X_cna &lt;- X_loci %&gt;% gintervals.neighbors1(cna %&gt;% mutate(end = ifelse(start == end, start + 1, end)) %&gt;% filter(chrom == &quot;chrX&quot;), maxneighbors = nrow(samp_data)) %&gt;% filter(dist == 0) %&gt;% select(chrom, start, end, samp, cna = cna_round) X_cna &lt;- X_cna %&gt;% mutate(cna_grp = cut(cna, breaks = c(-1, 0, 1, 2, 10), labels = c(&quot;0N&quot;, &quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% filter(cna_grp != &quot;0N&quot;) %&gt;% left_join(samp_data %&gt;% select(samp, ER = ER1)) %cache_df% here(&quot;data/X_cna.tsv&quot;) %&gt;% as_tibble() head(X_cna) ## # A tibble: 6 x 7 ## chrom start end samp cna cna_grp ER ## 1 chrX 192489 193040 MB_0006 2 2N ER+ ## 2 chrX 192489 193040 MB_0028 1 1N ER+ ## 3 chrX 192489 193040 MB_0046 1 1N ER+ ## 4 chrX 192489 193040 MB_0050 1 1N ER+ ## 5 chrX 192489 193040 MB_0053 1 1N ER+ ## 6 chrX 192489 193040 MB_0054 2 2N ER+ get_xist_loci_meth ## function () ## { ## get_xist_loci() %&gt;% inner_join(get_promoter_avg_meth()) %&gt;% ## gather(&quot;samp&quot;, &quot;meth&quot;, -(chrom:end)) ## } ## &lt;bytecode: 0x498253b0&gt; X_loci_meth &lt;- X_loci %&gt;% inner_join(get_promoter_avg_meth()) %&gt;% gather(&quot;samp&quot;, &quot;meth&quot;, -(chrom:end)) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) options(repr.plot.width = 5, repr.plot.height = 3) p_boxp_meth_cna_all &lt;- X_cna %&gt;% left_join(X_loci_meth) %&gt;% group_by(cna_grp, ER, chrom, start, end) %&gt;% summarise(meth = mean(meth, na.rm = TRUE)) %&gt;% filter(!is.na(ER)) %&gt;% mutate(cna_grp = factor(cna_grp, levels = c(&quot;1N&quot;, &quot;2N&quot;, &quot;&gt;=3N&quot;))) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;))) %&gt;% ggplot(aes(x = cna_grp, y = meth, fill = ER, group = cna_grp)) + geom_boxplot(linewidth=0.1, fatten=0.5, outlier.size = 0.1) + scale_fill_manual(values = annot_colors$ER1, guide = FALSE) + xlab(&quot;&quot;) + ylab(&quot;Methylation in X promoters&quot;) + facet_grid(. ~ ER) + ylim(0, 1.1) + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;))) + theme( panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() ) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) ## Warning: Ignoring unknown parameters: linewidth p_boxp_meth_cna_all ## Warning: Removed 41928 rows containing non-finite values (stat_boxplot). ## Warning: Removed 41928 rows containing non-finite values (stat_signif). ## Warning: Removed 6 rows containing missing values (geom_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. Looks very similar to the XIST associated version 11.4 % of X lost 11.4.0.1 Extended Data Figure 9C chr_x_len &lt;- gintervals.all() %&gt;% filter(chrom == &quot;chrX&quot;) %&gt;% pull(end) p_x_perc &lt;- cna %&gt;% filter(chrom == &quot;chrX&quot;) %&gt;% mutate(l = end - start) %&gt;% mutate(cna = cut(cna_round, breaks = c(0, 1, 2, 20), include.lowest=TRUE, labels=c(&quot;Loss&quot;, &quot;normal&quot;, &quot;Gain&quot;))) %&gt;% group_by(samp, cna) %&gt;% summarise(p = sum(l) / chr_x_len) %&gt;% filter(cna != &quot;normal&quot;) %&gt;% ungroup() %&gt;% add_ER() %&gt;% filter(!is.na(ER)) %&gt;% ggplot(aes(x=p, color=ER, y=1-..y..)) + stat_ecdf() + facet_wrap(~cna) + scale_color_manual(values=annot_colors$ER1) + theme(aspect.ratio=1) + xlab(&quot;% of X&quot;) + ylab(&quot;% of samples&quot;) + scale_x_continuous(labels=scales::percent) + scale_y_continuous(labels=scales::percent) p_x_perc 11.5 Plot Expression-Methylation correlation for X meth_mat &lt;- all_norm_meth_x %&gt;% select(chrom:end, any_of(ER_positive_samples)) %&gt;% intervs_to_mat() expr_m &lt;- get_gene_expression_mat() %&gt;% select(-any_of(c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;name3.chr&quot;))) expr_mat &lt;- expr_m %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;name&quot;) f &lt;- rowSums(!is.na(expr_mat)) &gt; 0 expr_mat &lt;- expr_mat[f, ] dim(expr_mat) ## [1] 17691 2124 em_cross &lt;- em_cross_cor(meth_mat, expr_mat, meth_cor_thresh = 0.25, expr_cor_thresh = 0.25) %cache_rds% here(&quot;data/X_er_positive_em_cross_cor.rds&quot;) em_cross_clust &lt;- cluster_em_cross_cor(em_cross, k_meth = 32, k_expr = 32) %cache_rds% here(&quot;data/X_er_positive_em_cross_cor_clust.rds&quot;) 11.5.0.1 Extended Data Figure 9A options(repr.plot.width = 8, repr.plot.height = 13) plot_em_cross_cor(em_cross_clust) ## plotting em cross em_cross_clust$em_cross[1:5, 1:5] ## AARS ABCA6 ABCA8 ABCB1 ## chrX_12156083_12156634 -0.009473256 0.069027019 0.089264904 0.014470847 ## chrX_14261885_14262436 -0.029288914 -0.007331325 -0.003098204 -0.054763278 ## chrX_23017576_23018127 0.091659895 -0.029980425 -0.017798906 -0.016557969 ## chrX_23800773_23801324 -0.142085957 0.028894237 0.062800268 -0.001669589 ## chrX_23925621_23926172 -0.080076720 -0.025302800 0.012101469 0.012796371 ## ABI3BP ## chrX_12156083_12156634 0.089861306 ## chrX_14261885_14262436 -0.001929155 ## chrX_23017576_23018127 -0.010672580 ## chrX_23800773_23801324 0.016375597 ## chrX_23925621_23926172 -0.010378608 dim(em_cross_clust$em_cross) ## [1] 1218 595 "],["finding-specific-dosage-compensation-examples.html", "12 Finding specific dosage compensation examples", " 12 Finding specific dosage compensation examples autosome_cands_3n &lt;- get_autosome_dosage_comp_cands(&quot;3N&quot;) head(autosome_cands_3n) ## # A tibble: 6 x 17 ## chrom start end ER 1N 2N &gt;=3N n_&gt;=3N n_1N n_2N ## 1 chr1 762469 763020 ER- 0.008341878 0.007857689 0.007852706 15 60 210 ## 2 chr1 762469 763020 ER+ 0.008089050 0.008125402 0.006506879 12 211 816 ## 3 chr1 762676 763227 ER- 0.021358769 0.026941446 0.028412915 16 67 220 ## 4 chr1 762676 763227 ER+ 0.070967669 0.042346185 0.028590166 16 228 846 ## 5 chr1 762851 763402 ER- 0.022340914 0.029069381 0.029766663 16 67 220 ## 6 chr1 762851 763402 ER+ 0.078736553 0.047128295 0.032413643 15 228 845 ## expr_&gt;=3N expr_1N expr_2N n_expr_&gt;=3N n_expr_1N n_expr_2N name ## 1 NA NA NA NA NA NA LINC01128 ## 2 NA NA NA NA NA NA LINC01128 ## 3 NA NA NA NA NA NA &lt;NA&gt; ## 4 NA NA NA NA NA NA &lt;NA&gt; ## 5 NA NA NA NA NA NA LINC00115 ## 6 NA NA NA NA NA NA LINC00115 thresh &lt;- 0.1 dosage_cands_gain_3n &lt;- autosome_cands_3n %&gt;% filter(`&gt;=3N` &gt;= (`2N` + thresh) ) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5) %&gt;% #, !is.na(name)) %&gt;% select(chrom, start, end, name, ER, `&gt;=3N`, `2N`, `n_&gt;=3N`, n_2N, `expr_&gt;=3N`, `expr_2N`, `n_expr_&gt;=3N`, `n_expr_2N`) %&gt;% arrange(-`&gt;=3N`, ER, name) dosage_cands_gain_3n %&gt;% count(ER) ## # A tibble: 2 x 2 ## ER n ## 1 ER- 197 ## 2 ER+ 279 autosome_cands_4n &lt;- get_autosome_dosage_comp_cands(&quot;4N&quot;) head(autosome_cands_4n) ## # A tibble: 6 x 21 ## chrom start end ER 1N 2N 3N &gt;=4N ## 1 chr1 762469 763020 ER- 0.008341878 0.007857689 0.007852706 NA ## 2 chr1 762469 763020 ER+ 0.008089050 0.008125402 0.006234499 0.007324019 ## 3 chr1 762676 763227 ER- 0.021358769 0.026941446 0.028412915 NA ## 4 chr1 762676 763227 ER+ 0.070967669 0.042346185 0.032404898 0.012059659 ## 5 chr1 762851 763402 ER- 0.022340914 0.029069381 0.029766663 NA ## 6 chr1 762851 763402 ER+ 0.078736553 0.047128295 0.037778446 0.010954431 ## n_&gt;=4N n_1N n_2N n_3N expr_&gt;=4N expr_1N expr_2N expr_3N n_expr_&gt;=4N n_expr_1N ## 1 NA 60 210 15 NA NA NA NA NA NA ## 2 3 211 816 9 NA NA NA NA NA NA ## 3 NA 67 220 16 NA NA NA NA NA NA ## 4 3 228 846 13 NA NA NA NA NA NA ## 5 NA 67 220 16 NA NA NA NA NA NA ## 6 3 228 845 12 NA NA NA NA NA NA ## n_expr_2N n_expr_3N name ## 1 NA NA LINC01128 ## 2 NA NA LINC01128 ## 3 NA NA &lt;NA&gt; ## 4 NA NA &lt;NA&gt; ## 5 NA NA LINC00115 ## 6 NA NA LINC00115 thresh &lt;- 0.1 dosage_cands_gain_4n &lt;- autosome_cands_4n %&gt;% filter(`&gt;=4N` &gt;= (`2N` + thresh) ) %&gt;% filter(`n_&gt;=4N` &gt;= 5, `n_2N` &gt;= 5) %&gt;% #, !is.na(name)) %&gt;% select(chrom, start, end, name, ER, `&gt;=4N`, `2N`, `n_&gt;=4N`, n_2N, `expr_&gt;=4N`, `expr_2N`, `n_expr_&gt;=4N`, `n_expr_2N`) %&gt;% arrange(-`&gt;=4N`, ER, name) dosage_cands_gain_4n %&gt;% count(ER) ## # A tibble: 2 x 2 ## ER n ## 1 ER- 261 ## 2 ER+ 522 dosage_cands_loss &lt;- autosome_cna_meth_expr %&gt;% filter(`1N` &lt;= (`2N` - thresh) ) %&gt;% filter(`n_1N` &gt;= 5, `n_2N` &gt;= 5) %&gt;% select(chrom, start, end, name, ER, `1N`, `2N`, `n_1N`, n_2N, `expr_1N`, `expr_2N`, `n_expr_1N`, `n_expr_2N`) %&gt;% arrange(-`n_1N`, ER, name) dosage_cands_loss %&gt;% count(ER) ## ER n ## 1 ER- 23 ## 2 ER+ 25 df &lt;- get_autosome_meth_cna() Validating that we have enough samples for each locus: auto_cna &lt;- get_autosome_cna() %&gt;% inner_join(get_autosome_loci_meth()) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) num_cna_meth &lt;- auto_cna %&gt;% filter(!is.na(meth)) %&gt;% count(chrom, start, end, ER, cna_grp) %&gt;% mutate(cna_grp = paste0(&quot;n_&quot;, cna_grp)) %&gt;% spread(cna_grp, n) num_cna_meth %&gt;% gather(&#39;type&#39;, &#39;num&#39;, -(chrom:ER)) %&gt;% group_by(chrom, start, end, ER) %&gt;% mutate(p = num / sum(num)) %&gt;% select(-num) %&gt;% spread(type, p) %&gt;% ggplot(aes(x=`n_1N`, y=`n_2N`, color=ER)) + geom_point() + scale_color_manual(values=annot_colors$ER1, guide = FALSE) + theme(aspect.ratio=1) ## Warning: Removed 5 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. num_cna_meth %&gt;% gather(&#39;type&#39;, &#39;num&#39;, -(chrom:ER)) %&gt;% group_by(chrom, start, end, ER) %&gt;% mutate(p = num / sum(num)) %&gt;% select(-num) %&gt;% spread(type, p) %&gt;% ggplot(aes(x=`n_2N`, y=`n_&gt;=3N`, color=ER)) + geom_point() + scale_color_manual(values=annot_colors$ER1, guide = FALSE) + theme(aspect.ratio=1) ## Warning: Removed 5 rows containing missing values (geom_point). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. df &lt;- df %&gt;% left_join(num_cna_meth) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;ER&quot;) df_expr &lt;- get_autosome_expr_cna() %&gt;% gather(&quot;cna&quot;, &quot;expr&quot;, -(chrom:ER)) %&gt;% mutate(cna = paste0(&quot;expr_&quot;, cna)) %&gt;% spread(cna, expr) df &lt;- df %&gt;% left_join(df_expr) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;ER&quot;) num_cna_expr &lt;- get_autosome_cna() %&gt;% inner_join(get_autosome_loci_expr()) %&gt;% filter(!is.na(expr)) %&gt;% count(chrom, start, end, ER, cna_grp) %&gt;% mutate(cna_grp = paste0(&quot;n_expr_&quot;, cna_grp)) %&gt;% spread(cna_grp, n) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) df &lt;- df %&gt;% left_join(num_cna_expr) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;ER&quot;) df &lt;- df %&gt;% left_join(get_gene_expression_mat() %&gt;% select(chrom:end, name) %&gt;% mutate(start = start + 1, end = end + 1)) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) fwrite(df, here(&quot;data/autosome_cna_meth_expr.tsv&quot;), sep=&quot;\\t&quot;) thresh &lt;- 0.1 options(repr.plot.width = 4, repr.plot.height = 4) df %&gt;% ggplot(aes(x = `2N`, y = `&gt;=3N`, color = ER)) +geom_point(size=0.2) + geom_abline(color = &quot;black&quot;, linetype = &quot;dashed&quot;) + scale_color_manual(values = annot_colors$ER1, guide = FALSE) + theme(aspect.ratio = 1) + geom_line(data = tibble(`2N` = seq(0,1,0.001), `&gt;=3N`= `2N` - thresh), color=&quot;red&quot;, linetype=&quot;dashed&quot;) + geom_line(data = tibble(`2N` = seq(0,1,0.001), `&gt;=3N`= `2N` + thresh), color=&quot;red&quot;, linetype = &quot;dashed&quot;) + xlim(0,1) + ylim(0,1) ## Warning: Removed 100 row(s) containing missing values (geom_path). ## Warning: Removed 100 row(s) containing missing values (geom_path). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. df %&gt;% filter(`&gt;=3N` &gt;= (`2N` + thresh) ) %&gt;% select(chrom, start, end, ER, `&gt;=3N`, `2N`, `n_&gt;=3N`, n_2N, `expr_&gt;=3N`, `expr_2N`, `n_expr_&gt;=3N`, `n_expr_2N`, name) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5, !is.na(name)) %&gt;% arrange(-`n_&gt;=3N`, ER, name) %&gt;% ggplot(aes(x=(`expr_&gt;=3N` - `expr_2N`))) + geom_density() + xlim(-0.5, 1) df %&gt;% filter(`&gt;=3N` &gt;= (`2N` + thresh) ) %&gt;% select(chrom, start, end, ER, `&gt;=3N`, `2N`, `n_&gt;=3N`, n_2N, `expr_&gt;=3N`, `expr_2N`, `n_expr_&gt;=3N`, `n_expr_2N`, name) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5, !is.na(name)) %&gt;% arrange(-`n_&gt;=3N`, ER, name) ## # A tibble: 0 x 13 ## [1] chrom start end ER &gt;=3N 2N ## [7] n_&gt;=3N n_2N expr_&gt;=3N expr_2N n_expr_&gt;=3N n_expr_2N ## [13] name ## &lt;0 rows&gt; (or 0-length row.names) df %&gt;% filter(`&gt;=3N` &lt;= (`2N` - thresh) ) %&gt;% select(chrom, start, end, ER, `&gt;=3N`, `2N`, `n_&gt;=3N`, n_2N, `expr_&gt;=3N`, `expr_2N`, `n_expr_&gt;=3N`, `n_expr_2N`, name) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5, !is.na(name)) ## # A tibble: 0 x 13 ## [1] chrom start end ER &gt;=3N 2N ## [7] n_&gt;=3N n_2N expr_&gt;=3N expr_2N n_expr_&gt;=3N n_expr_2N ## [13] name ## &lt;0 rows&gt; (or 0-length row.names) dosage_cands &lt;- df %&gt;% filter(`&gt;=3N` &gt;= (`2N` + thresh) ) %&gt;% select(chrom, start, end, ER, `&gt;=3N`, `2N`, `n_&gt;=3N`, n_2N, `expr_&gt;=3N`, `expr_2N`, `n_expr_&gt;=3N`, `n_expr_2N`, name) %&gt;% filter(`n_&gt;=3N` &gt;= 5, `n_2N` &gt;= 5, !is.na(name)) %&gt;% arrange(-`n_&gt;=3N`, ER, name) dosage_cands_mean_expr &lt;- dosage_cands %&gt;% select(chrom, start, end, ER) %&gt;% inner_join(get_gene_expression_mat() %&gt;% select(-name3.chr) %&gt;% mutate(start = start + 1, end = end + 1)) %&gt;% gather(&quot;samp&quot;, &quot;expr&quot;, -(chrom:name)) %&gt;% left_join(samp_data %&gt;% select(samp, ER1)) %&gt;% filter(ER == ER1) %&gt;% group_by(chrom, start, end, name, ER) %&gt;% summarise(mean_expr = mean(expr, na.rm=TRUE)) %&gt;% ungroup() ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = &quot;samp&quot; all_mean_expr &lt;- get_gene_expression_mat() %&gt;% select(-name3.chr) %&gt;% mutate(start = start + 1, end = end + 1) %&gt;% gather(&quot;samp&quot;, &quot;expr&quot;, -(chrom:name)) %&gt;% left_join(samp_data %&gt;% select(samp, ER1)) %&gt;% group_by(chrom, start, end, name, ER1) %&gt;% summarise(mean_expr = mean(expr, na.rm=TRUE)) %&gt;% ungroup() ## Joining, by = &quot;samp&quot; dosage_cands_mean_expr %&gt;% mutate(type = &quot;dosage&quot;) %&gt;% bind_rows(all_mean_expr %&gt;% mutate(type = &quot;all&quot;)) %&gt;% ggplot(aes(x=mean_expr, color=type)) + geom_density() ## Warning: Removed 34216 rows containing non-finite values (stat_density). get_xist_cna() %&gt;% left_join(get_xist_loci_expr()) %&gt;% group_by(cna_grp, samp, ER, chrom, start, end) %&gt;% summarise(expr = mean(expr, na.rm = TRUE)) %&gt;% ggplot(aes(x = cna_grp, y = expr, fill = ER, group = cna_grp)) + geom_boxplot(outlier.size = 0.1) + scale_fill_manual(values = annot_colors$ER1, guide = FALSE) + xlab(&quot;&quot;) + ylab(&quot;Expression in Xist\\nassociated promoters&quot;) + facet_grid(. ~ ER) + ggpubr::stat_compare_means(label = &quot;p.signif&quot;, comparisons = list(c(&quot;1N&quot;, &quot;2N&quot;), c(&quot;2N&quot;, &quot;&gt;=3N&quot;))) ## Joining, by = &quot;samp&quot; ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;) ## Joining, by = c(&quot;chrom&quot;, &quot;start&quot;, &quot;end&quot;, &quot;samp&quot;) ## Warning: Removed 569263 rows containing non-finite values (stat_boxplot). ## Warning: Removed 569263 rows containing non-finite values (stat_signif). ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please ## use `guide = &quot;none&quot;` instead. gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 5486807 293.1 38886436 2076.8 60760054 3245.0 ## Vcells 1399051102 10674.0 2838607215 21656.9 2825762492 21558.9 "],["export-supplementary-tables.html", "13 Export supplementary tables 13.1 Table 1: METABRIC samples metadata 13.2 Table 2: Immune expression signature 13.3 Table 3: CAF expression signature 13.4 Table 4: Expression-Methylation correlation 13.5 Table 5: Methylation scores 13.6 Table 6: Gene expression correlation to epigenomic instability 13.7 Table 7: Methylation layers loci 13.8 Table 8: Cis regulation candidates 13.9 Table 9: Dosage compensation in autosomes", " 13 Export supplementary tables source(here::here(&quot;scripts/init.R&quot;)) 13.1 Table 1: METABRIC samples metadata METABRIC samples profiled in this study. Metadata fields are: samp patient batch track total_reads mapped_reads mapped_frac cg_num meth_calls global_avg_meth type age grade stage ER IHC iC10 PAM50 matched_normal matched_tumor digpath_lymph digpath_stromal IMC_Fibroblasts IMC_Lymphocytes ASCAT_cellularity ASCAT_ploidy MathScore log10_global_epm samp_qc &lt;- fread(here(&quot;data/sample_qc.csv&quot;)) %&gt;% as_tibble() tab &lt;- samp_data %&gt;% left_join(samp_qc) %&gt;% select(samp, patient, batch, track, total_reads, mapped_reads, mapped_frac, cg_num, meth_calls, global_avg_meth, type, age, grade, stage, ER, IHC, iC10, PAM50, matched_normal, matched_tumor, digpath_lymph, digpath_stromal, IMC_Fibroblasts, IMC_Lymphocytes, ASCAT_cellularity, MathScore, log10_global_epm) ## Joining, by = &quot;track&quot; writexl::write_xlsx(tab, here(&quot;export/S1 - Sample Information.xlsx&quot;)) 13.2 Table 2: Immune expression signature Table of genes that were used to define the Immune expression signature, separated by ER status. immune_genes_tab &lt;- map2_dfr(c(&quot;ER_positive&quot;, &quot;ER_negative&quot;, &quot;normal&quot;), c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;), ~ tibble(gene = get_TME_genes(readr::read_rds(here(glue(&quot;data/{.x}_norm_meth.rds&quot;)))$em_cross_clust, caf_gene = NULL)) %&gt;% mutate(ER = .y) ) %cache_df% here(&quot;data/immune_genes_by_er.tsv&quot;) immune_genes_tab %&gt;% count(ER) ## ER n ## 1 ER- 345 ## 2 ER+ 195 ## 3 normal 864 head(immune_genes_tab) ## gene ER ## 1 ACAP1 ER+ ## 2 ADA ER+ ## 3 ADAM7 ER+ ## 4 AIM2 ER+ ## 5 AOAH ER+ ## 6 APBB1IP ER+ writexl::write_xlsx(immune_genes_tab, here(&quot;export/S2 - Immune expression signature.xlsx&quot;)) 13.3 Table 3: CAF expression signature Table of genes that were used to define the CAF expression signature, separated by ER status. caf_genes_tab &lt;- map2_dfr(c(&quot;ER_positive&quot;, &quot;ER_negative&quot;, &quot;normal&quot;), c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;), ~ tibble(gene = get_TME_genes(readr::read_rds(here(glue(&quot;data/{.x}_norm_meth.rds&quot;)))$em_cross_clust, immune_gene = NULL)) %&gt;% mutate(ER = .y) ) %cache_df% here(&quot;data/caf_genes_by_er.tsv&quot;) caf_genes_tab %&gt;% count(ER) ## ER n ## 1 ER- 360 ## 2 ER+ 207 ## 3 normal 592 head(caf_genes_tab) ## gene ER ## 1 ABCA6 ER+ ## 2 ABCA8 ER+ ## 3 ABCB1 ER+ ## 4 ACVRL1 ER+ ## 5 ADAMTS9 ER+ ## 6 ALDH1A2 ER+ writexl::write_xlsx(caf_genes_tab, here(&quot;export/S3 - CAF expression signature.xlsx&quot;)) 13.4 Table 4: Expression-Methylation correlation Expression-Methylation correlation tables. Shown are pairs of tables of the following datasets: 1. Raw promoter methylation (Extended Data Fig. 2a,b). 2. Immune-CAF normalized methylation for loci that were correlated with MG/ML epigenomic instability (Fig. 2f). 3. X chromosome immune-CAF normalized methylation (Extended Data Fig 9a). Each dataset is represented by an expression table, showing the mean correlation of each one of 30/32 methylation clusters in each gene, and a methylation table showing the mean correlation of every locus to 30/32 expression clusters. em_raw &lt;- list( `ER+` = readr::read_rds(here(&quot;data/ER_positive_norm_meth.rds&quot;))$em_cross_clust, `ER-` = readr::read_rds(here(&quot;data/ER_negative_norm_meth.rds&quot;))$em_cross_clust, `normal` = readr::read_rds(here(&quot;data/normal_norm_meth.rds&quot;))$em_cross_clust ) em_raw &lt;- map(em_raw, parse_em_cors) norm_em &lt;- readr::read_rds(here(&quot;data/MG_ML_em_cross_cor_clust.rds&quot;)) norm_em &lt;- parse_em_cors(norm_em) x_em &lt;- readr::read_rds(here(&quot;data/X_er_positive_em_cross_cor_clust.rds&quot;)) x_em &lt;- parse_em_cors(x_em) sheets &lt;- list( &quot;Raw promoters ER+ (Expression)&quot; = em_raw[[&quot;ER+&quot;]]$expr_tab, &quot;Raw promoters ER+ (Methylation)&quot; = em_raw[[&quot;ER+&quot;]]$meth_tab, &quot;Raw promoters ER- (Expression)&quot; = em_raw[[&quot;ER-&quot;]]$expr_tab, &quot;Raw promoters ER- (Methylation)&quot; = em_raw[[&quot;ER-&quot;]]$meth_tab, &quot;MG,ML loci ER+ (Expression)&quot; = norm_em$expr_tab, &quot;MG,ML loci ER+ (Methylation)&quot; = norm_em$meth_tab, &quot;X chromosome ER+ (Expression)&quot; = x_em$expr_tab, &quot;X chromosome ER+ (Methylation)&quot; = x_em$meth_tab ) writexl::write_xlsx(sheets, here(&quot;export/S4 - Expression-methylation correlations.xlsx&quot;)) 13.5 Table 5: Methylation scores Table with CAF, Immune, Clock, MG and ML methylation scores per METABRIC sample. tab &lt;- get_all_features() writexl::write_xlsx(tab, here(&quot;export/S5 - Methylation scores.xlsx&quot;)) 13.6 Table 6: Gene expression correlation to epigenomic instability Tables of genes that have an absolute expression correlation higher than 0.3 to MG/ML/Clock scores, together with their respective correlations. feat_gene_cors &lt;- get_expression_features_cors() cor_thresh &lt;- 0.3 tab &lt;- feat_gene_cors %&gt;% filter(abs(MG) &gt;= cor_thresh | abs(ML) &gt;= cor_thresh | abs(clock) &gt; cor_thresh) %&gt;% mutate(ER = factor(ER, levels = c(&quot;ER+&quot;, &quot;ER-&quot;, &quot;normal&quot;))) %&gt;% select(name, ER, clock.cor = clock, MG.cor = MG, ML.cor = ML, caf.cor = caf, immune.cor = immune) %&gt;% arrange(ER, clock.cor, MG.cor, ML.cor) writexl::write_xlsx(tab, here(&quot;export/S6 - Gene expression correlation to methylation scores.xlsx&quot;)) 13.7 Table 7: Methylation layers loci Coordinates of loci that were used in order to calculate the CAF, Immune, Clock, MG and ML scores. clust_df &lt;- fread(here(&quot;data/ER_positive_loci_clust.tsv&quot;) ) %&gt;% as_tibble() tab &lt;- clust_df %&gt;% rename(layer = clust) %&gt;% filter(layer %in% c(&quot;ML&quot;, &quot;MG&quot;, &quot;clock&quot;)) %&gt;% arrange(layer, chrom, start, end) head(tab) ## # A tibble: 6 x 4 ## chrom start end layer ## 1 chr1 134998 135215 clock ## 2 chr1 837884 838076 clock ## 3 chr1 907866 908002 clock ## 4 chr1 996514 996647 clock ## 5 chr1 1086481 1086732 clock ## 6 chr1 1381236 1381347 clock writexl::write_xlsx(tab, here(&quot;export/S7 - Methylation layers loci.xlsx&quot;)) 13.8 Table 8: Cis regulation candidates Pairs of loci and genes that are candidates for cis regulation in different FDR thresholds. Promoters and genomic loci are shown in separate tables. min_dist &lt;- 5e5 min_tss_dist &lt;- 200 genomic_cis_cands &lt;- bind_rows( fread(here(&quot;data/genomic_cis_cands_ER_positive.tsv&quot;)), fread(here(&quot;data/genomic_cis_cands_ER_negative.tsv&quot;)), fread(here(&quot;data/genomic_cis_cands_normal.tsv&quot;))) head(genomic_cis_cands) ## chrom start end type rank gene cor chrom_expr start_expr ## 1 chr1 10496 10587 obs 1 CT45A3 -0.2446525 chrX 134883487 ## 2 chr1 10588 10639 obs 1 DSCR8 -0.1658337 chr21 39493544 ## 3 chr1 134998 135215 obs 1 MAGEC2 -0.2381125 chrX 141293076 ## 4 chr1 546168 546310 obs 1 MAGEA8 -0.2542376 chrX 149009940 ## 5 chr1 565396 565791 obs 1 RAD51C -0.2153869 chr17 56769933 ## 6 chr1 567121 567237 obs 1 TIMM23 -0.2271249 chr10 51623386 ## end_expr strand_expr dist n_obs n_shuff fdr ER ## 1 134883488 1 NA 2680 92 0.03432836 ER+ ## 2 39493545 1 NA 2680 92 0.03432836 ER+ ## 3 141293077 -1 NA 2680 92 0.03432836 ER+ ## 4 149009941 1 NA 2680 92 0.03432836 ER+ ## 5 56769934 1 NA 2680 92 0.03432836 ER+ ## 6 51623387 -1 NA 2680 92 0.03432836 ER+ dim(genomic_cis_cands) ## [1] 55616700 16 cands_genomic &lt;- genomic_cis_cands %&gt;% filter(type == &quot;obs&quot;, !is.na(dist), abs(dist) &lt;= min_dist, abs(dist) &gt;= min_tss_dist) %&gt;% arrange(cor) %&gt;% as_tibble() source(here::here(&quot;scripts/init.R&quot;)) genomic_list &lt;- list( `Genomic (best correlation)` = cands_genomic %&gt;% filter(rank == 1), `Genomic (FDR &lt; 0.05)` = cands_genomic %&gt;% filter(fdr &lt; 0.05), `Genomic (FDR &lt; 0.1)` = cands_genomic %&gt;% filter(fdr &lt; 0.1) ) genomic_list &lt;- map(genomic_list, ~ annotate_cis_cands(.x, sigma_meth = 2, sigma_expr = 2, meth_diff = 0.2, expr_diff = 1)) ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; genomic_list &lt;- map(genomic_list, ~ .x %&gt;% select(gene, ER, chrom, start, end, distance = dist, fdr, rank, cor, mean_meth, sd_meth, mean_expr, sd_expr, normal_meth, normal_meth_sd, normal_expr, normal_expr_sd, n_hypometh, n_induced, n_hypermeth, n_repressed, N_considered, n_hypometh_vs_normal, n_stable_vs_normal, n_hypermeth_vs_normal, n_repressed_vs_normal, n_stable_expr_vs_normal, n_induced_vs_normal) %&gt;% arrange(cor) ) cands_prom &lt;- fread(here(&quot;data/promoter_cis_cands.tsv&quot;)) %&gt;% as_tibble() prom_list &lt;- list( `Promoters (best correlation)` = cands_prom %&gt;% filter(r == 1), `Promoters (FDR &lt; 0.005)` = cands_prom %&gt;% filter(fdr &lt; 0.005), `Promoters (FDR &lt; 0.01)` = cands_prom %&gt;% filter(fdr &lt; 0.01), `Promoters (FDR &lt; 0.05)` = cands_prom %&gt;% filter(fdr &lt; 0.05) ) prom_list &lt;- map(prom_list, ~ annotate_cis_cands(.x %&gt;% rename(gene = name), sigma_meth = 2, sigma_expr = 2, meth_diff = 0.2, expr_diff = 1)) ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;coord&quot; ## Joining, by = &quot;gene&quot; ## Joining, by = &quot;gene&quot; prom_list &lt;- map(prom_list, ~ .x %&gt;% mutate(diff = abs(best - kth)) %&gt;% select(gene, ER, chrom, start, end, fdr, rank = r, cor, diff_from_second_best = diff, mean_meth, sd_meth, mean_expr, sd_expr, normal_meth, normal_meth_sd, normal_expr, normal_expr_sd, n_hypometh, n_induced, n_hypermeth, n_repressed, N_considered, n_hypometh_vs_normal, n_stable_vs_normal, n_hypermeth_vs_normal, n_repressed_vs_normal, n_stable_expr_vs_normal, n_induced_vs_normal) %&gt;% arrange(cor) ) cis_cands &lt;- c(prom_list, genomic_list) writexl::write_xlsx(x = cis_cands, path = here(&quot;export/S8 - Cis Regulation Candidates.xlsx&quot;)) 13.9 Table 9: Dosage compensation in autosomes Table of autosome promoters that show increase of at least 10% in methylation when amplified to at least 3N vs 2N (‘Gain 3N’ table), at least 4N vs 2N (‘Amplification 4N’). The table ‘Loss’ shows loci that showed decreased methylation of at least 10% when losing a copy (1N vs 2N). gen_dosage_comp_excel() gc() ## used (Mb) gc trigger (Mb) max used (Mb) ## Ncells 4173577 222.9 8029078 428.8 8029078 428.8 ## Vcells 2635840254 20109.9 5129628008 39136.0 5101547905 38921.8 "],["files-needed-for-the-analysis.html", "14 Files needed for the analysis 14.1 Misha DB 14.2 Additional files", " 14 Files needed for the analysis Due to the size of the METABRIC-RRBS dataset (~2.2TB full, 55GB only pileup), we generated a few smaller processed files to help reproduce the analysis. See scripts that generate those files at raw-data.Rmd and pipeline.Rmd. In addition, during the analysis some files are heavy to compute and therefore are cached for convenience. See below a list of all the files. In general - in order to run the analysis notebooks you would need to first download the processed files from https://tanaylab.weizmann.ac.il/metabric_rrbs/analysis_files.tar.gz. The analysis files bundle contains a misha db and additional processed files: 14.1 Misha DB A misha database of hg19 is needed for the analysis. It contains the basic intervals such as gene annotations, together with additional tracks that are used in the analysis. You can see those tracks at the configuration file. 14.2 Additional files 14.2.1 METABRIC data Promoter methylation: all: data/promoter_avg_meth.csv filtered (coverage &gt;= 20 in at least 70% of tumor samples and 70% of normal samples): data/promoter_avg_meth_filt.csv coverage: data/promoter_cov.csv Non-promoter methylation (MSP1 fragments, not on promoter and at least 10 bp frmom exon): all: data/genomic_msp1_avg_meth.csv filtered (coverage &gt;= 20 in at least 70% of tumor samples and 70% of normal samples): data/genomic_msp1_avg_meth_filt.csv Expression data/expression_matrix.csv See raw-data.Rmd for alternative promoter choice. Mean Epipolymorhism per locus: data/loci_epipoly_mean.tsv. See the Epipolymorhism notebook for the code that generated it. Epipolymorphism in cis-regulatated regions: data/promoter_cis_reg_epipoly.tsv, data/genomic_cis_reg_epipoly.tsv Copy Number Abberations data/cna.tsv Mutations: data/mutations.tsv Survival: data/survival.tsv Samples metadata: data/samp_data.csv ### QC files data/sample_qc.csv: per sample coverage statistics. data/sample_coverage_dist.tsv: distribution of CpG coverage per sample. data/cov_cpgs.tsv: CpGs that are covered by at least 5 reads in half or more of the samples. data/cpg_cov_marginal.tsv: Marginal coverage per CpG. data/sample_tot_meth_calls.tsv: Total methylation calls per sample. data/sample_tot_meth_calls_promoters.tsv: Total methylation calls on promoters per sample. data/well_covered_msp1_frags.tsv: coordinates of msp1 fragments that are covered &gt;= 20 in at least 70% of tumor samples and 70% of normal samples data/samp_genomic_meth.tsv: average genomic methylation per sample. 14.2.2 Notable generated files data/all_norm_meth.tsv: TME normalized methylation from ER+/ER- and normal samples for both promoters and genomic regions. data/TME_features.tsv: Immune and CAF features per sample (expression and methylation). data/features_loci_cors.tsv: Correlation between genomic/promoter loci and the epigenomic features. data/data/loci_annot_epigenomic_features.tsv: Epigenomic scores for every genomic/promoter locus in the genome. data/epigenomic_features.tsv: epignomic scores for each samples. data/epigenomic_features_raw_meth.tsv: raw methylation in epignomic scores regions for each samples. data/all_meth_summary.tsv&quot;: Average methylation of all ER+/ER-/normal samples per locus. 14.2.3 Spatial methylation distribution 14.2.3.1 Full chromosomes data/tor_clock_chrom_trace_chr1_10000.tsv data/tor_clock_chrom_trace_chr1_100000.tsv data/tor_clock_chrom_trace_chr10_10000.tsv see [scripts/clock/chromosomal-traces.R] get_tor_clock_chrom_trace. We calculate average methylation in genomic bins for groups of METABRIC samples loss clock (top and bottom 30%). 14.2.3.2 Examples for regulation in-cis data/cis_promoter_examples_cg_meth.tsv: average methylation around promoters shown in Figure 3E. data/cis_genomic_examples_cg_meth.tsv: average methylation around promoters shown in Figure 3H. 14.2.4 Copy number abberations data/pheno.prom.gene.csv: CNA status per sample per promoter, together with the epigenomic features. data/driver_gene_list.csv: a list of driver and tumor suppressor genes. 14.2.5 Genomic annotations See definition at scripts/init_metadata.R, define_genomic_regions. data/k4me3_peaks_intervals.csv data/promoter_intervals.csv data/k27ac_intervals.csv data/enhancer_intervals.csv data/enhancer_intervals_tumors.csv data/k27me3_intervals.csv data/gene_tss.tsv data/gene_tss_coords.tsv data/genes_annot.csv: manual annotation of genes to functional groups (Cell Cycle, Embryonic TF and other). 14.2.6 External resources data/phenoAge.tsv: phenoAge CpGs from PMID: 29676998 data/pheno_age_score.tsv: phenoAge score for METABRIC samples. "],["figures-key.html", "15 Figures key 15.1 Figure 1 15.2 Figure 3 15.3 Figure 4 15.4 Extended Data Figure 1 15.5 Extended Data Figure 2 15.6 Extended Data Figure 3 15.7 Extended Data Figure 4 15.8 Extended Data Figure 5 15.9 Extended Data Figure 6 15.10 Extended Data Figure 7 15.11 Extended Data Figure 8 15.12 Extended Data Figure 9 15.13 Extended Data Figure 10", " 15 Figures key 15.1 Figure 1 a: coverage-stats b: coverage-stats c: coverage-stats d: coverage-stats e: N/A f: TME g: TME h: TME i: Epigenomic scores / Loss-clock j: Loss-clock k: Loss-clock l: Loss-clock m: Loss-clock ## Figure 2 a: Epigenomic scores b: Epigenomic scores c: Epigenomic scores d: epigenomic instability e: epigenomic instability f: epigenomic instability g: epigenomic instability 15.2 Figure 3 a: Cis b: Cis c: Cis d: Cis e: Cis f: Cis g: Cis h: Cis 15.3 Figure 4 a: Epigenomic scores b: mutations c: Epigenomic scores d: Survival e: TBA 15.4 Extended Data Figure 1 a: coverage-stats b: coverage-stats c: coverage-stats d: coverage-stats 15.5 Extended Data Figure 2 a: TME b: TME c: TME d: TBA e: TBA f: TBA g: TBA 15.6 Extended Data Figure 3 a: TME b: TME c: TME d: TME e: TME 15.7 Extended Data Figure 4 a: Epigenomic scores b: Epigenomic scores c: Loss-clock d: Loss-clock e: Loss-clock f: Loss-clock g: Loss-clock h: Loss-clock 15.8 Extended Data Figure 5 a: Loss-clock b: Loss-clock c: Loss-clock d: Epigenomic scores e: Epigenomic scores f: Epigenomic scores g: Epigenomic scores 15.9 Extended Data Figure 6 a: epigenomic instability b: epigenomic instability c: Epigenomic scores d: epigenomic instability 15.10 Extended Data Figure 7 a: Epigenomic scores b: Epignomic instability c: Epignomic instability 15.11 Extended Data Figure 8 a: Cis b: Cis c: Cis d: Cis e: Cis 15.12 Extended Data Figure 9 a: dosage compensation b: dosage compensation c: dosage compensation d: dosage compensation e: dosage compensation f: dosage compensation g: dosage compensation h: dosage compensation i: dosage compensation 15.13 Extended Data Figure 10 a: Epigenomic scores b: Epigenomic scores c: CNA d: Survival e: TBA "]]
